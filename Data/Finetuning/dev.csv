sentence,raw_entities,entities_dict,text
"The parties to the petition were married at Sholapur on December 12, 1957.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['December 12, 1957']"", ""GPE"": ""['Sholapur']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['December 12, 1957']"", 'GPE': ""['Sholapur']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The parties to the petition were married at Sholapur on December 12, 1957. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['December 12, 1957']"", ""GPE"": ""['Sholapur']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Harpreet Singh Inspector/SHO (PW17) and his (appellant's No.1) father-in-law namely Kuljit Singh Dhillon,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Kuljit Singh Dhillon']"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Harpreet Singh']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Kuljit Singh Dhillon']"", 'STATUTE': '[]', 'WITNESS': ""['Harpreet Singh']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Harpreet Singh Inspector/SHO (PW17) and his (appellant's No.1) father-in-law namely Kuljit Singh Dhillon [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Kuljit Singh Dhillon']"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Harpreet Singh']""} </s>"
"Generally speaking, surtax is charged only on individuals, not on companies or other bodies corporate.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Generally speaking, surtax is charged only on individuals, not on companies or other bodies corporate. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On the other hand, it was urged by learned counsel for the petitioner with reference to the sentence.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On the other hand, it was urged by learned counsel for the petitioner with reference to the sentence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The object of this Rule is to fix responsibility for allegations made in the plaint on the persons who verify and this is to ensure that false allegations are not made freely and recklessly. ...‖ 8.6.3. Sri Shamrao Rukamanna Talwar v. Smt. Suvarna, ILR 2008 Karnataka 1493- ―23.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sri Shamrao Rukamanna Talwar v. Smt. Suvarna, ILR 2008 Karnataka 1493-']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Sri Shamrao Rukamanna Talwar v. Smt. Suvarna, ILR 2008 Karnataka 1493-']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The object of this Rule is to fix responsibility for allegations made in the plaint on the persons who verify and this is to ensure that false allegations are not made freely and recklessly. ...‖ 8.6.3. Sri Shamrao Rukamanna Talwar v. Smt. Suvarna, ILR 2008 Karnataka 1493- ―23. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sri Shamrao Rukamanna Talwar v. Smt. Suvarna, ILR 2008 Karnataka 1493-']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Maharashtra Tubes Ltd. Vs. Respondent: State Industrial And Investment Corporation Ofmaharashtra Lt Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Maharashtra Tubes Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Industrial And Investment Corporation Ofmaharashtra Lt']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Maharashtra Tubes Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Industrial And Investment Corporation Ofmaharashtra Lt']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Maharashtra Tubes Ltd. Vs. Respondent: State Industrial And Investment Corporation Ofmaharashtra Lt Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Maharashtra Tubes Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Industrial And Investment Corporation Ofmaharashtra Lt']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (civil) 854 of 2002 Appeal (civil) 855 of 2002 Appeal (civil) 870 of 2002 Appeal (civil) 874 of 2002 Appeal (civil) 877 of 2002 Appeal (civil) 878 of 2002 Appeal (civil) 879 of 2002 Appeal (civil) 883 of 2002 Appeal (civil) 7353 of 2002 Appeal (civil) 7354 of 2002 Appeal (civil) 7355 of 2002 Appeal (civil) 7356 of 2002 Appeal (civil) 873 of 2002 Appeal (civil) 876 of 2002 Appeal (civil) 880 of 2002 Appeal (civil) 3552-60 of 2002 Appeal (civil) 4067 of 2002 Appeal (civil) 5380-81 of 2002 Appeal (civil) 875 of 2002 Appeal (civil) 881 of 2002 Appeal (civil) 8467-8499 of 2002 Special Leave Petition (civil) 19373-405 of 2002 Appeal (civil) 8511 of 2002 Special Leave Petition (civil) 12322 of 2002 Appeal (civil) 7314-35 of 2002 Appeal (civil) 3561-65 of 2002 Appeal (civil) 896 of 2002 Appeal (civil) 955 of 2002 Appeal (civil) 8500 of 2002 Special Leave Petition (civil) 7966 of 2002 Petitioner: Bank of India & Ors. Respondent: O.P. Swarnakar etc. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bank of India']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['O.P. Swarnakar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Bank of India']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['O.P. Swarnakar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 854 of 2002 Appeal (civil) 855 of 2002 Appeal (civil) 870 of 2002 Appeal (civil) 874 of 2002 Appeal (civil) 877 of 2002 Appeal (civil) 878 of 2002 Appeal (civil) 879 of 2002 Appeal (civil) 883 of 2002 Appeal (civil) 7353 of 2002 Appeal (civil) 7354 of 2002 Appeal (civil) 7355 of 2002 Appeal (civil) 7356 of 2002 Appeal (civil) 873 of 2002 Appeal (civil) 876 of 2002 Appeal (civil) 880 of 2002 Appeal (civil) 3552-60 of 2002 Appeal (civil) 4067 of 2002 Appeal (civil) 5380-81 of 2002 Appeal (civil) 875 of 2002 Appeal (civil) 881 of 2002 Appeal (civil) 8467-8499 of 2002 Special Leave Petition (civil) 19373-405 of 2002 Appeal (civil) 8511 of 2002 Special Leave Petition (civil) 12322 of 2002 Appeal (civil) 7314-35 of 2002 Appeal (civil) 3561-65 of 2002 Appeal (civil) 896 of 2002 Appeal (civil) 955 of 2002 Appeal (civil) 8500 of 2002 Special Leave Petition (civil) 7966 of 2002 Petitioner: Bank of India & Ors. Respondent: O.P. Swarnakar etc. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bank of India']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['O.P. Swarnakar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is in view of those facts that Lord Denning held that the dependents were not deprived of the contribution provided by the wife and that, therefore, her prospects of going out to work and earning money could not be disregarded.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is in view of those facts that Lord Denning held that the dependents were not deprived of the contribution provided by the wife and that, therefore, her prospects of going out to work and earning money could not be disregarded. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Defendant No. 3 Smt. Shanti Devi is the widow of late Basant Ram.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Basant Ram']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Shanti Devi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Basant Ram']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Shanti Devi']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Defendant No. 3 Smt. Shanti Devi is the widow of late Basant Ram. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Basant Ram']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Shanti Devi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Learned counsel contended that the Objection by the plaintiffs before the sub-divisional officer itself was not maintainable.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Learned counsel contended that the Objection by the plaintiffs before the sub-divisional officer itself was not maintainable. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In support of his submission, Shri Nariman has relied upon many a case to show that issues of mala fides and abuse of fiduciary powers are almost always decided not on the basis of affidavits but on oral evidence.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Nariman']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Nariman']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In support of his submission, Shri Nariman has relied upon many a case to show that issues of mala fides and abuse of fiduciary powers are almost always decided not on the basis of affidavits but on oral evidence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Nariman']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature For Rajasthan At Jaipur Bench Jaipur D.B.Civil Writ Petition No.6090/2004 Kishore Rungta V/s State of Rajasthan & ors. Date when the Order was reserved :- 20.3.2012 Date of pronouncement of Order :- 23.7.2012 Present Hon'ble the Chief Justice Mr.Arun Mishra Hon'ble Ms.Justice Bela M.Trivedi Reportable Mr.Paras Kuhad,Sr.Advocate with ) Sunil Nath, Vivek Dangi )-for the petitioner. Priyanka Nahata & Vishal Sharma ) Mr.G.S.Bapna, Sr.Advocate & ) Advocate General with )- for the State V.Garg & Sarvesh Jain ) Mr.S.M.Mehta, Sr.Advocate with ) Anil Mehta and Nitin Jain )- for respondents. Mr.N.S.Vashistha and ) Mr.Vishal Singh )-for respondent no.6. Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature For Rajasthan At Jaipur Bench Jaipur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Arun Mishra', 'Bela M.Trivedi', 'Sarvesh Jain']"", ""LAWYER"": ""['Paras Kuhad', 'Sunil Nath', 'Vivek Dangi', 'Priyanka Nahata', 'Vishal Sharma', 'G.S.Bapna', 'V.Garg', 'S.M.Mehta', 'Anil Mehta', 'Nitin Jain', 'N.S.Vashistha', 'Vishal Singh']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Kishore Rungta']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Rajasthan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature For Rajasthan At Jaipur Bench Jaipur']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Arun Mishra', 'Bela M.Trivedi', 'Sarvesh Jain']"", 'LAWYER': ""['Paras Kuhad', 'Sunil Nath', 'Vivek Dangi', 'Priyanka Nahata', 'Vishal Sharma', 'G.S.Bapna', 'V.Garg', 'S.M.Mehta', 'Anil Mehta', 'Nitin Jain', 'N.S.Vashistha', 'Vishal Singh']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Kishore Rungta']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Rajasthan']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature For Rajasthan At Jaipur Bench Jaipur D.B.Civil Writ Petition No.6090/2004 Kishore Rungta V/s State of Rajasthan & ors. Date when the Order was reserved :- 20.3.2012 Date of pronouncement of Order :- 23.7.2012 Present Hon'ble the Chief Justice Mr.Arun Mishra Hon'ble Ms.Justice Bela M.Trivedi Reportable Mr.Paras Kuhad,Sr.Advocate with ) Sunil Nath, Vivek Dangi )-for the petitioner. Priyanka Nahata & Vishal Sharma ) Mr.G.S.Bapna, Sr.Advocate & ) Advocate General with )- for the State V.Garg & Sarvesh Jain ) Mr.S.M.Mehta, Sr.Advocate with ) Anil Mehta and Nitin Jain )- for respondents. Mr.N.S.Vashistha and ) Mr.Vishal Singh )-for respondent no.6. Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature For Rajasthan At Jaipur Bench Jaipur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Arun Mishra', 'Bela M.Trivedi', 'Sarvesh Jain']"", ""LAWYER"": ""['Paras Kuhad', 'Sunil Nath', 'Vivek Dangi', 'Priyanka Nahata', 'Vishal Sharma', 'G.S.Bapna', 'V.Garg', 'S.M.Mehta', 'Anil Mehta', 'Nitin Jain', 'N.S.Vashistha', 'Vishal Singh']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Kishore Rungta']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Rajasthan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
High Court was clearly in error in observing that either Dr. Raman (petitioner in R.P. No. 80/76) was not hopeful of getting the job or he had some other reasons for not applying for the same and therefore his grievance cannot 205 be entertained.,"{""CASE_NUMBER"": ""['R.P. No. 80/76']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Raman']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['R.P. No. 80/76']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Raman']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: High Court was clearly in error in observing that either Dr. Raman (petitioner in R.P. No. 80/76) was not hopeful of getting the job or he had some other reasons for not applying for the same and therefore his grievance cannot 205 be entertained. [/INST]
 {""CASE_NUMBER"": ""['R.P. No. 80/76']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Raman']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Petitioner: Parimisetti Seetharamamma Vs. Respondent: Commissioner Of Income-Tax, Hyderabad Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Parimisetti Seetharamamma']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Commissioner Of Income-Tax, Hyderabad']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Parimisetti Seetharamamma']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Commissioner Of Income-Tax, Hyderabad']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Parimisetti Seetharamamma Vs. Respondent: Commissioner Of Income-Tax, Hyderabad Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Parimisetti Seetharamamma']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Commissioner Of Income-Tax, Hyderabad']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: M/S Hindustan Times Limited Vs. Respondent: Union Of India & Others Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Hindustan Times Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union Of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Hindustan Times Limited']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Union Of India']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: M/S Hindustan Times Limited Vs. Respondent: Union Of India & Others Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Hindustan Times Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union Of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Police Station Christianganj, Ajmer registered an FIR bearing No. 66/2008 for the offence punishable under sections 394, 397, 307, 450, 120 B IPC read with section 34 IPC and sections 3/25 of the Arms Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Police Station Christianganj, Ajmer']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['394, 397, 307, 450, 120 B', 'section 34', 'sections 3/25']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC', 'Arms Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Police Station Christianganj, Ajmer']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['394, 397, 307, 450, 120 B', 'section 34', 'sections 3/25']"", 'RESPONDENT': '[]', 'STATUTE': ""['IPC', 'Arms Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Police Station Christianganj, Ajmer registered an FIR bearing No. 66/2008 for the offence punishable under sections 394, 397, 307, 450, 120 B IPC read with section 34 IPC and sections 3/25 of the Arms Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Police Station Christianganj, Ajmer']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['394, 397, 307, 450, 120 B', 'section 34', 'sections 3/25']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC', 'Arms Act']"", ""WITNESS"": ""[]""} </s>"
"At P.S. Sector 23, Dwarka, FIR No. 150/11 was registered under Section 279/304 A of IPC.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['P.S. Sector 23, Dwarka']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 279/304 A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['P.S. Sector 23, Dwarka']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 279/304 A']"", 'RESPONDENT': '[]', 'STATUTE': ""['IPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: At P.S. Sector 23, Dwarka, FIR No. 150/11 was registered under Section 279/304 A of IPC. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['P.S. Sector 23, Dwarka']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 279/304 A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""} </s>"
"Ex.P.273 Cheque dated 10-04-2001 for Rs.46,25,000/- issued by M/s.Praveen & Co. Ex.P.274 Cheque dated 10-04-2001 for Rs.6,00,000/- issued by M/s.Thirumala's.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['10-04-2001']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Praveen & Co.', \""Thirumala's\""]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['10-04-2001']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[\'Praveen & Co.\', ""Thirumala\'s""]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Ex.P.273 Cheque dated 10-04-2001 for Rs.46,25,000/- issued by M/s.Praveen & Co. Ex.P.274 Cheque dated 10-04-2001 for Rs.6,00,000/- issued by M/s.Thirumala's. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['10-04-2001']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Praveen & Co.', \""Thirumala's\""]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"J.N. Bhatt, J. Prelude (Focal Point) Let us at the very outset, evidently record, remember, and recollect that ; ""A civilisation is judged by the way it treats its criminals.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['J.N. Bhatt']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['J.N. Bhatt']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: J.N. Bhatt, J. Prelude (Focal Point) Let us at the very outset, evidently record, remember, and recollect that ; ""A civilisation is judged by the way it treats its criminals."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['J.N. Bhatt']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Before The Madurai Bench Of Madras High Court Dated : 09/09/2008 Coram The Honourable Mr.Justice T.Sudanthiram Crl.O.P.(MD).No.3102 of 2008 Indian Overseas Bank, K.Abishekapuram Branch, Mannarpuram, Tiruchirappallai - 620 020 rep. by the Authorized Officer A.Rasheed Khan ... Petitioner Vs 1.M/s.Sree Aravindh Steels Ltd., a public limited company registered under the Companies Act, 14-a, E.V.R. Road, Puthur, Trichirappalli - 620 017. 2.Sri.Arun Shankar, Managing Director, M/s.Sree Aravindh Steels Ltd., 14-A, E.V.R. Road, Puthur, Trichirappalli - 620 017. 3.Sri.S.B.Shankar, ""Pathmavilla"", 3-B, Bhulabai Desai Road, Chookkikulam, Madurai - 625 002. 4.The Inspector of Police, Thuvakudi Police Station, Thuvakudi, Tiruchirappalli - 620 002. ... Respondents Prayer Petition filed under Section 482 of the Code of Criminal Procedure, to call for the records relating to the order dated 11.12.2007 made in Crl.M.P.No.1472 of 2007 on the file of the learned Chief Judicial Magistrate, Tiruchirappalli and set aside the same and consequently directing the learned Chief Judicial Magistrate, Tiruchirappalli to pass appropriate order in accordance with Section 14 of Sarfaesi Act and take possession of the secured assets and hand over the same to the petitioner bank. !For Petitioner ... Ms.J.Maria Roselin for Mr.V.Sribalaji ^For Respondent ... Mr.P.Rajendran No.4 Government Advocate (Crl. Side) * * * * * :Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madurai Bench Of Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['T.Sudanthiram']"", ""LAWYER"": ""['J.Maria Roselin', 'V.Sribalaji', 'P.Rajendran']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Indian Overseas Bank, K.Abishekapuram Branch, Mannarpuram, Tiruchirappallai - 620 020']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sree Aravindh Steels Ltd.', 'Arun Shankar', 'S.B.Shankar', 'Inspector of Police, Thuvakudi Police Station, Thuvakudi, Tiruchirappalli - 620 002']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Madurai Bench Of Madras High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['T.Sudanthiram']"", 'LAWYER': ""['J.Maria Roselin', 'V.Sribalaji', 'P.Rajendran']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Indian Overseas Bank, K.Abishekapuram Branch, Mannarpuram, Tiruchirappallai - 620 020']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Sree Aravindh Steels Ltd.', 'Arun Shankar', 'S.B.Shankar', 'Inspector of Police, Thuvakudi Police Station, Thuvakudi, Tiruchirappalli - 620 002']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Before The Madurai Bench Of Madras High Court Dated : 09/09/2008 Coram The Honourable Mr.Justice T.Sudanthiram Crl.O.P.(MD).No.3102 of 2008 Indian Overseas Bank, K.Abishekapuram Branch, Mannarpuram, Tiruchirappallai - 620 020 rep. by the Authorized Officer A.Rasheed Khan ... Petitioner Vs 1.M/s.Sree Aravindh Steels Ltd., a public limited company registered under the Companies Act, 14-a, E.V.R. Road, Puthur, Trichirappalli - 620 017. 2.Sri.Arun Shankar, Managing Director, M/s.Sree Aravindh Steels Ltd., 14-A, E.V.R. Road, Puthur, Trichirappalli - 620 017. 3.Sri.S.B.Shankar, ""Pathmavilla"", 3-B, Bhulabai Desai Road, Chookkikulam, Madurai - 625 002. 4.The Inspector of Police, Thuvakudi Police Station, Thuvakudi, Tiruchirappalli - 620 002. ... Respondents Prayer Petition filed under Section 482 of the Code of Criminal Procedure, to call for the records relating to the order dated 11.12.2007 made in Crl.M.P.No.1472 of 2007 on the file of the learned Chief Judicial Magistrate, Tiruchirappalli and set aside the same and consequently directing the learned Chief Judicial Magistrate, Tiruchirappalli to pass appropriate order in accordance with Section 14 of Sarfaesi Act and take possession of the secured assets and hand over the same to the petitioner bank. !For Petitioner ... Ms.J.Maria Roselin for Mr.V.Sribalaji ^For Respondent ... Mr.P.Rajendran No.4 Government Advocate (Crl. Side) * * * * * :Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madurai Bench Of Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['T.Sudanthiram']"", ""LAWYER"": ""['J.Maria Roselin', 'V.Sribalaji', 'P.Rajendran']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Indian Overseas Bank, K.Abishekapuram Branch, Mannarpuram, Tiruchirappallai - 620 020']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sree Aravindh Steels Ltd.', 'Arun Shankar', 'S.B.Shankar', 'Inspector of Police, Thuvakudi Police Station, Thuvakudi, Tiruchirappalli - 620 002']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Shri Rajeev Bansal, Asj-03 (South District), Saket Courts, New Delhi. S.C. No. 45/10 (Unique Id No. 02403R0968372008) Fir No.: 698/08 Ps: Malviya Nagar Us: 328/379/411/34 Ipc Eva Jennifer D/o Walter Antony R/o S-9, Gokul Apartments, Mem Nagar, Ahmadabad, Gujarat. Versus State Date of Initial Institution :02.12.2008 Date of Institution in this court :24.09.2010 Date of Pronouncement Order :12.03.2014 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Asj-03 (South District), Saket Courts, New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rajeev Bansal']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Eva Jennifer']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Asj-03 (South District), Saket Courts, New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Rajeev Bansal']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Eva Jennifer']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Shri Rajeev Bansal, Asj-03 (South District), Saket Courts, New Delhi. S.C. No. 45/10 (Unique Id No. 02403R0968372008) Fir No.: 698/08 Ps: Malviya Nagar Us: 328/379/411/34 Ipc Eva Jennifer D/o Walter Antony R/o S-9, Gokul Apartments, Mem Nagar, Ahmadabad, Gujarat. Versus State Date of Initial Institution :02.12.2008 Date of Institution in this court :24.09.2010 Date of Pronouncement Order :12.03.2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Asj-03 (South District), Saket Courts, New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rajeev Bansal']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Eva Jennifer']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
When the document purports to create or extinguish in the present or in the future any right has to be registered compulsorily.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: When the document purports to create or extinguish in the present or in the future any right has to be registered compulsorily. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Madras Dated : 12..06..2009 C O R A M The Honourable Mrs. Justice Prabha Sridevan and The Honourable Mr. Justice T.S. Sivagnanam C.M.A. No.1851 of 2004 M/s. New India Assurance Company Limited, 46, Moore Street, Chennai-1. .. Appellant versus 1. V. Bommi 2. Minor Saravananan 3. V. Pakkirisamy Naidu 4. V.P. Lakshmi Devi (Minor is represented by 1st respondent) 5. T. Dhakshinamoorthy .. Respondents - - - - - Prayer : Civil Miscellaneous Appeal against the judgment and decree dated 25.3.2004 made in M.C.O.P. No.2789 of 1997 on the file of the Motor Accidents Claims Tribunal (Iv Judge, Court of Small Causes) at Chennai. - - - - - For Appellant : Mr. K.S. Narasimhan For Respondents-1 to 4 : Mr. M. Swamikannu for Mr. A.C. Kumaragurubaran For Respondent-5 : Mr. K. Surendranath J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Prabha Sridevan', 'T.S. Sivagnanam']"", ""LAWYER"": ""['K.S. Narasimhan', 'M. Swamikannu', 'A.C. Kumaragurubaran', 'K. Surendranath']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['New India Assurance Company Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['V. Bommi', 'Minor Saravananan', 'V. Pakkirisamy Naidu', 'V.P. Lakshmi Devi', 'T. Dhakshinamoorthy']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Madras']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Prabha Sridevan', 'T.S. Sivagnanam']"", 'LAWYER': ""['K.S. Narasimhan', 'M. Swamikannu', 'A.C. Kumaragurubaran', 'K. Surendranath']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['New India Assurance Company Limited']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['V. Bommi', 'Minor Saravananan', 'V. Pakkirisamy Naidu', 'V.P. Lakshmi Devi', 'T. Dhakshinamoorthy']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Madras Dated : 12..06..2009 C O R A M The Honourable Mrs. Justice Prabha Sridevan and The Honourable Mr. Justice T.S. Sivagnanam C.M.A. No.1851 of 2004 M/s. New India Assurance Company Limited, 46, Moore Street, Chennai-1. .. Appellant versus 1. V. Bommi 2. Minor Saravananan 3. V. Pakkirisamy Naidu 4. V.P. Lakshmi Devi (Minor is represented by 1st respondent) 5. T. Dhakshinamoorthy .. Respondents - - - - - Prayer : Civil Miscellaneous Appeal against the judgment and decree dated 25.3.2004 made in M.C.O.P. No.2789 of 1997 on the file of the Motor Accidents Claims Tribunal (Iv Judge, Court of Small Causes) at Chennai. - - - - - For Appellant : Mr. K.S. Narasimhan For Respondents-1 to 4 : Mr. M. Swamikannu for Mr. A.C. Kumaragurubaran For Respondent-5 : Mr. K. Surendranath J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Prabha Sridevan', 'T.S. Sivagnanam']"", ""LAWYER"": ""['K.S. Narasimhan', 'M. Swamikannu', 'A.C. Kumaragurubaran', 'K. Surendranath']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['New India Assurance Company Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['V. Bommi', 'Minor Saravananan', 'V. Pakkirisamy Naidu', 'V.P. Lakshmi Devi', 'T. Dhakshinamoorthy']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Learned counsel submitted that the circular of the Inspector General of Registration issued in the year 2007 directing all the Registrars and Sub-Registrars to register cancellation of documents only if both the parties to the documents consent, was challenged before this Court and the said circular was upheld by this Court in the judgment reported in 2009 (6) CTC 1009 (DB).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['2009 (6) CTC 1009 (DB)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['2009 (6) CTC 1009 (DB)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Learned counsel submitted that the circular of the Inspector General of Registration issued in the year 2007 directing all the Registrars and Sub-Registrars to register cancellation of documents only if both the parties to the documents consent, was challenged before this Court and the said circular was upheld by this Court in the judgment reported in 2009 (6) CTC 1009 (DB). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['2009 (6) CTC 1009 (DB)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
In Kaushalya Devi v. Bachittar Singh (AIR 1960 SC 1168) the Supreme Court set aside the order of the High Court interfering with the order of the Deputy Custodian General.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Kaushalya Devi v. Bachittar Singh (AIR 1960 SC 1168)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Kaushalya Devi v. Bachittar Singh (AIR 1960 SC 1168)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Kaushalya Devi v. Bachittar Singh (AIR 1960 SC 1168) the Supreme Court set aside the order of the High Court interfering with the order of the Deputy Custodian General. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Kaushalya Devi v. Bachittar Singh (AIR 1960 SC 1168)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"K. Sen, R. V.Patel Biswar up Gupte, R. N. Jhujhunwala and U. K. Khaitan, for the appellants (in C. A. 212-215).","{""CASE_NUMBER"": ""['C. A. 212-215']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['K. Sen', 'R. V.Patel Biswar up Gupte', 'R. N. Jhujhunwala', 'U. K. Khaitan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['C. A. 212-215']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['K. Sen', 'R. V.Patel Biswar up Gupte', 'R. N. Jhujhunwala', 'U. K. Khaitan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: K. Sen, R. V.Patel Biswar up Gupte, R. N. Jhujhunwala and U. K. Khaitan, for the appellants (in C. A. 212-215). [/INST]
 {""CASE_NUMBER"": ""['C. A. 212-215']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['K. Sen', 'R. V.Patel Biswar up Gupte', 'R. N. Jhujhunwala', 'U. K. Khaitan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The petitioner in W.P.No.15821 of 2008 was never considered for appointment under the National Rural Employment Guarantee Scheme either through Employment Exchange sponsorship or by Outsourcing Agencies.,"{""CASE_NUMBER"": ""['W.P.No.15821 of 2008']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['National Rural Employment Guarantee Scheme']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['W.P.No.15821 of 2008']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['National Rural Employment Guarantee Scheme']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioner in W.P.No.15821 of 2008 was never considered for appointment under the National Rural Employment Guarantee Scheme either through Employment Exchange sponsorship or by Outsourcing Agencies. [/INST]
 {""CASE_NUMBER"": ""['W.P.No.15821 of 2008']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['National Rural Employment Guarantee Scheme']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Further, the prosecution case was that the swami had met Savita on 30.11.1994, in the evening, and tried Crl.A.Nos. 786, 795, 919, 926/2001 Page 33 to cover it up, by asking PW-13 to depose in Court that if questioned by the police, he should tell that he (the swami) had in fact visited PW-13 that time, since he lived in West Patel Nagar.","{""CASE_NUMBER"": ""['Crl.A.Nos. 786, 795, 919, 926/2001']"", ""COURT"": ""[]"", ""DATE"": ""['30.11.1994']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Savita']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Crl.A.Nos. 786, 795, 919, 926/2001']"", 'COURT': '[]', 'DATE': ""['30.11.1994']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Savita']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Further, the prosecution case was that the swami had met Savita on 30.11.1994, in the evening, and tried Crl.A.Nos. 786, 795, 919, 926/2001 Page 33 to cover it up, by asking PW-13 to depose in Court that if questioned by the police, he should tell that he (the swami) had in fact visited PW-13 that time, since he lived in West Patel Nagar. [/INST]
 {""CASE_NUMBER"": ""['Crl.A.Nos. 786, 795, 919, 926/2001']"", ""COURT"": ""[]"", ""DATE"": ""['30.11.1994']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Savita']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 In The High Court Of Karnataka At Bangalore Dated This The 7th Day Of January, 2014 Present The Hon'Ble Mr. Justice Mohan .M. Shantanagoudar And The Hon'Ble Mr. Justice B.Sreenivase Gowda Miscellaneous First Appeal No. 1205/2010 (Mv) C/W Miscellaneous First Appeal No. 54/2010 (Mv) In Mfa 1205/2010: Between: 1. A.Arun S/O.A.Arumugam Aged About 32 Years 2. Kum.A.Ankita D/O.A.Arun Aged About 2 Years Minor Rep.By Her Father And Natural Guardian A.Arun. Both Are R/A.Ground Floor No.121, Shanthi Sadan, Udupi Layout Cambridge Road Ulsoor Bangalore -8. ... Appellants (By Sri R.Chandrashekar For Sri V.R.Sundara Murthy, Adv.) 2 And: 1. Smt.H.B.Pushpa W/O.Hanumanthappa R/A.No.102/203 Bommasandra Industrial Area Hosur Road Bangalore. 2. New India Assurance Co.Ltd., 1St Floor, Kiadb Complex Hosur Road Bommasandra Bangalore 560 099. ... Respondents (By Sri S.V.Hegde Mulkhand, Adv. For R2, R1 Notice Dispensed With V/O.Dated 20.9.2010) *** * This Mfa Is Filed U/S 173(1) Of Mv Act Against The Judgment And Award Dated:30.07.2009 Passed In Mvc No.1640/2005 On The File Of The Viii Additional Judge, Mact-V Court Of Small Causes, Bangalore, Partly Allowing The Claim Petition For Compensation And Seeking Enhancement Of Compensation. In Mfa 54/2010: Between: New India Assurance Company Ltd., First Floor Kiadb Complex Hosur Road, Bommasandra Bangalore, Through Its : Divisional Office No.9/2, Mahalakshmi Chambers M.G.Road, Bangalore 560 001. 3 Represented By Its Sr.Divisional Manager. .... Appellant (By Sri. S.V. Hegde Mulkhand, Adv.) And 1. A.Arun Aged About 36 Years S/O.A.Armugam 2. Kum.A.Ankita Aged About 7 Years D/O.A.Arun Both Are R/O.Ground Floor No.121, Shanthi Sadan Udani Layout Cambridge Road Ulsoor Bangalore 560 008. R2 Is Minor Represented By Her Father And Natural Guardian Respondent No.1. 3. Smt.H.B.Pushpa W/O.Hanumanthappa Major In Age: R/O.No.102/103, Bommasandra Indl.Area Hosur Road Bangalore. .. Respondents (By Sri. R.Chandrashekar, Adv. For Sri V.R.Sundaramurthy, Adv. For R1, R2- Minor Rep.By R1, Sri Vasanthappa, Adv. For R3) * *** * This Mfa Is Filed U/S 173(1) Of Mv Act Against The Judgment And Award Dated 13.12.2006 Passed In Mvc No.1640/2005 On The File Of The Member, Mact, Viii 4 Additional Judge, Court Of Small Causes, Bangalore Awarding A Compensation Of Rs.58,41,000/- With Interest At 6% P.A. From The Date Of Petition Till Deposit. These Appeals Having Been Heard And Reserved For Judgment, Coming On For Pronouncement Of Judgment This Day, B. Sreenivase Gowda J., Delivered The Following: Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Mohan .M. Shantanagoudar', 'B.Sreenivase Gowda', 'B. Sreenivase Gowda']"", ""LAWYER"": ""['R.Chandrashekar', 'V.R.Sundara Murthy', 'S.V.Hegde Mulkhand', 'S.V. Hegde Mulkhand', 'V.R.Sundaramurthy', 'Vasanthappa']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['A.Arun', 'A.Ankita', 'New India Assurance Company Ltd., First Floor Kiadb Complex Hosur Road, Bommasandra Bangalore']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['H.B.Pushpa', 'New India Assurance Co.Ltd., 1St Floor, Kiadb Complex Hosur Road Bommasandra Bangalore 560 099', 'A.Arun', 'A.Ankita']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Karnataka At Bangalore']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Mohan .M. Shantanagoudar', 'B.Sreenivase Gowda', 'B. Sreenivase Gowda']"", 'LAWYER': ""['R.Chandrashekar', 'V.R.Sundara Murthy', 'S.V.Hegde Mulkhand', 'S.V. Hegde Mulkhand', 'V.R.Sundaramurthy', 'Vasanthappa']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['A.Arun', 'A.Ankita', 'New India Assurance Company Ltd., First Floor Kiadb Complex Hosur Road, Bommasandra Bangalore']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['H.B.Pushpa', 'New India Assurance Co.Ltd., 1St Floor, Kiadb Complex Hosur Road Bommasandra Bangalore 560 099', 'A.Arun', 'A.Ankita']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 In The High Court Of Karnataka At Bangalore Dated This The 7th Day Of January, 2014 Present The Hon'Ble Mr. Justice Mohan .M. Shantanagoudar And The Hon'Ble Mr. Justice B.Sreenivase Gowda Miscellaneous First Appeal No. 1205/2010 (Mv) C/W Miscellaneous First Appeal No. 54/2010 (Mv) In Mfa 1205/2010: Between: 1. A.Arun S/O.A.Arumugam Aged About 32 Years 2. Kum.A.Ankita D/O.A.Arun Aged About 2 Years Minor Rep.By Her Father And Natural Guardian A.Arun. Both Are R/A.Ground Floor No.121, Shanthi Sadan, Udupi Layout Cambridge Road Ulsoor Bangalore -8. ... Appellants (By Sri R.Chandrashekar For Sri V.R.Sundara Murthy, Adv.) 2 And: 1. Smt.H.B.Pushpa W/O.Hanumanthappa R/A.No.102/203 Bommasandra Industrial Area Hosur Road Bangalore. 2. New India Assurance Co.Ltd., 1St Floor, Kiadb Complex Hosur Road Bommasandra Bangalore 560 099. ... Respondents (By Sri S.V.Hegde Mulkhand, Adv. For R2, R1 Notice Dispensed With V/O.Dated 20.9.2010) *** * This Mfa Is Filed U/S 173(1) Of Mv Act Against The Judgment And Award Dated:30.07.2009 Passed In Mvc No.1640/2005 On The File Of The Viii Additional Judge, Mact-V Court Of Small Causes, Bangalore, Partly Allowing The Claim Petition For Compensation And Seeking Enhancement Of Compensation. In Mfa 54/2010: Between: New India Assurance Company Ltd., First Floor Kiadb Complex Hosur Road, Bommasandra Bangalore, Through Its : Divisional Office No.9/2, Mahalakshmi Chambers M.G.Road, Bangalore 560 001. 3 Represented By Its Sr.Divisional Manager. .... Appellant (By Sri. S.V. Hegde Mulkhand, Adv.) And 1. A.Arun Aged About 36 Years S/O.A.Armugam 2. Kum.A.Ankita Aged About 7 Years D/O.A.Arun Both Are R/O.Ground Floor No.121, Shanthi Sadan Udani Layout Cambridge Road Ulsoor Bangalore 560 008. R2 Is Minor Represented By Her Father And Natural Guardian Respondent No.1. 3. Smt.H.B.Pushpa W/O.Hanumanthappa Major In Age: R/O.No.102/103, Bommasandra Indl.Area Hosur Road Bangalore. .. Respondents (By Sri. R.Chandrashekar, Adv. For Sri V.R.Sundaramurthy, Adv. For R1, R2- Minor Rep.By R1, Sri Vasanthappa, Adv. For R3) * *** * This Mfa Is Filed U/S 173(1) Of Mv Act Against The Judgment And Award Dated 13.12.2006 Passed In Mvc No.1640/2005 On The File Of The Member, Mact, Viii 4 Additional Judge, Court Of Small Causes, Bangalore Awarding A Compensation Of Rs.58,41,000/- With Interest At 6% P.A. From The Date Of Petition Till Deposit. These Appeals Having Been Heard And Reserved For Judgment, Coming On For Pronouncement Of Judgment This Day, B. Sreenivase Gowda J., Delivered The Following: Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Mohan .M. Shantanagoudar', 'B.Sreenivase Gowda', 'B. Sreenivase Gowda']"", ""LAWYER"": ""['R.Chandrashekar', 'V.R.Sundara Murthy', 'S.V.Hegde Mulkhand', 'S.V. Hegde Mulkhand', 'V.R.Sundaramurthy', 'Vasanthappa']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['A.Arun', 'A.Ankita', 'New India Assurance Company Ltd., First Floor Kiadb Complex Hosur Road, Bommasandra Bangalore']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['H.B.Pushpa', 'New India Assurance Co.Ltd., 1St Floor, Kiadb Complex Hosur Road Bommasandra Bangalore 560 099', 'A.Arun', 'A.Ankita']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"DW5 Sh. Pradeep Srivastava, IPS, DCP South had been closely monitoring the investigation of the case and he submitted the report Ex.DW5/A to the Additional Commissioner of Police and also to the Press, wherein it is reported that the Grandmother suspected that one Bobby a Stone Cutter working nearby, who was friendly with the prosecutrix might have taken her away.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Bobby']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Pradeep Srivastava']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Bobby']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Pradeep Srivastava']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: DW5 Sh. Pradeep Srivastava, IPS, DCP South had been closely monitoring the investigation of the case and he submitted the report Ex.DW5/A to the Additional Commissioner of Police and also to the Press, wherein it is reported that the Grandmother suspected that one Bobby a Stone Cutter working nearby, who was friendly with the prosecutrix might have taken her away. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Bobby']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Pradeep Srivastava']""} </s>"
"In view of the decision of the Apex Court in case of Paid Ishwarbhai (supra) as also the decision in case of Tubewell Operator Working in the Panchayat (supra), the provisions of the Minimum Wages Act are applicable and attracted and it is held the said Act is applicable to the other Authorities being a Scheduled Employment.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ishwarbhai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Minimum Wages Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ishwarbhai']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Minimum Wages Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In view of the decision of the Apex Court in case of Paid Ishwarbhai (supra) as also the decision in case of Tubewell Operator Working in the Panchayat (supra), the provisions of the Minimum Wages Act are applicable and attracted and it is held the said Act is applicable to the other Authorities being a Scheduled Employment. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ishwarbhai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Minimum Wages Act']"", ""WITNESS"": ""[]""} </s>"
"A similar letter was written also by Rajesh Jassal to the Additional CIT, Investigation Unit-1, New Delhi giving details of the bank accounts operated by him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['New Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Rajesh Jassal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['New Delhi']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Rajesh Jassal']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A similar letter was written also by Rajesh Jassal to the Additional CIT, Investigation Unit-1, New Delhi giving details of the bank accounts operated by him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['New Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Rajesh Jassal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"These directions, Shri Jethmalani sought to urge before us, have been given in the presence of the parties and the clarificatory order of April 5, 1985 which was made in the presence of the appellant and his Counsel as well as the Counsel of the State Government of Maharashtra, expressly recorded that no such submission was made in connection with the prayer for grant of clarification.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['April 5, 1985']"", ""GPE"": ""['Maharashtra']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Jethmalani']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['April 5, 1985']"", 'GPE': ""['Maharashtra']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Jethmalani']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: These directions, Shri Jethmalani sought to urge before us, have been given in the presence of the parties and the clarificatory order of April 5, 1985 which was made in the presence of the appellant and his Counsel as well as the Counsel of the State Government of Maharashtra, expressly recorded that no such submission was made in connection with the prayer for grant of clarification. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['April 5, 1985']"", ""GPE"": ""['Maharashtra']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Jethmalani']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Respondent 1, President of India, Respondent 3, Chief Justice of India and Respondent 5, Governor of Uttar Pradesh were subsequently dropped and their names from the array of respondents were deleted.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['President of India', 'Chief Justice of India', 'Governor of Uttar Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['President of India', 'Chief Justice of India', 'Governor of Uttar Pradesh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Respondent 1, President of India, Respondent 3, Chief Justice of India and Respondent 5, Governor of Uttar Pradesh were subsequently dropped and their names from the array of respondents were deleted. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['President of India', 'Chief Justice of India', 'Governor of Uttar Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The learned Advocate General has referred to a decision of the Supreme Court in the State of Punjab v. Joginder Singh, AIR 1963 SC 913 (at pp. 921-922) wherein their Lordships observed : ""The second also, is, in our opinion, unsound.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Punjab v. Joginder Singh, AIR 1963 SC 913']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['State of Punjab v. Joginder Singh, AIR 1963 SC 913']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The learned Advocate General has referred to a decision of the Supreme Court in the State of Punjab v. Joginder Singh, AIR 1963 SC 913 (at pp. 921-922) wherein their Lordships observed : ""The second also, is, in our opinion, unsound. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Punjab v. Joginder Singh, AIR 1963 SC 913']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He was discharged from the said hospital on 11.11.2008 at 6:20 PM.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['11.11.2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['11.11.2008']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He was discharged from the said hospital on 11.11.2008 at 6:20 PM. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['11.11.2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As it has been established that the negligent act of Gurubachan Singh and respondent Rajinder pal Singh was ""in the course of employment"" the appellant shall be liable for the same.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Gurubachan Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Rajinder pal Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Gurubachan Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Rajinder pal Singh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As it has been established that the negligent act of Gurubachan Singh and respondent Rajinder pal Singh was ""in the course of employment"" the appellant shall be liable for the same. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Gurubachan Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Rajinder pal Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He also emphasized on the words 'save as otherwise provided by this Code or by any other law' and submits that these words make it clear that the only authority vested with power is Supreme Court.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He also emphasized on the words 'save as otherwise provided by this Code or by any other law' and submits that these words make it clear that the only authority vested with power is Supreme Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The learned single Judge while dealing with Crl.A. No. 1016 of 1996 felt that two learned single Judges of this Court took conflicting views and therefore the matter was placed before the Hon'ble The Chief Justice, who referred to this Bench for laying out the correct position of law.","{""CASE_NUMBER"": ""['Crl.A. No. 1016 of 1996']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Crl.A. No. 1016 of 1996']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The learned single Judge while dealing with Crl.A. No. 1016 of 1996 felt that two learned single Judges of this Court took conflicting views and therefore the matter was placed before the Hon'ble The Chief Justice, who referred to this Bench for laying out the correct position of law. [/INST]
 {""CASE_NUMBER"": ""['Crl.A. No. 1016 of 1996']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Dismissed Dismissed 47 Nimnabad 34 34 1 Dismissed Dismissed 48 Sahanpur 15 15 1 Dismissed Dismissed 49 Todikheri 3 3 3,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Nimnabad', 'Sahanpur', 'Todikheri']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Nimnabad', 'Sahanpur', 'Todikheri']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Dismissed Dismissed 47 Nimnabad 34 34 1 Dismissed Dismissed 48 Sahanpur 15 15 1 Dismissed Dismissed 49 Todikheri 3 3 3 [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Nimnabad', 'Sahanpur', 'Todikheri']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Even the earlier judgments of this Court reported in 13 and 14 G.L.R. though of learned single Judges do not appear to have been placed for consideration of the Division Bench.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Even the earlier judgments of this Court reported in 13 and 14 G.L.R. though of learned single Judges do not appear to have been placed for consideration of the Division Bench. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"A perusal of the FSL report Ex.PY as regards the .32 inch revolver, which was recovered in the case, it has been stated that chemical CRA No. D-1026-DB of 2011 and CRA No. D-1046-DB of 2011 and -42- Murder Reference No. 6 of 2011 examination of barrel wash of .32 inch revolver No. FG-2917 marked W/2 indicates that it had been used in firing.","{""CASE_NUMBER"": ""['CRA No. D-1026-DB of 2011', 'CRA No. D-1046-DB of 2011']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['FSL']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['CRA No. D-1026-DB of 2011', 'CRA No. D-1046-DB of 2011']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['FSL']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A perusal of the FSL report Ex.PY as regards the .32 inch revolver, which was recovered in the case, it has been stated that chemical CRA No. D-1026-DB of 2011 and CRA No. D-1046-DB of 2011 and -42- Murder Reference No. 6 of 2011 examination of barrel wash of .32 inch revolver No. FG-2917 marked W/2 indicates that it had been used in firing. [/INST]
 {""CASE_NUMBER"": ""['CRA No. D-1026-DB of 2011', 'CRA No. D-1046-DB of 2011']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['FSL']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Under such circumstances, there is no evidence as such against the appellants Gopi Bai and Ramanbai by which they could be convicted for offences punishable under section 4 of the Dowry Prohibition Act or Section 498-A of I.P.C. 13.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Gopi Bai', 'Ramanbai']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 4', 'Section 498-A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Dowry Prohibition Act', 'I.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Gopi Bai', 'Ramanbai']"", 'PRECEDENT': '[]', 'PROVISION': ""['section 4', 'Section 498-A']"", 'RESPONDENT': '[]', 'STATUTE': ""['Dowry Prohibition Act', 'I.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Under such circumstances, there is no evidence as such against the appellants Gopi Bai and Ramanbai by which they could be convicted for offences punishable under section 4 of the Dowry Prohibition Act or Section 498-A of I.P.C. 13. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Gopi Bai', 'Ramanbai']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 4', 'Section 498-A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Dowry Prohibition Act', 'I.P.C.']"", ""WITNESS"": ""[]""} </s>"
"Further it has also come in evidence that the said witness and the accused No.1 Rajeev Kapoor are business partners and the witness has also stood as surety for the accused No. 1 Rajeev Kapoor, which cast doubts about the veracity of the deposition of DW­2 and also shakes his credibility.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rajeev Kapoor']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Rajeev Kapoor']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Further it has also come in evidence that the said witness and the accused No.1 Rajeev Kapoor are business partners and the witness has also stood as surety for the accused No. 1 Rajeev Kapoor, which cast doubts about the veracity of the deposition of DW­2 and also shakes his credibility. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rajeev Kapoor']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It may be mentioned that the decision of the Division Bench in the said case was reversed on appeal by the Supreme Court by a majority AIR 1964 SC 538, but in the judgment of the majority the Supreme Court has not referred to the point mentioned above.","{""CASE_NUMBER"": ""['AIR 1964 SC 538']"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['AIR 1964 SC 538']"", 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It may be mentioned that the decision of the Division Bench in the said case was reversed on appeal by the Supreme Court by a majority AIR 1964 SC 538, but in the judgment of the majority the Supreme Court has not referred to the point mentioned above. [/INST]
 {""CASE_NUMBER"": ""['AIR 1964 SC 538']"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Instead of referring to the other Decisions on which reliance was placed by the learned Counsel for the defendant we may refer to the decision in Lakshmi Narayan's case because it refers to the earlier decisions of the Supreme Court and also of the Federal Court.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Lakshmi Narayan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Lakshmi Narayan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Instead of referring to the other Decisions on which reliance was placed by the learned Counsel for the defendant we may refer to the decision in Lakshmi Narayan's case because it refers to the earlier decisions of the Supreme Court and also of the Federal Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Lakshmi Narayan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On 28.7.1998 Alen Jack Routley son of Fransis Kisman Routley, resident of 56, Melanesiya Road, Kohimarama, Auckland, New Zealand, lodged a report in English at 2.45 P.M.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['28.7.1998']"", ""GPE"": ""['Kohimarama', 'Auckland', 'New Zealand']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Alen Jack Routley', 'Fransis Kisman Routley']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['28.7.1998']"", 'GPE': ""['Kohimarama', 'Auckland', 'New Zealand']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Alen Jack Routley', 'Fransis Kisman Routley']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On 28.7.1998 Alen Jack Routley son of Fransis Kisman Routley, resident of 56, Melanesiya Road, Kohimarama, Auckland, New Zealand, lodged a report in English at 2.45 P.M. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['28.7.1998']"", ""GPE"": ""['Kohimarama', 'Auckland', 'New Zealand']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Alen Jack Routley', 'Fransis Kisman Routley']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The ticket numbers of the respondent Mulani and that of Mr. Shikalgar is an admitted position as reflected from the Annexure-I & Annexure-II to the said settlement.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shikalgar']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Mulani']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Shikalgar']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Mulani']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The ticket numbers of the respondent Mulani and that of Mr. Shikalgar is an admitted position as reflected from the Annexure-I & Annexure-II to the said settlement. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shikalgar']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Mulani']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
In view of the above pronouncement and in view of the scope of the first question which this Bench is answering it is not necessary to discuss how far the provisions of die Land Records Manual support the interpretation put upon the word 'occupant' in the majority judgment in Ram Dular Singh's case 1963 All LJ 667: (AIR 1964 All 498) (FB).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[\""Ram Dular Singh's case 1963 All LJ 667: (AIR 1964 All 498) (FB)\""]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[""Ram Dular Singh\'s case 1963 All LJ 667: (AIR 1964 All 498) (FB)""]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In view of the above pronouncement and in view of the scope of the first question which this Bench is answering it is not necessary to discuss how far the provisions of die Land Records Manual support the interpretation put upon the word 'occupant' in the majority judgment in Ram Dular Singh's case 1963 All LJ 667: (AIR 1964 All 498) (FB). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[\""Ram Dular Singh's case 1963 All LJ 667: (AIR 1964 All 498) (FB)\""]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Smt. Gian Devi Anand Vs. Respondent: Jeeevan Kumar And Others Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Gian Devi Anand']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Jeeevan Kumar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Gian Devi Anand']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Jeeevan Kumar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Smt. Gian Devi Anand Vs. Respondent: Jeeevan Kumar And Others Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Gian Devi Anand']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Jeeevan Kumar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
P. W. 6 Manoranjan Sinha is a co-villager of the respondent's father.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Manoranjan Sinha']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Manoranjan Sinha']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: P. W. 6 Manoranjan Sinha is a co-villager of the respondent's father. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Manoranjan Sinha']""} </s>"
The evidence would show that the prosecutrix was working hard to save money for her family.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The evidence would show that the prosecutrix was working hard to save money for her family. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the above context, learned counsel for State sought to rely on the legal presumption envisaged in Section 35 of the Act,","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 35']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 35']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the above context, learned counsel for State sought to rely on the legal presumption envisaged in Section 35 of the Act, [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 35']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The petitioner sent the following reply to the above letter, on July 5, 1963: ""With reference to the above I have to state that I have already submitted to you a letter from Messrs. Benson Watch Co., 31, Dharamtolla Street, Calcutta regarding the purchase of some watches from them.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['July 5, 1963']"", ""GPE"": ""['Calcutta']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Benson Watch Co.']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['July 5, 1963']"", 'GPE': ""['Calcutta']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Benson Watch Co.']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioner sent the following reply to the above letter, on July 5, 1963: ""With reference to the above I have to state that I have already submitted to you a letter from Messrs. Benson Watch Co., 31, Dharamtolla Street, Calcutta regarding the purchase of some watches from them. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['July 5, 1963']"", ""GPE"": ""['Calcutta']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Benson Watch Co.']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Under such circumstances, the acceptable testimony of witnesses Ramkumar and Sushila Bai may be acted upon and it is -:- 10 -:- Criminal Appeal No.118 of 2001 proved beyond doubt that appellant Kaptan Singh fired from a gun causing death of deceased Babulal, whereas appellant Samarjeet Singh fired from a gun, causing injury on the left elbow of complainant Ramkumar. 12.","{""CASE_NUMBER"": ""['Criminal Appeal No.118 of 2001']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Babulal']"", ""PETITIONER"": ""['Kaptan Singh', 'Samarjeet Singh', 'Ramkumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Ramkumar', 'Sushila Bai']""}","{'CASE_NUMBER': ""['Criminal Appeal No.118 of 2001']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Babulal']"", 'PETITIONER': ""['Kaptan Singh', 'Samarjeet Singh', 'Ramkumar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Ramkumar', 'Sushila Bai']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Under such circumstances, the acceptable testimony of witnesses Ramkumar and Sushila Bai may be acted upon and it is -:- 10 -:- Criminal Appeal No.118 of 2001 proved beyond doubt that appellant Kaptan Singh fired from a gun causing death of deceased Babulal, whereas appellant Samarjeet Singh fired from a gun, causing injury on the left elbow of complainant Ramkumar. 12. [/INST]
 {""CASE_NUMBER"": ""['Criminal Appeal No.118 of 2001']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Babulal']"", ""PETITIONER"": ""['Kaptan Singh', 'Samarjeet Singh', 'Ramkumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Ramkumar', 'Sushila Bai']""} </s>"
"The Gauhati High Court also considered this very question, in the case of J.L. Roy v. Amritlal Dey (1980) 1 FAC 30 : 1980 Cri LJ 24.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Gauhati High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['J.L. Roy v. Amritlal Dey (1980) 1 FAC 30 : 1980 Cri LJ 24']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Gauhati High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['J.L. Roy v. Amritlal Dey (1980) 1 FAC 30 : 1980 Cri LJ 24']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Gauhati High Court also considered this very question, in the case of J.L. Roy v. Amritlal Dey (1980) 1 FAC 30 : 1980 Cri LJ 24. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Gauhati High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['J.L. Roy v. Amritlal Dey (1980) 1 FAC 30 : 1980 Cri LJ 24']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The defendant no.1 has not given any response to his requests and therefore, the Suit No.302/08 Page 7 /37 Murari Lal Sharma (now deceased) through L.R's v. Narender Pal Gupta and Ors.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Murari Lal Sharma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[\""L.R's v. Narender Pal Gupta and Ors\""]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Murari Lal Sharma']"", 'PETITIONER': '[]', 'PRECEDENT': '[""L.R\'s v. Narender Pal Gupta and Ors""]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The defendant no.1 has not given any response to his requests and therefore, the Suit No.302/08 Page 7 /37 Murari Lal Sharma (now deceased) through L.R's v. Narender Pal Gupta and Ors. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Murari Lal Sharma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[\""L.R's v. Narender Pal Gupta and Ors\""]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
A Commission appointed under the Act does not decide any dispute.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A Commission appointed under the Act does not decide any dispute. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Relying upon the aforesaid two decisions of Jharkhand High Court, learned senior advocate Mr. Thakore submitted that High Court can deny the benefit under Section 17B to the workman during the pendency of petition.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Jharkhand High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Thakore']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 17B']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Jharkhand High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Thakore']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 17B']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Relying upon the aforesaid two decisions of Jharkhand High Court, learned senior advocate Mr. Thakore submitted that High Court can deny the benefit under Section 17B to the workman during the pendency of petition. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Jharkhand High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Thakore']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 17B']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
As a result of which deceased fell on the road and received injuries.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As a result of which deceased fell on the road and received injuries. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Firstly, it is debatable whether such conduct of Ram Baran and his party would amount to criminal trespass on an inference that their intention must have been to annoy Sarju.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ram Baran', 'Sarju']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ram Baran', 'Sarju']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Firstly, it is debatable whether such conduct of Ram Baran and his party would amount to criminal trespass on an inference that their intention must have been to annoy Sarju. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ram Baran', 'Sarju']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In G. Nagendra vs. State of Karnataka (1998 (9) SCC 439), the Supreme Court has held that rules framed under Article 309 of the Constitution can be given retrospective effect.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['G. Nagendra vs. State of Karnataka (1998 (9) SCC 439)']"", ""PROVISION"": ""['Article 309']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['G. Nagendra vs. State of Karnataka (1998 (9) SCC 439)']"", 'PROVISION': ""['Article 309']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In G. Nagendra vs. State of Karnataka (1998 (9) SCC 439), the Supreme Court has held that rules framed under Article 309 of the Constitution can be given retrospective effect. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['G. Nagendra vs. State of Karnataka (1998 (9) SCC 439)']"", ""PROVISION"": ""['Article 309']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"Before The Madurai Bench Of Madras High Court Dated: 13/08/2010 Coram The Honourable Mr.Justice S.Manikumar Writ Petition (MD)No.10727 of 2006 M.P.(MD)Nos.1 to 3 of 2006 R.Sakthivel, (Sub-Inspector), Nagamalai Pudukottai Police Station, Madurai District. ... Petitioner vs. 1.The Director General of Police, (Law and Order), Chennai-600 004. 2.The Additional Director General of Police, (Law and Order), Chennai-600 004. 3.The Deputy Inspector General of Police, Madurai Range, Madurai. 4.The Additional Superintendent of Police (Crime), Madurai, Madurai District. ... Respondents Prayer Writ Petition under Article 226 of the Constitution of India praying for issuance of a Writ of Certiorarified Mandamus to call for the records of the first respondent made in his proceedings in Rc.No.2395/AP2(3)/2006, dated 17.02.2006, confirming the order of the second respondent made in his proceedings Rc.No.98967/AP/2(2)/2005 dated 15.07.2005, confirming the order of the third respondent made in his order No.A2/6953/03 Pr 312/03 'F' order dated 11.01.2005 and quash the same and consequently, direct the respondents to consider the petitioner for promotion for the next higher post from the date his juniors were promoted. !For Petitioner ... Mr.S.Karthik For Mr.S.Silambanan ^For Respondents ... Mr.K.Balasubramanian, Additional Government Pleader. :Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madurai Bench Of Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['S.Manikumar']"", ""LAWYER"": ""['S.Karthik', 'S.Silambanan', 'K.Balasubramanian']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['R.Sakthivel']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Director General of Police, (Law and Order), Chennai-600 004', 'Additional Director General of Police, (Law and Order), Chennai-600 004', 'Additional Superintendent of Police (Crime), Madurai, Madurai District']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Madurai Bench Of Madras High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['S.Manikumar']"", 'LAWYER': ""['S.Karthik', 'S.Silambanan', 'K.Balasubramanian']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['R.Sakthivel']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Director General of Police, (Law and Order), Chennai-600 004', 'Additional Director General of Police, (Law and Order), Chennai-600 004', 'Additional Superintendent of Police (Crime), Madurai, Madurai District']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Before The Madurai Bench Of Madras High Court Dated: 13/08/2010 Coram The Honourable Mr.Justice S.Manikumar Writ Petition (MD)No.10727 of 2006 M.P.(MD)Nos.1 to 3 of 2006 R.Sakthivel, (Sub-Inspector), Nagamalai Pudukottai Police Station, Madurai District. ... Petitioner vs. 1.The Director General of Police, (Law and Order), Chennai-600 004. 2.The Additional Director General of Police, (Law and Order), Chennai-600 004. 3.The Deputy Inspector General of Police, Madurai Range, Madurai. 4.The Additional Superintendent of Police (Crime), Madurai, Madurai District. ... Respondents Prayer Writ Petition under Article 226 of the Constitution of India praying for issuance of a Writ of Certiorarified Mandamus to call for the records of the first respondent made in his proceedings in Rc.No.2395/AP2(3)/2006, dated 17.02.2006, confirming the order of the second respondent made in his proceedings Rc.No.98967/AP/2(2)/2005 dated 15.07.2005, confirming the order of the third respondent made in his order No.A2/6953/03 Pr 312/03 'F' order dated 11.01.2005 and quash the same and consequently, direct the respondents to consider the petitioner for promotion for the next higher post from the date his juniors were promoted. !For Petitioner ... Mr.S.Karthik For Mr.S.Silambanan ^For Respondents ... Mr.K.Balasubramanian, Additional Government Pleader. :Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madurai Bench Of Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['S.Manikumar']"", ""LAWYER"": ""['S.Karthik', 'S.Silambanan', 'K.Balasubramanian']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['R.Sakthivel']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Director General of Police, (Law and Order), Chennai-600 004', 'Additional Director General of Police, (Law and Order), Chennai-600 004', 'Additional Superintendent of Police (Crime), Madurai, Madurai District']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It will not be necessary for us to decide the second con-tenlion of Mr. Palkhiwalla and we have not heard Counsel for the Revenue on the same.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Palkhiwalla']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Palkhiwalla']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It will not be necessary for us to decide the second con-tenlion of Mr. Palkhiwalla and we have not heard Counsel for the Revenue on the same. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Palkhiwalla']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
To complete the narration of facts since the defendants sold the land in violation of the interim injunction granted by this Court on 5-7-1990 the plaintiffs filed CMA No. 6727 of 93 to punish the defendants under Order 39 Rules 2A read with 151 CPC seeking detention of the defendants in civil prison and to attach their property in the hands of the alienees.,"{""CASE_NUMBER"": ""['CMA No. 6727 of 93']"", ""COURT"": ""[]"", ""DATE"": ""['5-7-1990']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Order 39 Rules 2A read with 151']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['CMA No. 6727 of 93']"", 'COURT': '[]', 'DATE': ""['5-7-1990']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Order 39 Rules 2A read with 151']"", 'RESPONDENT': '[]', 'STATUTE': ""['CPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: To complete the narration of facts since the defendants sold the land in violation of the interim injunction granted by this Court on 5-7-1990 the plaintiffs filed CMA No. 6727 of 93 to punish the defendants under Order 39 Rules 2A read with 151 CPC seeking detention of the defendants in civil prison and to attach their property in the hands of the alienees. [/INST]
 {""CASE_NUMBER"": ""['CMA No. 6727 of 93']"", ""COURT"": ""[]"", ""DATE"": ""['5-7-1990']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Order 39 Rules 2A read with 151']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""} </s>"
"High Court Of Madhya Pradesh : Jabalpur. Writ Petition No.10938/2014 Rajesh Kumar Rathore & others. Vs. Indian Oil Corporation Limited and others. Present : Hon'ble Shri Justice K.K. Trivedi. J. Shri R.N. Singh, learned Senior counsel assisted by Shri Abhishek Arjariya, learned counsel for the petitioner. Shri Aditya Adhikari, learned Senior counsel assisted by Shri Ritvik Parasar, learned counsel for the respondent No.1. Shri Vaibhav Tiwari, learned Panel Lawyer, for the respondent No.2-State. Shri Jayant Neekhra, learned counsel for the respondent No.3. Shri Manikant Sharma, learned counsel for the respondent No.4. Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh : Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K.K. Trivedi']"", ""LAWYER"": ""['R.N. Singh', 'Abhishek Arjariya', 'Aditya Adhikari', 'Ritvik Parasar', 'Vaibhav Tiwari', 'Jayant Neekhra', 'Manikant Sharma']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rajesh Kumar Rathore']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Indian Oil Corporation Limited']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Madhya Pradesh : Jabalpur']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['K.K. Trivedi']"", 'LAWYER': ""['R.N. Singh', 'Abhishek Arjariya', 'Aditya Adhikari', 'Ritvik Parasar', 'Vaibhav Tiwari', 'Jayant Neekhra', 'Manikant Sharma']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Rajesh Kumar Rathore']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Indian Oil Corporation Limited']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: High Court Of Madhya Pradesh : Jabalpur. Writ Petition No.10938/2014 Rajesh Kumar Rathore & others. Vs. Indian Oil Corporation Limited and others. Present : Hon'ble Shri Justice K.K. Trivedi. J. Shri R.N. Singh, learned Senior counsel assisted by Shri Abhishek Arjariya, learned counsel for the petitioner. Shri Aditya Adhikari, learned Senior counsel assisted by Shri Ritvik Parasar, learned counsel for the respondent No.1. Shri Vaibhav Tiwari, learned Panel Lawyer, for the respondent No.2-State. Shri Jayant Neekhra, learned counsel for the respondent No.3. Shri Manikant Sharma, learned counsel for the respondent No.4. Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh : Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K.K. Trivedi']"", ""LAWYER"": ""['R.N. Singh', 'Abhishek Arjariya', 'Aditya Adhikari', 'Ritvik Parasar', 'Vaibhav Tiwari', 'Jayant Neekhra', 'Manikant Sharma']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rajesh Kumar Rathore']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Indian Oil Corporation Limited']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 Ep 10/2014 High Court Of Madhya Pradesh Bench At Gwalior Sb: Justice Sujoy Paul Election Petition No.10/2014 Rasal Singh vs. The Election Commission of India and others ------------------------------------------------------------------------------------------- Shri Anil Mishra, Advocate for the petitioner. Shri D.K.Katare, Advocate for the respondents No.1 to 4. Shri S.K.Shrivastava, Advocate for the respondent No.5. ------------------------------------------------------------------------------------------- Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh Bench At Gwalior']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sujoy Paul']"", ""LAWYER"": ""['Anil Mishra', 'D.K.Katare', 'S.K.Shrivastava']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rasal Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Election Commission of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Madhya Pradesh Bench At Gwalior']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Sujoy Paul']"", 'LAWYER': ""['Anil Mishra', 'D.K.Katare', 'S.K.Shrivastava']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Rasal Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Election Commission of India']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 Ep 10/2014 High Court Of Madhya Pradesh Bench At Gwalior Sb: Justice Sujoy Paul Election Petition No.10/2014 Rasal Singh vs. The Election Commission of India and others ------------------------------------------------------------------------------------------- Shri Anil Mishra, Advocate for the petitioner. Shri D.K.Katare, Advocate for the respondents No.1 to 4. Shri S.K.Shrivastava, Advocate for the respondent No.5. ------------------------------------------------------------------------------------------- Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh Bench At Gwalior']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sujoy Paul']"", ""LAWYER"": ""['Anil Mishra', 'D.K.Katare', 'S.K.Shrivastava']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rasal Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Election Commission of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Delhi At New Delhi W.P. (C) No. 5520 of 2007 & Cm No. 5655 of 2008 Saroj Rani ..... Petitioner Through: Mr. Sunil Kumar with Mr. Rajveer Bansal and Mr. Anurag Kasana, Advocates. versus Govt. Of N.C.T. Of Delhi & Ors. ..... Respondents Through: Ms. Avnish Ahlawat, Advocate for R-1 & R-2. Mr. Amitabh Marwah, Advocate for R-3. Coram: Justice S. Muralidhar 1. Whether reporters of local paper may be allowed to see the order? Yes 2. To be referred to the reporter or not? Yes 3. Whether the order should be referred in the digest? Yes Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Delhi At New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['S. Muralidhar']"", ""LAWYER"": ""['Sunil Kumar', 'Rajveer Bansal', 'Anurag Kasana', 'Avnish Ahlawat', 'Amitabh Marwah']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Saroj Rani']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Govt. Of N.C.T. Of Delhi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Delhi At New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['S. Muralidhar']"", 'LAWYER': ""['Sunil Kumar', 'Rajveer Bansal', 'Anurag Kasana', 'Avnish Ahlawat', 'Amitabh Marwah']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Saroj Rani']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Govt. Of N.C.T. Of Delhi']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Delhi At New Delhi W.P. (C) No. 5520 of 2007 & Cm No. 5655 of 2008 Saroj Rani ..... Petitioner Through: Mr. Sunil Kumar with Mr. Rajveer Bansal and Mr. Anurag Kasana, Advocates. versus Govt. Of N.C.T. Of Delhi & Ors. ..... Respondents Through: Ms. Avnish Ahlawat, Advocate for R-1 & R-2. Mr. Amitabh Marwah, Advocate for R-3. Coram: Justice S. Muralidhar 1. Whether reporters of local paper may be allowed to see the order? Yes 2. To be referred to the reporter or not? Yes 3. Whether the order should be referred in the digest? Yes Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Delhi At New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['S. Muralidhar']"", ""LAWYER"": ""['Sunil Kumar', 'Rajveer Bansal', 'Anurag Kasana', 'Avnish Ahlawat', 'Amitabh Marwah']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Saroj Rani']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Govt. Of N.C.T. Of Delhi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It was observed by this Court in Krishan Gopal v. Prakash Chandra that"" election petitions should ordinarily, if possible, be entrusted for trial to a permanent Judge of the High Court ""(SCC p. 137, para 23).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Krishan Gopal v. Prakash Chandra']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Krishan Gopal v. Prakash Chandra']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was observed by this Court in Krishan Gopal v. Prakash Chandra that"" election petitions should ordinarily, if possible, be entrusted for trial to a permanent Judge of the High Court ""(SCC p. 137, para 23). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Krishan Gopal v. Prakash Chandra']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"But, in any event, she will have to explain the observation in the order dated 26-7-1997 in O.P. No. 104/96 that ""there was no evidence on behalf of the respondents that both parties filed a joint memo"".","{""CASE_NUMBER"": ""['O.P. No. 104/96']"", ""COURT"": ""[]"", ""DATE"": ""['26-7-1997']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['O.P. No. 104/96']"", 'COURT': '[]', 'DATE': ""['26-7-1997']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But, in any event, she will have to explain the observation in the order dated 26-7-1997 in O.P. No. 104/96 that ""there was no evidence on behalf of the respondents that both parties filed a joint memo"". [/INST]
 {""CASE_NUMBER"": ""['O.P. No. 104/96']"", ""COURT"": ""[]"", ""DATE"": ""['26-7-1997']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As Criminal Appeal No.472 of 1992 has been allowed by us, we do not see any reason, at this point of time, to enhance the sentence awarded to accused no.1 by the trial Court for the offence punishable under Section 498-A of IPC.","{""CASE_NUMBER"": ""['Criminal Appeal No.472 of 1992']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 498-A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Criminal Appeal No.472 of 1992']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 498-A']"", 'RESPONDENT': '[]', 'STATUTE': ""['IPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As Criminal Appeal No.472 of 1992 has been allowed by us, we do not see any reason, at this point of time, to enhance the sentence awarded to accused no.1 by the trial Court for the offence punishable under Section 498-A of IPC. [/INST]
 {""CASE_NUMBER"": ""['Criminal Appeal No.472 of 1992']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 498-A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""} </s>"
"In order to prevent Veerappan and his gang from committing atrocities and to nab them, the operation Vanamalai was launched in 1990, jointly by the Governments of Karnataka and Tamil Nadu.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Governments of Karnataka and Tamil Nadu']"", ""OTHER_PERSON"": ""['Veerappan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Governments of Karnataka and Tamil Nadu']"", 'OTHER_PERSON': ""['Veerappan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In order to prevent Veerappan and his gang from committing atrocities and to nab them, the operation Vanamalai was launched in 1990, jointly by the Governments of Karnataka and Tamil Nadu. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Governments of Karnataka and Tamil Nadu']"", ""OTHER_PERSON"": ""['Veerappan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is reiterated that apart from the above amount, the claimants are entitled to interest at the rate of 12 per cent per annum on their respective shares from the date of filing of the original petition.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is reiterated that apart from the above amount, the claimants are entitled to interest at the rate of 12 per cent per annum on their respective shares from the date of filing of the original petition. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Sakharam v. State of M.P., (1992) 2 SCC 153, cited by Shri Ali, there was no direct evidence against the appellant.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ali']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sakharam v. State of M.P., (1992) 2 SCC 153']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ali']"", 'PETITIONER': '[]', 'PRECEDENT': ""['Sakharam v. State of M.P., (1992) 2 SCC 153']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Sakharam v. State of M.P., (1992) 2 SCC 153, cited by Shri Ali, there was no direct evidence against the appellant. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ali']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sakharam v. State of M.P., (1992) 2 SCC 153']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"All that we can consider is whether there is ground which prima facie justifies the said reasonable belief"".","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: All that we can consider is whether there is ground which prima facie justifies the said reasonable belief"". [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The plaintiff had by his 1st notice dated 27th February 1961 (Ex. P-27), called upon the defendants to render an account of the royalty which had become due for the year 1960, with a request for its payment, together with the arrears of royalties up-to-date within a week, failing which he threatened to take legal action for its recovery.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['27th February 1961']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['27th February 1961']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The plaintiff had by his 1st notice dated 27th February 1961 (Ex. P-27), called upon the defendants to render an account of the royalty which had become due for the year 1960, with a request for its payment, together with the arrears of royalties up-to-date within a week, failing which he threatened to take legal action for its recovery. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['27th February 1961']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The sale deed dated 25.10.1994 Ex. A1/P3 relate to the purchase of a 4 marla house.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['25.10.1994']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['25.10.1994']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The sale deed dated 25.10.1994 Ex. A1/P3 relate to the purchase of a 4 marla house. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['25.10.1994']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It should also be borne in mind that in the case of a serious situation which renders the holding of an inquiry not reasonably practicable, it would be difficult to foresee how long the situation will last and when normalcy would return or be restored.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It should also be borne in mind that in the case of a serious situation which renders the holding of an inquiry not reasonably practicable, it would be difficult to foresee how long the situation will last and when normalcy would return or be restored. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"She, on instructions, contended that it is merely a claim to shift burden on the poor driver Dajgit Singh who himself is a poor person and not even in a position to own a two wheeler what to talk of a vehicle being Contessa.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dajgit Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Dajgit Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: She, on instructions, contended that it is merely a claim to shift burden on the poor driver Dajgit Singh who himself is a poor person and not even in a position to own a two wheeler what to talk of a vehicle being Contessa. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dajgit Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the facts of the case, there will be no order as to costs.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the facts of the case, there will be no order as to costs. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
This sum shall remain in the Court and will be treated as his first bid at the re-auction.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This sum shall remain in the Court and will be treated as his first bid at the re-auction. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
(2) The opinion of each member of' the Court as to the finding shall be given by word of mouth on each charge separately.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (2) The opinion of each member of' the Court as to the finding shall be given by word of mouth on each charge separately. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Reliance in this connection is placed on the dissenting judgment in Bikani Mia v. Shuklal Poddar, (1893,) ILR 20 Cal 116 (FB) in which Ammeerali. J., expressed the view that a wakf in favour of the wakif and his descendants would be for charitable purposes under the Mahomedan Law.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ammeerali']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Bikani Mia v. Shuklal Poddar, (1893,) ILR 20 Cal 116 (FB)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Mahomedan Law']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ammeerali']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Bikani Mia v. Shuklal Poddar, (1893,) ILR 20 Cal 116 (FB)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Mahomedan Law']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Reliance in this connection is placed on the dissenting judgment in Bikani Mia v. Shuklal Poddar, (1893,) ILR 20 Cal 116 (FB) in which Ammeerali. J., expressed the view that a wakf in favour of the wakif and his descendants would be for charitable purposes under the Mahomedan Law. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ammeerali']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Bikani Mia v. Shuklal Poddar, (1893,) ILR 20 Cal 116 (FB)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Mahomedan Law']"", ""WITNESS"": ""[]""} </s>"
"Hence, the assessee was entitled to full relief.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Hence, the assessee was entitled to full relief. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"O.A. No. K-269 of 1988 was allowed by the Ernakulam Bench of the Tribunal by judgment dated April 2, 1990 and the impugned notifications were quashed to the extent the amendments in Rule 2544 were given retrospective effect on the view that the said amendments in the rule in so far as the same were given retrospective effect were unjust, unreasonable and were violative of Article 14 of the Constitution.","{""CASE_NUMBER"": ""['O.A. No. K-269 of 1988']"", ""COURT"": ""[]"", ""DATE"": ""['April 2, 1990']"", ""GPE"": ""['Ernakulam']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rule 2544', 'Article 14']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['O.A. No. K-269 of 1988']"", 'COURT': '[]', 'DATE': ""['April 2, 1990']"", 'GPE': ""['Ernakulam']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Rule 2544', 'Article 14']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: O.A. No. K-269 of 1988 was allowed by the Ernakulam Bench of the Tribunal by judgment dated April 2, 1990 and the impugned notifications were quashed to the extent the amendments in Rule 2544 were given retrospective effect on the view that the said amendments in the rule in so far as the same were given retrospective effect were unjust, unreasonable and were violative of Article 14 of the Constitution. [/INST]
 {""CASE_NUMBER"": ""['O.A. No. K-269 of 1988']"", ""COURT"": ""[]"", ""DATE"": ""['April 2, 1990']"", ""GPE"": ""['Ernakulam']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rule 2544', 'Article 14']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"The Respondent shall intimate to the claimants/ petitioners about it having deposited the cheques in favour of petitioner in terms of the award, at the Suit No.838/11, Ram Lalli & ors. Vs Ratan Singh & anr. (pg- 14 of 15) address of the petitioner mentioned at the title of the award, so as to facilitate them to withdraw the same.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Suit No.838/11, Ram Lalli & ors. Vs Ratan Singh & anr.']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Suit No.838/11, Ram Lalli & ors. Vs Ratan Singh & anr.']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Respondent shall intimate to the claimants/ petitioners about it having deposited the cheques in favour of petitioner in terms of the award, at the Suit No.838/11, Ram Lalli & ors. Vs Ratan Singh & anr. (pg- 14 of 15) address of the petitioner mentioned at the title of the award, so as to facilitate them to withdraw the same. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Suit No.838/11, Ram Lalli & ors. Vs Ratan Singh & anr.']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The appeal came to be heard and disposed of by the Transport Appellate Tribunal on 28-6-69.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Transport Appellate Tribunal']"", ""DATE"": ""['28-6-69']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Transport Appellate Tribunal']"", 'DATE': ""['28-6-69']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The appeal came to be heard and disposed of by the Transport Appellate Tribunal on 28-6-69. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Transport Appellate Tribunal']"", ""DATE"": ""['28-6-69']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Juvenile offender also disclosed that after stabbing Hardeep, they have kept the knife in a school at Sarojini Nagar.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Hardeep']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Hardeep']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Juvenile offender also disclosed that after stabbing Hardeep, they have kept the knife in a school at Sarojini Nagar. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Hardeep']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The respondent B. Karunakar in the. main appeal while working as a Sr. Technical Officer,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['B. Karunakar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['B. Karunakar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The respondent B. Karunakar in the. main appeal while working as a Sr. Technical Officer [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['B. Karunakar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"3.The Executive Engineer and Administration Officer, Tamil Nadu Housing Board, Madurai Special Division, Ellis Nagar, Madurai.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Tamil Nadu Housing Board, Madurai Special Division']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Tamil Nadu Housing Board, Madurai Special Division']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 3.The Executive Engineer and Administration Officer, Tamil Nadu Housing Board, Madurai Special Division, Ellis Nagar, Madurai. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Tamil Nadu Housing Board, Madurai Special Division']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Madras Dated : 17-07-2007 Coram : The Honourable Mr. Justice A. Kulasekaran Wp No. 14832 of 2007 and M.P. Nos. 1 and 2 of 2007 C. Augustine Jacob .. Petitioner Versus 1. The Union of India rep. By its Secretary Ministry of Shipping, Road Transport and Highways New Delhi 2. The Competent Authority & Special District Revenue Officer (La) National Highways Kancheepuram and Thiruvallur District Kancheepuram 3. The Special Tahsildar Land Acquisition National Highways Tahsildar's Office Poonamallee Chennai  600 056 ... Respondents Petition filed under Article 226 of The Constitution of India praying for a Writ of Certiorari as stated therein. For Petitioner : Mrs. Hema Sampath, Senior Counsel for Mr. S. Packiaraj For Respondents : Mr. P. Wilson, Asst. Solicitor General for Rr1 & 2 Mrs. Bhavani Subbarayan Government Advocate for R3 Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['A. Kulasekaran']"", ""LAWYER"": ""['Hema Sampath', 'S. Packiaraj', 'P. Wilson', 'Bhavani Subbarayan']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Augustine Jacob']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union of India', 'Competent Authority & Special District Revenue Officer (La) National Highways Kancheepuram and Thiruvallur District Kancheepuram', \""Special Tahsildar Land Acquisition National Highways Tahsildar's Office Poonamallee Chennai\""]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Madras']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['A. Kulasekaran']"", 'LAWYER': ""['Hema Sampath', 'S. Packiaraj', 'P. Wilson', 'Bhavani Subbarayan']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Augustine Jacob']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[\'Union of India\', \'Competent Authority & Special District Revenue Officer (La) National Highways Kancheepuram and Thiruvallur District Kancheepuram\', ""Special Tahsildar Land Acquisition National Highways Tahsildar\'s Office Poonamallee Chennai""]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Madras Dated : 17-07-2007 Coram : The Honourable Mr. Justice A. Kulasekaran Wp No. 14832 of 2007 and M.P. Nos. 1 and 2 of 2007 C. Augustine Jacob .. Petitioner Versus 1. The Union of India rep. By its Secretary Ministry of Shipping, Road Transport and Highways New Delhi 2. The Competent Authority & Special District Revenue Officer (La) National Highways Kancheepuram and Thiruvallur District Kancheepuram 3. The Special Tahsildar Land Acquisition National Highways Tahsildar's Office Poonamallee Chennai  600 056 ... Respondents Petition filed under Article 226 of The Constitution of India praying for a Writ of Certiorari as stated therein. For Petitioner : Mrs. Hema Sampath, Senior Counsel for Mr. S. Packiaraj For Respondents : Mr. P. Wilson, Asst. Solicitor General for Rr1 & 2 Mrs. Bhavani Subbarayan Government Advocate for R3 Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['A. Kulasekaran']"", ""LAWYER"": ""['Hema Sampath', 'S. Packiaraj', 'P. Wilson', 'Bhavani Subbarayan']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Augustine Jacob']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union of India', 'Competent Authority & Special District Revenue Officer (La) National Highways Kancheepuram and Thiruvallur District Kancheepuram', \""Special Tahsildar Land Acquisition National Highways Tahsildar's Office Poonamallee Chennai\""]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Challenging the validity of the collection of the sales tax on the aforesaid basis the appellant filed a writ petition in the High Court of Mysore at Bangalore being writ petition No. 644 of 1966.,"{""CASE_NUMBER"": ""['writ petition No. 644 of 1966']"", ""COURT"": ""['High Court of Mysore at Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['writ petition No. 644 of 1966']"", 'COURT': ""['High Court of Mysore at Bangalore']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Challenging the validity of the collection of the sales tax on the aforesaid basis the appellant filed a writ petition in the High Court of Mysore at Bangalore being writ petition No. 644 of 1966. [/INST]
 {""CASE_NUMBER"": ""['writ petition No. 644 of 1966']"", ""COURT"": ""['High Court of Mysore at Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
There was a suit for partition filed by one Devaki Amma as plaintiff against the first defendant and others for partition and recovery of possession of their share in Puthenpeedikamala shown as having 600 acres.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Puthenpeedikamala']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Devaki Amma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Puthenpeedikamala']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Devaki Amma']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: There was a suit for partition filed by one Devaki Amma as plaintiff against the first defendant and others for partition and recovery of possession of their share in Puthenpeedikamala shown as having 600 acres. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Puthenpeedikamala']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Devaki Amma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The criticism that the State Government in- cluded certain offences but excluded certain cognate of- fences has been dealt with by my learned brother Mukherjea and I have nothing more to add thereto.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mukherjea']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Mukherjea']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The criticism that the State Government in- cluded certain offences but excluded certain cognate of- fences has been dealt with by my learned brother Mukherjea and I have nothing more to add thereto. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mukherjea']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"(4) Kenya (16th July, 1992 to 17th July, 1992)","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['16th July, 1992', '17th July, 1992']"", ""GPE"": ""['Kenya']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['16th July, 1992', '17th July, 1992']"", 'GPE': ""['Kenya']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (4) Kenya (16th July, 1992 to 17th July, 1992) [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['16th July, 1992', '17th July, 1992']"", ""GPE"": ""['Kenya']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The right to file objections and to secure hearing thereon is statutorily provided and is a valuable right of the private operators who would be eliminated, completely or partially, from operating on the routes covered by the scheme depending upon how and to what extent it is approved.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The right to file objections and to secure hearing thereon is statutorily provided and is a valuable right of the private operators who would be eliminated, completely or partially, from operating on the routes covered by the scheme depending upon how and to what extent it is approved. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
In the third case it would not serve the purpose of the Act if the tenant was held liable to be evicted forthwith as is the view taken by the Punjab High Court in the case of Dial Chand (supra).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Punjab High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dial Chand']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Punjab High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Dial Chand']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the third case it would not serve the purpose of the Act if the tenant was held liable to be evicted forthwith as is the view taken by the Punjab High Court in the case of Dial Chand (supra). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Punjab High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dial Chand']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Patna Civil Writ Jurisdiction Case No.267 of 2010 =========================================================== 1. Ram Sevak Yadav W/O Late Shri Shivlal Yadav R/O Vill- Mahadeva, P.O. Jageshwar Asthan, P.S. Phulparas, Distt. Madhubani .... .... Petitioner/s Versus 1. The State Of Bihar Through The Chief Secretary Govt. Of Bihar, Old Secretariate, Patna 2. The Secretary Deptt. Of Health, Medical Education And Family Welfare, Govt. Of Bihar, Patna 3. The Additional Secretary Deptt. Of Health, Govt. Of Bihar, Patna 4. The Director Health Services, Govt. Of Bihar, Patna 5. The Civil Surgeon-Cum-Chief Medical Officer Madhubani 6. The Incharge Medical Officer Primary Health Centre, Ghoghardiha, Distt. Madhubani .... .... Respondent/s with Civil Writ Jurisdiction Case No. 472 of 2010 =========================================================== 1. Umesh Ram S/O Late Asharfi Ram R/O Village, Post Office And Police Station Ghoghardiha, Distt. Madhubani .... .... Petitioner/s Versus 1. The State Of Bihar Through The Principal Secretary Department Of Health, Government Of Bihar, Patna 2. The Director-In-Chief Health Services, Government Of Bihar, Patna 3. The Regional Deputy Director Health Service, Darbhanga Division, Darbhanga 4. The Civil Surgeon - Cum - Chief Medical Officer Distt.- Madhubani 5. The Incharge Medical Officer Primary Health Centre, Ghoghardiha, Distt.- Madhubani .... .... Respondent/s =========================================================== Appearance :(In Cwjc No. 267 of 2010) For the Petitioner/s : Mr. L.K.Yadav Mr. Prabhu Narayan Prabhakar Mr. Binod Kumar Yadav For the Respondent/s : Mr. (Sc23) (In Cwjc No. 472 of 2010) For the Petitioner/s : Mr. L.K.Yadav Mr. Prabhu Narayan Prabhakar For the Respondent/s : Mr. (Gp4) =========================================================== Patna High Court Cwjc No.267 of 2010 dt. 01-02-2013 2 Coram: Honourable Mr. Justice Navin Sinha and Honourable Mr. Justice Samarendra Pratap Singh and Honourable Mr. Justice V. Nath Oral Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna', 'Patna High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Navin Sinha', 'Samarendra Pratap Singh', 'V. Nath']"", ""LAWYER"": ""['L.K.Yadav', 'Prabhu Narayan Prabhakar', 'Binod Kumar Yadav']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ram Sevak Yadav', 'Umesh Ram']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Bihar', 'Secretary Deptt. Of Health, Medical Education And Family Welfare, Govt. Of Bihar, Patna', 'Additional Secretary Deptt. Of Health, Govt. Of Bihar, Patna', 'Director Health Services, Govt. Of Bihar, Patna', 'Civil Surgeon-Cum-Chief Medical Officer Madhubani', 'Incharge Medical Officer Primary Health Centre, Ghoghardiha, Distt. Madhubani', 'Director-In-Chief Health Services, Government Of Bihar, Patna', 'Regional Deputy Director Health Service, Darbhanga Division, Darbhanga', 'Civil Surgeon - Cum - Chief Medical Officer Distt.- Madhubani', 'Incharge Medical Officer Primary Health Centre, Ghoghardiha, Distt.- Madhubani']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Patna', 'Patna High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Navin Sinha', 'Samarendra Pratap Singh', 'V. Nath']"", 'LAWYER': ""['L.K.Yadav', 'Prabhu Narayan Prabhakar', 'Binod Kumar Yadav']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ram Sevak Yadav', 'Umesh Ram']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Bihar', 'Secretary Deptt. Of Health, Medical Education And Family Welfare, Govt. Of Bihar, Patna', 'Additional Secretary Deptt. Of Health, Govt. Of Bihar, Patna', 'Director Health Services, Govt. Of Bihar, Patna', 'Civil Surgeon-Cum-Chief Medical Officer Madhubani', 'Incharge Medical Officer Primary Health Centre, Ghoghardiha, Distt. Madhubani', 'Director-In-Chief Health Services, Government Of Bihar, Patna', 'Regional Deputy Director Health Service, Darbhanga Division, Darbhanga', 'Civil Surgeon - Cum - Chief Medical Officer Distt.- Madhubani', 'Incharge Medical Officer Primary Health Centre, Ghoghardiha, Distt.- Madhubani']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Patna Civil Writ Jurisdiction Case No.267 of 2010 =========================================================== 1. Ram Sevak Yadav W/O Late Shri Shivlal Yadav R/O Vill- Mahadeva, P.O. Jageshwar Asthan, P.S. Phulparas, Distt. Madhubani .... .... Petitioner/s Versus 1. The State Of Bihar Through The Chief Secretary Govt. Of Bihar, Old Secretariate, Patna 2. The Secretary Deptt. Of Health, Medical Education And Family Welfare, Govt. Of Bihar, Patna 3. The Additional Secretary Deptt. Of Health, Govt. Of Bihar, Patna 4. The Director Health Services, Govt. Of Bihar, Patna 5. The Civil Surgeon-Cum-Chief Medical Officer Madhubani 6. The Incharge Medical Officer Primary Health Centre, Ghoghardiha, Distt. Madhubani .... .... Respondent/s with Civil Writ Jurisdiction Case No. 472 of 2010 =========================================================== 1. Umesh Ram S/O Late Asharfi Ram R/O Village, Post Office And Police Station Ghoghardiha, Distt. Madhubani .... .... Petitioner/s Versus 1. The State Of Bihar Through The Principal Secretary Department Of Health, Government Of Bihar, Patna 2. The Director-In-Chief Health Services, Government Of Bihar, Patna 3. The Regional Deputy Director Health Service, Darbhanga Division, Darbhanga 4. The Civil Surgeon - Cum - Chief Medical Officer Distt.- Madhubani 5. The Incharge Medical Officer Primary Health Centre, Ghoghardiha, Distt.- Madhubani .... .... Respondent/s =========================================================== Appearance :(In Cwjc No. 267 of 2010) For the Petitioner/s : Mr. L.K.Yadav Mr. Prabhu Narayan Prabhakar Mr. Binod Kumar Yadav For the Respondent/s : Mr. (Sc23) (In Cwjc No. 472 of 2010) For the Petitioner/s : Mr. L.K.Yadav Mr. Prabhu Narayan Prabhakar For the Respondent/s : Mr. (Gp4) =========================================================== Patna High Court Cwjc No.267 of 2010 dt. 01-02-2013 2 Coram: Honourable Mr. Justice Navin Sinha and Honourable Mr. Justice Samarendra Pratap Singh and Honourable Mr. Justice V. Nath Oral Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna', 'Patna High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Navin Sinha', 'Samarendra Pratap Singh', 'V. Nath']"", ""LAWYER"": ""['L.K.Yadav', 'Prabhu Narayan Prabhakar', 'Binod Kumar Yadav']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ram Sevak Yadav', 'Umesh Ram']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Bihar', 'Secretary Deptt. Of Health, Medical Education And Family Welfare, Govt. Of Bihar, Patna', 'Additional Secretary Deptt. Of Health, Govt. Of Bihar, Patna', 'Director Health Services, Govt. Of Bihar, Patna', 'Civil Surgeon-Cum-Chief Medical Officer Madhubani', 'Incharge Medical Officer Primary Health Centre, Ghoghardiha, Distt. Madhubani', 'Director-In-Chief Health Services, Government Of Bihar, Patna', 'Regional Deputy Director Health Service, Darbhanga Division, Darbhanga', 'Civil Surgeon - Cum - Chief Medical Officer Distt.- Madhubani', 'Incharge Medical Officer Primary Health Centre, Ghoghardiha, Distt.- Madhubani']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The ad interim order dated 8.7.1998 passed in Notice of Motion No. 2018 of 1998, stands modified to the extent aforesaid.","{""CASE_NUMBER"": ""['Notice of Motion No. 2018 of 1998']"", ""COURT"": ""[]"", ""DATE"": ""['8.7.1998']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Notice of Motion No. 2018 of 1998']"", 'COURT': '[]', 'DATE': ""['8.7.1998']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The ad interim order dated 8.7.1998 passed in Notice of Motion No. 2018 of 1998, stands modified to the extent aforesaid. [/INST]
 {""CASE_NUMBER"": ""['Notice of Motion No. 2018 of 1998']"", ""COURT"": ""[]"", ""DATE"": ""['8.7.1998']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"With regard to the right guaranteed under Article 19 (1) (c) the Supreme Court said that if an association was formed for the purpose of carrying on business, the right to form it would be governed by sub-clause (c) of clause (1) of Article 19.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 19 (1) (c)', 'sub-clause (c) of clause (1) of Article 19']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 19 (1) (c)', 'sub-clause (c) of clause (1) of Article 19']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: With regard to the right guaranteed under Article 19 (1) (c) the Supreme Court said that if an association was formed for the purpose of carrying on business, the right to form it would be governed by sub-clause (c) of clause (1) of Article 19. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 19 (1) (c)', 'sub-clause (c) of clause (1) of Article 19']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Here it must be noted that the land belonging to late Narayanan Nair, father of the petitioner was acquired by the Government as early as in December, 1983 and the Land Acquisition Court had enhanced the compensation in similar cases as per judgment and decree dated 26.7.1989.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['26.7.1989']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Narayanan Nair']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['26.7.1989']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Narayanan Nair']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Here it must be noted that the land belonging to late Narayanan Nair, father of the petitioner was acquired by the Government as early as in December, 1983 and the Land Acquisition Court had enhanced the compensation in similar cases as per judgment and decree dated 26.7.1989. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['26.7.1989']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Narayanan Nair']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Lila Singh (appellant No.3) in his defence stated that he had been falsely involved in this case at the instance of Gurcharan Singh Sarpanch of village Panjmala.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Panjmala']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Gurcharan Singh Sarpanch']"", ""PETITIONER"": ""['Lila Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Panjmala']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Gurcharan Singh Sarpanch']"", 'PETITIONER': ""['Lila Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Lila Singh (appellant No.3) in his defence stated that he had been falsely involved in this case at the instance of Gurcharan Singh Sarpanch of village Panjmala. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Panjmala']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Gurcharan Singh Sarpanch']"", ""PETITIONER"": ""['Lila Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The certificate issued by Dy.Comdt. And OC Tps. Rampal Singh showed that the deceased had obtained the following medals during active service in various operation areas: (a) Sena Seva Service Medal (b) Sangram Medal (c) Poorvi Star (d) 25th Indept. Anniversary Medal. 2.17G,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Rampal Singh']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Rampal Singh']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The certificate issued by Dy.Comdt. And OC Tps. Rampal Singh showed that the deceased had obtained the following medals during active service in various operation areas: (a) Sena Seva Service Medal (b) Sangram Medal (c) Poorvi Star (d) 25th Indept. Anniversary Medal. 2.17G [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Rampal Singh']"", ""WITNESS"": ""[]""} </s>"
"For this proposition, he placed reliance on the following decisions:- 1) Goutam Kundu v. State of West Bengal and Another: 2) Rakesh Bisht v. Central Bureau of Investigation: 2007 Cri LJ 1530; and DEATH SENTENCE REF.2/08&CRLA Nos.768/08 & 90/09 Page No. 31 of 51","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Goutam Kundu v. State of West Bengal and Another', 'Rakesh Bisht v. Central Bureau of Investigation: 2007 Cri LJ 1530']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Goutam Kundu v. State of West Bengal and Another', 'Rakesh Bisht v. Central Bureau of Investigation: 2007 Cri LJ 1530']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: For this proposition, he placed reliance on the following decisions:- 1) Goutam Kundu v. State of West Bengal and Another: 2) Rakesh Bisht v. Central Bureau of Investigation: 2007 Cri LJ 1530; and DEATH SENTENCE REF.2/08&CRLA Nos.768/08 & 90/09 Page No. 31 of 51 [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Goutam Kundu v. State of West Bengal and Another', 'Rakesh Bisht v. Central Bureau of Investigation: 2007 Cri LJ 1530']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (civil) 8161-8162 of 2003 Appeal (civil) 8163-8164 of 2003 Petitioner: Union of India and Anr. Respondent: Azadi Bachao Andolan and Anr. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Union of India']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Azadi Bachao Andolan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Union of India']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Azadi Bachao Andolan']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 8161-8162 of 2003 Appeal (civil) 8163-8164 of 2003 Petitioner: Union of India and Anr. Respondent: Azadi Bachao Andolan and Anr. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Union of India']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Azadi Bachao Andolan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Thus in the absence of any material on record to show that this commission was paid for securing acceptance of tender, we see no good reason to disallow this item.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Thus in the absence of any material on record to show that this commission was paid for securing acceptance of tender, we see no good reason to disallow this item. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Thus, none of the orders referred to above contain adverse finding.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Thus, none of the orders referred to above contain adverse finding. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"She has further placed reliance on the decision of the Hon'ble Apex Court in Rajinder Prasad v. Bashir and Others, reported in AIR 2001 SC 3524, wherein the Hon'ble Apex Court","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Rajinder Prasad v. Bashir and Others, reported in AIR 2001 SC 3524']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Rajinder Prasad v. Bashir and Others, reported in AIR 2001 SC 3524']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: She has further placed reliance on the decision of the Hon'ble Apex Court in Rajinder Prasad v. Bashir and Others, reported in AIR 2001 SC 3524, wherein the Hon'ble Apex Court [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Rajinder Prasad v. Bashir and Others, reported in AIR 2001 SC 3524']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As the Karnal Court had no jurisdiction to entertain the plaint, it was not the proper Court.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Karnal Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Karnal Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As the Karnal Court had no jurisdiction to entertain the plaint, it was not the proper Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Karnal Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Khem Chand Vs. Respondent: The Union Of India And Others Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Khem Chand']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union Of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Khem Chand']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Union Of India']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Khem Chand Vs. Respondent: The Union Of India And Others Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Khem Chand']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union Of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Learned Senior Counsel for the petitioners, has, after placing reliance on the Judgment of the Apex Court in Government of India v. Madras Rubber Factory Ltd., urged that in case of a product which has a cum-duty price, the assessment is required to be done on the basis of wholesale price less excise duty payable, as provided under section 4(4)(d)(ii) of the Central Excise Act, 1944.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Government of India v. Madras Rubber Factory Ltd.']"", ""PROVISION"": ""['section 4(4)(d)(ii)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Central Excise Act, 1944']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Government of India v. Madras Rubber Factory Ltd.']"", 'PROVISION': ""['section 4(4)(d)(ii)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Central Excise Act, 1944']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Learned Senior Counsel for the petitioners, has, after placing reliance on the Judgment of the Apex Court in Government of India v. Madras Rubber Factory Ltd., urged that in case of a product which has a cum-duty price, the assessment is required to be done on the basis of wholesale price less excise duty payable, as provided under section 4(4)(d)(ii) of the Central Excise Act, 1944. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Government of India v. Madras Rubber Factory Ltd.']"", ""PROVISION"": ""['section 4(4)(d)(ii)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Central Excise Act, 1944']"", ""WITNESS"": ""[]""} </s>"
"Mr.Vijay K. Gupta, learned Counsel 20/31 Rajesh Berry Vs. Genesis Educational Foundation for appellants referred to para 4 of the order dt. 18.01.08 whereby the complaint u/s. 138 N.I. Act against Geeta Berry was quashed.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['18.01.08']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Vijay K. Gupta', 'Geeta Berry']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Rajesh Berry Vs. Genesis Educational Foundation']"", ""PROVISION"": ""['s. 138']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['N.I. Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['18.01.08']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Vijay K. Gupta', 'Geeta Berry']"", 'PETITIONER': '[]', 'PRECEDENT': ""['Rajesh Berry Vs. Genesis Educational Foundation']"", 'PROVISION': ""['s. 138']"", 'RESPONDENT': '[]', 'STATUTE': ""['N.I. Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mr.Vijay K. Gupta, learned Counsel 20/31 Rajesh Berry Vs. Genesis Educational Foundation for appellants referred to para 4 of the order dt. 18.01.08 whereby the complaint u/s. 138 N.I. Act against Geeta Berry was quashed. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['18.01.08']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Vijay K. Gupta', 'Geeta Berry']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Rajesh Berry Vs. Genesis Educational Foundation']"", ""PROVISION"": ""['s. 138']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['N.I. Act']"", ""WITNESS"": ""[]""} </s>"
"All three brothers of late Sardar Atma Singh mutually agreed that property in question would be re­built and each one of them would have one floor each to be determined by draw of lots, the said oral partition agreement dated 22.12.2000 was stated to have reduced into writing.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22.12.2000']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Atma Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['22.12.2000']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Atma Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: All three brothers of late Sardar Atma Singh mutually agreed that property in question would be re­built and each one of them would have one floor each to be determined by draw of lots, the said oral partition agreement dated 22.12.2000 was stated to have reduced into writing. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22.12.2000']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Atma Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Ujagar Prints Etc. Vs. Respondent: Union Of India & Ors. Etc. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ujagar Prints']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union Of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ujagar Prints']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Union Of India']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Ujagar Prints Etc. Vs. Respondent: Union Of India & Ors. Etc. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ujagar Prints']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union Of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Hon'Ble Sri Justice K.C.Bhanu And Hon'Ble Sri Justice Challa Kodanda Ram Criminal Appeal No.722 Of 2011 And dated:12-06-2013 Karam Sreenivasu Dora .... Appellant The State of Andhra Pradesh, rep.by its Public Prosecutor, High Court of Andhra Pradesh, Hyderabad.....RESPONDENT Counsel for the appellant:Sri P.Prabhakar Reddy Counsel for the respondent: Public Prosecutor <Gist: >Head Note: ?Cases referred: 1. A.I.R.1952 Sc 343 2. (1973) 2 Scc 793 3. Air 1984 Sc 1622 4. (2009)13 Supreme Court Cases 534 5. (2012) 6 Supreme Court Cases 403 6. A.I.R.1971 Sc 1871 7. (2006) 13 Scc 516 8. A.I.R.1956 Sc 116 9. A.I.R.1980 Sc 898 10.(2002)4 Scc 679 Hon'Ble Sri Justice K.C.Bhanu And Hon'Ble Sri Justice Challa Kodanda Ram Criminal Appeal No.722 Of 2011 And Referred Trial No.7 Of 2012 Common Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K.C.Bhanu', 'Challa Kodanda Ram']"", ""LAWYER"": ""['P.Prabhakar Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Karam Sreenivasu Dora']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Andhra Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['K.C.Bhanu', 'Challa Kodanda Ram']"", 'LAWYER': ""['P.Prabhakar Reddy']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Karam Sreenivasu Dora']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Andhra Pradesh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Hon'Ble Sri Justice K.C.Bhanu And Hon'Ble Sri Justice Challa Kodanda Ram Criminal Appeal No.722 Of 2011 And dated:12-06-2013 Karam Sreenivasu Dora .... Appellant The State of Andhra Pradesh, rep.by its Public Prosecutor, High Court of Andhra Pradesh, Hyderabad.....RESPONDENT Counsel for the appellant:Sri P.Prabhakar Reddy Counsel for the respondent: Public Prosecutor <Gist: >Head Note: ?Cases referred: 1. A.I.R.1952 Sc 343 2. (1973) 2 Scc 793 3. Air 1984 Sc 1622 4. (2009)13 Supreme Court Cases 534 5. (2012) 6 Supreme Court Cases 403 6. A.I.R.1971 Sc 1871 7. (2006) 13 Scc 516 8. A.I.R.1956 Sc 116 9. A.I.R.1980 Sc 898 10.(2002)4 Scc 679 Hon'Ble Sri Justice K.C.Bhanu And Hon'Ble Sri Justice Challa Kodanda Ram Criminal Appeal No.722 Of 2011 And Referred Trial No.7 Of 2012 Common Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K.C.Bhanu', 'Challa Kodanda Ram']"", ""LAWYER"": ""['P.Prabhakar Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Karam Sreenivasu Dora']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Andhra Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Providing for imposition of a premium which is nothing but a fee, will have to be held to be ultra vires, the provisions of the MRTP Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['MRTP Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['MRTP Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Providing for imposition of a premium which is nothing but a fee, will have to be held to be ultra vires, the provisions of the MRTP Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['MRTP Act']"", ""WITNESS"": ""[]""} </s>"
"As scheduled in the tender notice, the bids received were opened on 25.07.2009 at 4.30 p.m. and the amounts quoted, in so far as it is relevant, are as follows: (1) Petitioner in W.P.(C) No.22631/2009 - Rs.1,03,32,000.00 (2)Petitioner in W.P.(C) No.21443/2009 - Rs.1,01,05,555.00 (3) Sri.Baburajan V.K. (4th Respondent in W.P.(C)No.22631/09 & 3rd respondent in W.P.(C) No. 21443/09) - Rs. 95,00,000.00 WPC .Nos.21443/09","{""CASE_NUMBER"": ""['W.P.(C) No.22631/2009', 'W.P.(C) No.21443/2009', 'W.P.(C)No.22631/09', 'W.P.(C) No. 21443/09', 'WPC .Nos.21443/09']"", ""COURT"": ""[]"", ""DATE"": ""['25.07.2009']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Baburajan V.K.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['W.P.(C) No.22631/2009', 'W.P.(C) No.21443/2009', 'W.P.(C)No.22631/09', 'W.P.(C) No. 21443/09', 'WPC .Nos.21443/09']"", 'COURT': '[]', 'DATE': ""['25.07.2009']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Baburajan V.K.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As scheduled in the tender notice, the bids received were opened on 25.07.2009 at 4.30 p.m. and the amounts quoted, in so far as it is relevant, are as follows: (1) Petitioner in W.P.(C) No.22631/2009 - Rs.1,03,32,000.00 (2)Petitioner in W.P.(C) No.21443/2009 - Rs.1,01,05,555.00 (3) Sri.Baburajan V.K. (4th Respondent in W.P.(C)No.22631/09 & 3rd respondent in W.P.(C) No. 21443/09) - Rs. 95,00,000.00 WPC .Nos.21443/09 [/INST]
 {""CASE_NUMBER"": ""['W.P.(C) No.22631/2009', 'W.P.(C) No.21443/2009', 'W.P.(C)No.22631/09', 'W.P.(C) No. 21443/09', 'WPC .Nos.21443/09']"", ""COURT"": ""[]"", ""DATE"": ""['25.07.2009']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Baburajan V.K.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It is an arbitrary mode of capitalization of the compensation in an injury case by deviating the procedure which is so far established and settled by the judicial pronouncements of this Court and the Apex Court.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is an arbitrary mode of capitalization of the compensation in an injury case by deviating the procedure which is so far established and settled by the judicial pronouncements of this Court and the Apex Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Patna Criminal Appeal (Db) No.418 of 2008 (Against the judgment of conviction and order of sentence dated 14.02.2008 passed by Additional Sessions Judge Xi, Patna in Sessions Trial No. 976 of 1999) =========================================================== Rajesh Ranjan @ Pappu Yadav, son of Sri Chandra Narayan Prasad, resident of Court Station Road, P.S. K. Hat Purnea, district Purnea, Bihar, presently lodged at Jail No.3, Central Jail, Tihar, New Delhi .... .... Appellant/s Versus The State of Bihar through the C.B.I. .... .... Respondent/s With Criminal Appeal (Db) No. 240 of 2008 =========================================================== Anil Kumar Yadav, son of Hari Yadav, resident of mohalla Moranga, police station Moranga (K. Hat), district Purnea .... .... Appellant/s Versus The State of Bihar through the C.B.I .... .... Respondent/s With Criminal Appeal (Db) No. 361 of 2008 =========================================================== Rajan Tiwary, son of Vishwa Jeevan Tripathy, resident of village Sahgaura, P.S. Gagaha in the town and district of Gorakhpur (Uttar Pradesh) .... .... Appellant/s Versus The State of Bihar through the C.B.I .... .... Respondent/s =========================================================== Appearance : (In Cr. App (Db) No. 418 of 2008) For the Appellant/s : M/s. Shrikant V. Bhat, Rakesh Kumar Singh, Ravi Sharma, Rajesh Ranjan, J. John, Ajit Kumar Ojha, Nutan Mishra, Pandey Sanjay Sahay, Advocates. (In Cr. App (Db) No. 240 of 2008) For the Appellant/s : M/s. Ramakant Sharma, Sr. Advocate, Ajeet Ojha, Nutan Mishra, Advocate. (In Cr. App (Db) No. 361 of 2008) For the Appellant/s : M/s. Surendra Singh, Sr. Advocate, Dr. Abhishek Priyadarshi, Advocate (For C.B.I. in all appeals) : M/s. Rakesh Kumar Khanna, Sr. Advocate (Additional Solicitor General of India for C.B.I), Harsh Prabhakar, Anando Mukherjee, Bipin Kumar Sinha (Standing Counsel for C.B.I.), Prabhu Narayan Sharma, Sunil Patna High Court Cr. App (Db) No.418 of 2008 dt.17-05-2013 2 Kumar Ravi, Shashi Shekhar Kumar Prasad, Advocates. (For P.W. 9 in all appeals) : M/s. Jitendra Singh, Sr. Advocate, Soni Shrivastava, Amit Prakash, Ravi Bhardwaj, Amit Pawan, Advocates. =========================================================== Coram: Honourable Mr. Justice V.N. Sinha And Honourable Mr. Justice Amaresh Kumar Lal C.A.V. Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna', 'Sunil Patna High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V.N. Sinha', 'Amaresh Kumar Lal']"", ""LAWYER"": ""['Shrikant V. Bhat', 'Rakesh Kumar Singh', 'Ravi Sharma', 'Rajesh Ranjan', 'J. John', 'Ajit Kumar Ojha', 'Nutan Mishra', 'Pandey Sanjay Sahay', 'Ramakant Sharma', 'Ajeet Ojha', 'Surendra Singh', 'Abhishek Priyadarshi', 'Rakesh Kumar Khanna', 'Harsh Prabhakar', 'Anando Mukherjee', 'Bipin Kumar Sinha', 'Prabhu Narayan Sharma', 'Shashi Shekhar Kumar Prasad', 'Jitendra Singh', 'Soni Shrivastava', 'Amit Prakash', 'Ravi Bhardwaj', 'Amit Pawan']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rajesh Ranjan @ Pappu Yadav', 'Anil Kumar Yadav', 'Rajan Tiwary', '2 Kumar Ravi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Bihar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Patna', 'Sunil Patna High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['V.N. Sinha', 'Amaresh Kumar Lal']"", 'LAWYER': ""['Shrikant V. Bhat', 'Rakesh Kumar Singh', 'Ravi Sharma', 'Rajesh Ranjan', 'J. John', 'Ajit Kumar Ojha', 'Nutan Mishra', 'Pandey Sanjay Sahay', 'Ramakant Sharma', 'Ajeet Ojha', 'Surendra Singh', 'Abhishek Priyadarshi', 'Rakesh Kumar Khanna', 'Harsh Prabhakar', 'Anando Mukherjee', 'Bipin Kumar Sinha', 'Prabhu Narayan Sharma', 'Shashi Shekhar Kumar Prasad', 'Jitendra Singh', 'Soni Shrivastava', 'Amit Prakash', 'Ravi Bhardwaj', 'Amit Pawan']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Rajesh Ranjan @ Pappu Yadav', 'Anil Kumar Yadav', 'Rajan Tiwary', '2 Kumar Ravi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Bihar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Patna Criminal Appeal (Db) No.418 of 2008 (Against the judgment of conviction and order of sentence dated 14.02.2008 passed by Additional Sessions Judge Xi, Patna in Sessions Trial No. 976 of 1999) =========================================================== Rajesh Ranjan @ Pappu Yadav, son of Sri Chandra Narayan Prasad, resident of Court Station Road, P.S. K. Hat Purnea, district Purnea, Bihar, presently lodged at Jail No.3, Central Jail, Tihar, New Delhi .... .... Appellant/s Versus The State of Bihar through the C.B.I. .... .... Respondent/s With Criminal Appeal (Db) No. 240 of 2008 =========================================================== Anil Kumar Yadav, son of Hari Yadav, resident of mohalla Moranga, police station Moranga (K. Hat), district Purnea .... .... Appellant/s Versus The State of Bihar through the C.B.I .... .... Respondent/s With Criminal Appeal (Db) No. 361 of 2008 =========================================================== Rajan Tiwary, son of Vishwa Jeevan Tripathy, resident of village Sahgaura, P.S. Gagaha in the town and district of Gorakhpur (Uttar Pradesh) .... .... Appellant/s Versus The State of Bihar through the C.B.I .... .... Respondent/s =========================================================== Appearance : (In Cr. App (Db) No. 418 of 2008) For the Appellant/s : M/s. Shrikant V. Bhat, Rakesh Kumar Singh, Ravi Sharma, Rajesh Ranjan, J. John, Ajit Kumar Ojha, Nutan Mishra, Pandey Sanjay Sahay, Advocates. (In Cr. App (Db) No. 240 of 2008) For the Appellant/s : M/s. Ramakant Sharma, Sr. Advocate, Ajeet Ojha, Nutan Mishra, Advocate. (In Cr. App (Db) No. 361 of 2008) For the Appellant/s : M/s. Surendra Singh, Sr. Advocate, Dr. Abhishek Priyadarshi, Advocate (For C.B.I. in all appeals) : M/s. Rakesh Kumar Khanna, Sr. Advocate (Additional Solicitor General of India for C.B.I), Harsh Prabhakar, Anando Mukherjee, Bipin Kumar Sinha (Standing Counsel for C.B.I.), Prabhu Narayan Sharma, Sunil Patna High Court Cr. App (Db) No.418 of 2008 dt.17-05-2013 2 Kumar Ravi, Shashi Shekhar Kumar Prasad, Advocates. (For P.W. 9 in all appeals) : M/s. Jitendra Singh, Sr. Advocate, Soni Shrivastava, Amit Prakash, Ravi Bhardwaj, Amit Pawan, Advocates. =========================================================== Coram: Honourable Mr. Justice V.N. Sinha And Honourable Mr. Justice Amaresh Kumar Lal C.A.V. Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna', 'Sunil Patna High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V.N. Sinha', 'Amaresh Kumar Lal']"", ""LAWYER"": ""['Shrikant V. Bhat', 'Rakesh Kumar Singh', 'Ravi Sharma', 'Rajesh Ranjan', 'J. John', 'Ajit Kumar Ojha', 'Nutan Mishra', 'Pandey Sanjay Sahay', 'Ramakant Sharma', 'Ajeet Ojha', 'Surendra Singh', 'Abhishek Priyadarshi', 'Rakesh Kumar Khanna', 'Harsh Prabhakar', 'Anando Mukherjee', 'Bipin Kumar Sinha', 'Prabhu Narayan Sharma', 'Shashi Shekhar Kumar Prasad', 'Jitendra Singh', 'Soni Shrivastava', 'Amit Prakash', 'Ravi Bhardwaj', 'Amit Pawan']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rajesh Ranjan @ Pappu Yadav', 'Anil Kumar Yadav', 'Rajan Tiwary', '2 Kumar Ravi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Bihar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The legal notice bears two addresses of the defendant being Delhi Consumer Co­operative Whole Sale Store Limited, Moti Nagar, New Delhi and Shop No. AB­14, DDA Market, Safdarjung Enclave, New Delhi (Suit Property).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Delhi', 'New Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Delhi', 'New Delhi']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The legal notice bears two addresses of the defendant being Delhi Consumer Co­operative Whole Sale Store Limited, Moti Nagar, New Delhi and Shop No. AB­14, DDA Market, Safdarjung Enclave, New Delhi (Suit Property). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Delhi', 'New Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
(K.S. GAREWAL) (SHAM SUNDER) JUDGE JUDGE 27.01.2009 Amodh,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['27.01.2009']"", ""GPE"": ""[]"", ""JUDGE"": ""['K.S. GAREWAL', 'SHAM SUNDER']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['27.01.2009']"", 'GPE': '[]', 'JUDGE': ""['K.S. GAREWAL', 'SHAM SUNDER']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (K.S. GAREWAL) (SHAM SUNDER) JUDGE JUDGE 27.01.2009 Amodh [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['27.01.2009']"", ""GPE"": ""[]"", ""JUDGE"": ""['K.S. GAREWAL', 'SHAM SUNDER']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 cam.448.14.doc jdk In The High Court Of Judicature At Bombay Civil Appellate Jurisdiction Civil Application No. 448 Of 2014 In Family Court Appeal No. 142 Of 2014 Mrs. Sonia Kunwar Singh Bedi ] Age 37 years, residing at ] 244, The Embassy Ali ] Aksar Road, Bangalore 560052 ].. Applicant [Ori. Respondent] Vs. Mr. Kunwar Singh Bedi ] Age 45 years, ] Residing at 41-A, ] Meherina Napean Sea Road, ] Mumbai ].. Respondent [Ori. Appellant] .... Mr. Robin Jaisinghani along with Nirman Sharma Advocate i/b Ms. Edith Dey Advocate for the Applicant Mr. R.T. Lalwani along with Mr. Prakash Mahadik Advocate for the Respondent .... Coram : Smt.V.K.Tahilramani And Shri. A.K.Menon, Jj. Reserved On : Dec. 10, 2014 Pronounced On : Dec. 17, 2014 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V.K.Tahilramani', 'A.K.Menon']"", ""LAWYER"": ""['Robin Jaisinghani', 'Nirman Sharma', 'Edith Dey', 'R.T. Lalwani', 'Prakash Mahadik']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Sonia Kunwar Singh Bedi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Kunwar Singh Bedi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['V.K.Tahilramani', 'A.K.Menon']"", 'LAWYER': ""['Robin Jaisinghani', 'Nirman Sharma', 'Edith Dey', 'R.T. Lalwani', 'Prakash Mahadik']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Sonia Kunwar Singh Bedi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Kunwar Singh Bedi']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 cam.448.14.doc jdk In The High Court Of Judicature At Bombay Civil Appellate Jurisdiction Civil Application No. 448 Of 2014 In Family Court Appeal No. 142 Of 2014 Mrs. Sonia Kunwar Singh Bedi ] Age 37 years, residing at ] 244, The Embassy Ali ] Aksar Road, Bangalore 560052 ].. Applicant [Ori. Respondent] Vs. Mr. Kunwar Singh Bedi ] Age 45 years, ] Residing at 41-A, ] Meherina Napean Sea Road, ] Mumbai ].. Respondent [Ori. Appellant] .... Mr. Robin Jaisinghani along with Nirman Sharma Advocate i/b Ms. Edith Dey Advocate for the Applicant Mr. R.T. Lalwani along with Mr. Prakash Mahadik Advocate for the Respondent .... Coram : Smt.V.K.Tahilramani And Shri. A.K.Menon, Jj. Reserved On : Dec. 10, 2014 Pronounced On : Dec. 17, 2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V.K.Tahilramani', 'A.K.Menon']"", ""LAWYER"": ""['Robin Jaisinghani', 'Nirman Sharma', 'Edith Dey', 'R.T. Lalwani', 'Prakash Mahadik']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Sonia Kunwar Singh Bedi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Kunwar Singh Bedi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The petitioner in this case (Civil Writ No. 1307 of 1939) is a displaced person from West Punjab and has now settled at Jullundur.,"{""CASE_NUMBER"": ""['Civil Writ No. 1307 of 1939']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['West Punjab', 'Jullundur']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Civil Writ No. 1307 of 1939']"", 'COURT': '[]', 'DATE': '[]', 'GPE': ""['West Punjab', 'Jullundur']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioner in this case (Civil Writ No. 1307 of 1939) is a displaced person from West Punjab and has now settled at Jullundur. [/INST]
 {""CASE_NUMBER"": ""['Civil Writ No. 1307 of 1939']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['West Punjab', 'Jullundur']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 In The High Court Of Karnataka At Bangalore Dated This The 12Th Day Of March 2014 Before The Hon'Ble Mr.Justice N. Ananda Criminal Appeal No.1652/2007 C/W Criminal Appeal No.1726/2007 CRL.A.No.1652/2007 Between: 1. Mapillai K H Sulaiman S/O Hydros, 45 Years, Coolie, R/At Anepare Coffee Estate Line Kutta Village. 2. M N Venu S/O Madhavan, 50 Years Poojekallu, Kutta Village 3. C Subber S/O Ahamed Kutty, 39 Years, Driver Nazim Manzil, Keelaloor Village Panchayath, Yedeyannur Village Mattanoor Taluk, Kannanoor District Kerala State 4. K P Azeez S/O Late Mohammed, 44 Years Kottarthil House Yedeyannur Village Keelaloor Village Panchayat Mattanoor Taluk, Kannanoor District Kerala State 5. E K Azeez S/O Mamuti, 37 Years 2K House, Palur Palli Mattanoor Taluk ... Appellants 2 (By Sri N Ravindranath Kamath, Advocate) And: The State Of Karnataka By Deputy Superintendent Of Police C.A.Squad, C.O.D., Bangalore. ... Respondent (By Sri B Visweswaraiah, Hcgp) This Appeal Is Filed Under Section 374(2) Cr.P.C., Against The Judgment Dated 26.10.2007 In S.C.No.48/2000, On The File Of The Sessions Judge, Kodagu At Madikeri, Convicting Appellants-Accused For Offences Punishable Under Sections 489-B, 489-C And 120-B Ipc & Etc. CRL.A.No.1726/2007 Between: Nayar K Vinodh S/O Kunhiraman, 39 Years Chakkekekal, Maka Post Anjaranakandi, Kannanoor District, Kerala State. ... Appellant (By Sri N Ravindranath Kamath, Advocate) And: The State Of Karnataka By Deputy Superintendent Of Police C A Squad, C.O.D., Bangalore. ... Respondent (By Sri B Visweswaraiah, Hcgp) This Appeal Is Filed Under Section 374 (2) Cr.P.C., Against The Judgment Dated 26.10.2007 Passed By The District & Sessions Judge, Kodagu At Madikeri In S.C.No.48/2000, Convicting Appellant/Accused No.3 For Offences Punishable Under Sections 489-B, 489-C And 120-B Ipc And Etc. These Appeals Coming On For Final Hearing This Day, The Court Delivered The Following: 3 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['N. Ananda']"", ""LAWYER"": ""['N Ravindranath Kamath', 'B Visweswaraiah']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Mapillai K H Sulaiman', 'M N Venu', 'C Subber', 'K P Azeez', 'E K Azeez', 'Nayar K Vinodh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Karnataka']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Karnataka At Bangalore']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['N. Ananda']"", 'LAWYER': ""['N Ravindranath Kamath', 'B Visweswaraiah']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Mapillai K H Sulaiman', 'M N Venu', 'C Subber', 'K P Azeez', 'E K Azeez', 'Nayar K Vinodh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Karnataka']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 In The High Court Of Karnataka At Bangalore Dated This The 12Th Day Of March 2014 Before The Hon'Ble Mr.Justice N. Ananda Criminal Appeal No.1652/2007 C/W Criminal Appeal No.1726/2007 CRL.A.No.1652/2007 Between: 1. Mapillai K H Sulaiman S/O Hydros, 45 Years, Coolie, R/At Anepare Coffee Estate Line Kutta Village. 2. M N Venu S/O Madhavan, 50 Years Poojekallu, Kutta Village 3. C Subber S/O Ahamed Kutty, 39 Years, Driver Nazim Manzil, Keelaloor Village Panchayath, Yedeyannur Village Mattanoor Taluk, Kannanoor District Kerala State 4. K P Azeez S/O Late Mohammed, 44 Years Kottarthil House Yedeyannur Village Keelaloor Village Panchayat Mattanoor Taluk, Kannanoor District Kerala State 5. E K Azeez S/O Mamuti, 37 Years 2K House, Palur Palli Mattanoor Taluk ... Appellants 2 (By Sri N Ravindranath Kamath, Advocate) And: The State Of Karnataka By Deputy Superintendent Of Police C.A.Squad, C.O.D., Bangalore. ... Respondent (By Sri B Visweswaraiah, Hcgp) This Appeal Is Filed Under Section 374(2) Cr.P.C., Against The Judgment Dated 26.10.2007 In S.C.No.48/2000, On The File Of The Sessions Judge, Kodagu At Madikeri, Convicting Appellants-Accused For Offences Punishable Under Sections 489-B, 489-C And 120-B Ipc & Etc. CRL.A.No.1726/2007 Between: Nayar K Vinodh S/O Kunhiraman, 39 Years Chakkekekal, Maka Post Anjaranakandi, Kannanoor District, Kerala State. ... Appellant (By Sri N Ravindranath Kamath, Advocate) And: The State Of Karnataka By Deputy Superintendent Of Police C A Squad, C.O.D., Bangalore. ... Respondent (By Sri B Visweswaraiah, Hcgp) This Appeal Is Filed Under Section 374 (2) Cr.P.C., Against The Judgment Dated 26.10.2007 Passed By The District & Sessions Judge, Kodagu At Madikeri In S.C.No.48/2000, Convicting Appellant/Accused No.3 For Offences Punishable Under Sections 489-B, 489-C And 120-B Ipc And Etc. These Appeals Coming On For Final Hearing This Day, The Court Delivered The Following: 3 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['N. Ananda']"", ""LAWYER"": ""['N Ravindranath Kamath', 'B Visweswaraiah']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Mapillai K H Sulaiman', 'M N Venu', 'C Subber', 'K P Azeez', 'E K Azeez', 'Nayar K Vinodh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Karnataka']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (civil) 6963 2000 Petitioner: State Of Punjab Vs. Respondent: Vk Khanna & Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State Of Punjab']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Vk Khanna']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['State Of Punjab']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Vk Khanna']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 6963 2000 Petitioner: State Of Punjab Vs. Respondent: Vk Khanna & Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State Of Punjab']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Vk Khanna']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"""The phrase 'loans, guarantees and other financial obligations' occurred in section 178 in Part VII ot the Government of India Act, 1935, and there cannot be any doubt that those expressions used ia that section did not refer to all and sundry pecuniary obligations of the State arising out of contracts of every description.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 178', 'Part VII']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Government of India Act, 1935']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 178', 'Part VII']"", 'RESPONDENT': '[]', 'STATUTE': ""['Government of India Act, 1935']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: ""The phrase 'loans, guarantees and other financial obligations' occurred in section 178 in Part VII ot the Government of India Act, 1935, and there cannot be any doubt that those expressions used ia that section did not refer to all and sundry pecuniary obligations of the State arising out of contracts of every description. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 178', 'Part VII']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Government of India Act, 1935']"", ""WITNESS"": ""[]""} </s>"
The prosecution case is that the appellant Khushal was on bad terms with Baboolal who was on very friendly terms with the leaders of the opposite faction aforesaid.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Baboolal']"", ""PETITIONER"": ""['Khushal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Baboolal']"", 'PETITIONER': ""['Khushal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The prosecution case is that the appellant Khushal was on bad terms with Baboolal who was on very friendly terms with the leaders of the opposite faction aforesaid. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Baboolal']"", ""PETITIONER"": ""['Khushal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"When the matter is taken up today, learned counsel for the petitioner fairly submitted that being aggrieved by the impugned order the petitioner has already submitted an application under Section 18 of the Land Acquisition Act, 1894 to the Collector, Satna and the instant petition may be disposed with the direction to the said authority to decide the same expeditiously.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Satna']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 18']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Land Acquisition Act, 1894']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Satna']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 18']"", 'RESPONDENT': '[]', 'STATUTE': ""['Land Acquisition Act, 1894']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: When the matter is taken up today, learned counsel for the petitioner fairly submitted that being aggrieved by the impugned order the petitioner has already submitted an application under Section 18 of the Land Acquisition Act, 1894 to the Collector, Satna and the instant petition may be disposed with the direction to the said authority to decide the same expeditiously. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Satna']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 18']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Land Acquisition Act, 1894']"", ""WITNESS"": ""[]""} </s>"
"In accordance with the conditions imposed by the Government of India, a parallel unit for manufacture of hose clips, namely ""Avalon Fasteners Private Limited"", was established in India within about a period of six months.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Government of India', 'Avalon Fasteners Private Limited']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Government of India', 'Avalon Fasteners Private Limited']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In accordance with the conditions imposed by the Government of India, a parallel unit for manufacture of hose clips, namely ""Avalon Fasteners Private Limited"", was established in India within about a period of six months. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Government of India', 'Avalon Fasteners Private Limited']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"If a person, under colour of exercising (1) [1956] A.C. 736. the statutory power, acts from some improper or ulterior motive, he acts in bad faith.","{""CASE_NUMBER"": ""['(1) [1956] A.C. 736']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['(1) [1956] A.C. 736']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: If a person, under colour of exercising (1) [1956] A.C. 736. the statutory power, acts from some improper or ulterior motive, he acts in bad faith. [/INST]
 {""CASE_NUMBER"": ""['(1) [1956] A.C. 736']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"I hold, accordingly, that Section 116 of the Customs Act, 1962 applies equally to dutiable as well as to non-dutiable goods and, accordingly, the contention raised by the petitioners that the section can have no application to Nepal Cargo since the said Cargo is totally exempt from Customs duty, is absolutely without merits.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Nepal Cargo']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 116']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Customs Act, 1962']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Nepal Cargo']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 116']"", 'RESPONDENT': '[]', 'STATUTE': ""['Customs Act, 1962']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: I hold, accordingly, that Section 116 of the Customs Act, 1962 applies equally to dutiable as well as to non-dutiable goods and, accordingly, the contention raised by the petitioners that the section can have no application to Nepal Cargo since the said Cargo is totally exempt from Customs duty, is absolutely without merits. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Nepal Cargo']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 116']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Customs Act, 1962']"", ""WITNESS"": ""[]""} </s>"
The defendants' case on this point is that in resting her arm on the window still the plaintiff failed to take reasonable care of her safety and this was a contributory factor to the accident.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The defendants' case on this point is that in resting her arm on the window still the plaintiff failed to take reasonable care of her safety and this was a contributory factor to the accident. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"During the course of trial, 10 out of 11 witnesses, who had been examined, turned hostile, including C. Ramasundaram (PW.87) who had lodged the complaint in respect of second incident.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['C. Ramasundaram']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['C. Ramasundaram']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: During the course of trial, 10 out of 11 witnesses, who had been examined, turned hostile, including C. Ramasundaram (PW.87) who had lodged the complaint in respect of second incident. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['C. Ramasundaram']""} </s>"
"Jadavji Modi filed a separate application asking for compensation of Rs. 10,000 for the injuries suffered by him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Jadavji Modi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Jadavji Modi']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Jadavji Modi filed a separate application asking for compensation of Rs. 10,000 for the injuries suffered by him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Jadavji Modi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This presumption seems to us to bo reasonable in itself, and in accordance with the legal principles now embodied in Section 114 of the Evidence Act.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 114']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 114']"", 'RESPONDENT': '[]', 'STATUTE': ""['Evidence Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This presumption seems to us to bo reasonable in itself, and in accordance with the legal principles now embodied in Section 114 of the Evidence Act."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 114']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act']"", ""WITNESS"": ""[]""} </s>"
"Section 106 of the Indian Evidence Act or the principles analogous thereto places the burden in respect thereof upon the assessee, as the facts are within its special knowledge.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 106']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Indian Evidence Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 106']"", 'RESPONDENT': '[]', 'STATUTE': ""['Indian Evidence Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Section 106 of the Indian Evidence Act or the principles analogous thereto places the burden in respect thereof upon the assessee, as the facts are within its special knowledge. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 106']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Indian Evidence Act']"", ""WITNESS"": ""[]""} </s>"
[See Poplar Housing and Regeneration Community Association Ltd. Vs. Donoghue [2002] Q.B. 48].,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Poplar Housing and Regeneration Community Association Ltd. Vs. Donoghue [2002] Q.B. 48']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Poplar Housing and Regeneration Community Association Ltd. Vs. Donoghue [2002] Q.B. 48']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: [See Poplar Housing and Regeneration Community Association Ltd. Vs. Donoghue [2002] Q.B. 48]. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Poplar Housing and Regeneration Community Association Ltd. Vs. Donoghue [2002] Q.B. 48']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The main purpose of admission to a medical college is to impart education in the theory and practice of medicine.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The main purpose of admission to a medical college is to impart education in the theory and practice of medicine. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Hon'Ble Sri Justice Ramesh Ranganathan Writ Petition No.27062 Of 2011 11-04-2012 Sri Umesh Kumar Ips The State of Andhra Pradesh Rep. by its Chief Secretary, General Administration Department, Andhra Pradesh Secretariat, Hyderabad and 7 others. Counsel for the petitioner: Sri Prabhakar Sripada, Counsel for respondents: Gp for General Administration Sri H Prahalada Reddy Sri Ponnam AShok Goud (Asst. Sol. Gen) G.P. for Home, Mrs. S. Nanda, P. Kesava Rao Spl. Sc for Cbi <Gist: >Head Note: ?Citations: 1) (2009) 1 Scc 441 2) 2010(1) Supreme Today 707 3) (2008) 2 Scc 409 4) (2002) 5 Scc 521 5) Air 1988 (Ap) 144 6) (2011) 4 Scc 1 7) Jt 2009 (7) Sc 601 8) (1997) 1 Scc 134 9) (2010) 11 Scc 557 10) (2005) 6 Scc 138 11) (2000) 2 Scc 617 12) 2010(3) Ald 452 (Db) 13) Air 2001 Sc 3320 14) (1988) 2 Scc 293 15) Air 1962 Sc 159 16) 1987 Supp Scc 350 17) Air 1969 Sc 1048 18) (1991) 1 Scc 86 19) (1995) 1 Scc 421 20) Air 195 Sc 1795 21) (2011) 7 Scc 639 22) (1974) 4 Scc 788 23) (1980) 3 Scc 311 24) (1996) 7 Scc 397 25) (2006) 9 Scc 262 26) (2008) 12 Scc 481 27) (1917) 1 Kb 486 Writ Petition No.27062 of 2011 Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ramesh Ranganathan']"", ""LAWYER"": ""['Prabhakar Sripada', 'H Prahalada Reddy', 'Ponnam AShok Goud', 'S. Nanda', 'P. Kesava']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Umesh Kumar', 'State of Andhra Pradesh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ramesh Ranganathan']"", 'LAWYER': ""['Prabhakar Sripada', 'H Prahalada Reddy', 'Ponnam AShok Goud', 'S. Nanda', 'P. Kesava']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Umesh Kumar', 'State of Andhra Pradesh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Hon'Ble Sri Justice Ramesh Ranganathan Writ Petition No.27062 Of 2011 11-04-2012 Sri Umesh Kumar Ips The State of Andhra Pradesh Rep. by its Chief Secretary, General Administration Department, Andhra Pradesh Secretariat, Hyderabad and 7 others. Counsel for the petitioner: Sri Prabhakar Sripada, Counsel for respondents: Gp for General Administration Sri H Prahalada Reddy Sri Ponnam AShok Goud (Asst. Sol. Gen) G.P. for Home, Mrs. S. Nanda, P. Kesava Rao Spl. Sc for Cbi <Gist: >Head Note: ?Citations: 1) (2009) 1 Scc 441 2) 2010(1) Supreme Today 707 3) (2008) 2 Scc 409 4) (2002) 5 Scc 521 5) Air 1988 (Ap) 144 6) (2011) 4 Scc 1 7) Jt 2009 (7) Sc 601 8) (1997) 1 Scc 134 9) (2010) 11 Scc 557 10) (2005) 6 Scc 138 11) (2000) 2 Scc 617 12) 2010(3) Ald 452 (Db) 13) Air 2001 Sc 3320 14) (1988) 2 Scc 293 15) Air 1962 Sc 159 16) 1987 Supp Scc 350 17) Air 1969 Sc 1048 18) (1991) 1 Scc 86 19) (1995) 1 Scc 421 20) Air 195 Sc 1795 21) (2011) 7 Scc 639 22) (1974) 4 Scc 788 23) (1980) 3 Scc 311 24) (1996) 7 Scc 397 25) (2006) 9 Scc 262 26) (2008) 12 Scc 481 27) (1917) 1 Kb 486 Writ Petition No.27062 of 2011 Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ramesh Ranganathan']"", ""LAWYER"": ""['Prabhakar Sripada', 'H Prahalada Reddy', 'Ponnam AShok Goud', 'S. Nanda', 'P. Kesava']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Umesh Kumar', 'State of Andhra Pradesh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the case of the respondent, Rajeswaran, the decision and recommendation of the Review Committee was not placed before the Full Court meeting.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Rajeswaran']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Rajeswaran']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the case of the respondent, Rajeswaran, the decision and recommendation of the Review Committee was not placed before the Full Court meeting. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Rajeswaran']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Section 129 of the IT Act provides that in such cases the succeeding Officer may continue the proceeding from the stage at which the proceeding was left by his predecessor.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 129']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IT Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 129']"", 'RESPONDENT': '[]', 'STATUTE': ""['IT Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Section 129 of the IT Act provides that in such cases the succeeding Officer may continue the proceeding from the stage at which the proceeding was left by his predecessor. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 129']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IT Act']"", ""WITNESS"": ""[]""} </s>"
"Bhagat Singh Chawla, K. L. Mehta and S. K. Mehta, for the respondent.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Bhagat Singh Chawla', 'K. L. Mehta', 'S. K. Mehta']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Bhagat Singh Chawla', 'K. L. Mehta', 'S. K. Mehta']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Bhagat Singh Chawla, K. L. Mehta and S. K. Mehta, for the respondent. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Bhagat Singh Chawla', 'K. L. Mehta', 'S. K. Mehta']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"There is no reason why such a construction should be placed upon the expression ""the State Government"" when it is possible to place upon that expression a construction in tune with the division of legislative powers under the Constitution.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: There is no reason why such a construction should be placed upon the expression ""the State Government"" when it is possible to place upon that expression a construction in tune with the division of legislative powers under the Constitution. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"Petitioner: Ashok Kumar Gupta , Vidya Sagar Gupta & Ors Vs. Respondent: State Of U.P. & Ors. Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ashok Kumar Gupta', 'Vidya Sagar Gupta']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of U.P.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ashok Kumar Gupta', 'Vidya Sagar Gupta']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of U.P.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Ashok Kumar Gupta , Vidya Sagar Gupta & Ors Vs. Respondent: State Of U.P. & Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ashok Kumar Gupta', 'Vidya Sagar Gupta']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of U.P.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"According to the prosecution, the accused was arrested on 05.12.1997 and when he was so arrested he had injuries on his person.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['05.12.1997']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['05.12.1997']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: According to the prosecution, the accused was arrested on 05.12.1997 and when he was so arrested he had injuries on his person. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['05.12.1997']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Mr. Kohli's contention is that since the learned Judges of the High Court of Punjab have failed to address themselves to this initial question, their appreciation of the approver's evidence suffers from a serious infirmity.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court of Punjab']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Kohli']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court of Punjab']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Kohli']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mr. Kohli's contention is that since the learned Judges of the High Court of Punjab have failed to address themselves to this initial question, their appreciation of the approver's evidence suffers from a serious infirmity. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court of Punjab']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Kohli']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Government, after careful consideration of the recommendations of the Committee and the resolution of the Cabinet hereby issue the following orders:- (i) The Government of India has brought the NCTE on the Statute Book by Act No.73 of 1993 (Central Act) and published in the Gazette of India.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Cabinet', 'Government of India', 'NCTE']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Act No.73 of 1993 (Central Act)']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Cabinet', 'Government of India', 'NCTE']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Act No.73 of 1993 (Central Act)']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Government, after careful consideration of the recommendations of the Committee and the resolution of the Cabinet hereby issue the following orders:- (i) The Government of India has brought the NCTE on the Statute Book by Act No.73 of 1993 (Central Act) and published in the Gazette of India. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Cabinet', 'Government of India', 'NCTE']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Act No.73 of 1993 (Central Act)']"", ""WITNESS"": ""[]""} </s>"
Mr. Pai next referred to an order in Reference (I.D.) No. 203/70 by the Industrial Tribunal Maharashtra between the employer and the workmen-employees under it.,"{""CASE_NUMBER"": ""['Reference (I.D.) No. 203/70']"", ""COURT"": ""['Industrial Tribunal Maharashtra']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Pai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Reference (I.D.) No. 203/70']"", 'COURT': ""['Industrial Tribunal Maharashtra']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Pai']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mr. Pai next referred to an order in Reference (I.D.) No. 203/70 by the Industrial Tribunal Maharashtra between the employer and the workmen-employees under it. [/INST]
 {""CASE_NUMBER"": ""['Reference (I.D.) No. 203/70']"", ""COURT"": ""['Industrial Tribunal Maharashtra']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Pai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Jagdish Kumar Adj-06 (West): Delhi Civil Suit No. : 182/14 Unique Case Id No : 02401C0092882005 In the matter of: Sh. Ram Rattan S/o Late Sh. Deep Chand R/o J-6/94, Rajouri Garden New Delhi - 110027 .............. Plaintiff Versus 1. Sh. Surender Kumar S/o Sh. Ram Saran on Shop no. 52, Main Market Subhash Nagar New Delhi 2. Sh. Bittoo S/o Sh. Ram Saran on Shop no. 52, Main Market Subhash Nagar New Delhi 3. Smt. Prem D/o Sh. Ram Saran W/o Sh. Devinder Dhawan R/o 1827/28, Faridabad Haryana 4. Ms. Madhu D/o Sh. Ram Saran on Shop no. 52, Main Market Subhash Nagar New Delhi Cs No. 182/14 Page 1 of 17 5. Smt. Neelam D/o Late Sh. Ram Saran W/o Sh. J.R.D. Arora R/o M-151, Vikaspuri New Delhi. 6. Smt. Shanti Devi Wd/o Late Sh. Ram Saran on Shop no. 52, Main Market Subhash Nagar New Delhi ............ Defendants Date of institution of the Suit : 10.02.2005 Date of arguments : 04.07.2014 Date of decision : 05.07.2014 Suit For Possession, Declaration And Cancellation And Recovery Of Damages And Permanent Injunction Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Adj-06 (West): Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Jagdish Kumar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ram Rattan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Surender Kumar', 'Bittoo', 'Prem', 'Madhu', 'Neelam', 'Shanti Devi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Adj-06 (West): Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Jagdish Kumar']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ram Rattan']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Surender Kumar', 'Bittoo', 'Prem', 'Madhu', 'Neelam', 'Shanti Devi']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Jagdish Kumar Adj-06 (West): Delhi Civil Suit No. : 182/14 Unique Case Id No : 02401C0092882005 In the matter of: Sh. Ram Rattan S/o Late Sh. Deep Chand R/o J-6/94, Rajouri Garden New Delhi - 110027 .............. Plaintiff Versus 1. Sh. Surender Kumar S/o Sh. Ram Saran on Shop no. 52, Main Market Subhash Nagar New Delhi 2. Sh. Bittoo S/o Sh. Ram Saran on Shop no. 52, Main Market Subhash Nagar New Delhi 3. Smt. Prem D/o Sh. Ram Saran W/o Sh. Devinder Dhawan R/o 1827/28, Faridabad Haryana 4. Ms. Madhu D/o Sh. Ram Saran on Shop no. 52, Main Market Subhash Nagar New Delhi Cs No. 182/14 Page 1 of 17 5. Smt. Neelam D/o Late Sh. Ram Saran W/o Sh. J.R.D. Arora R/o M-151, Vikaspuri New Delhi. 6. Smt. Shanti Devi Wd/o Late Sh. Ram Saran on Shop no. 52, Main Market Subhash Nagar New Delhi ............ Defendants Date of institution of the Suit : 10.02.2005 Date of arguments : 04.07.2014 Date of decision : 05.07.2014 Suit For Possession, Declaration And Cancellation And Recovery Of Damages And Permanent Injunction Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Adj-06 (West): Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Jagdish Kumar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ram Rattan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Surender Kumar', 'Bittoo', 'Prem', 'Madhu', 'Neelam', 'Shanti Devi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The appellant is therefore right in his contention that unless the statute itself enacts otherwise, an application which a partner has to sign would be in order and. valid, if it is signed by his authorised agent.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The appellant is therefore right in his contention that unless the statute itself enacts otherwise, an application which a partner has to sign would be in order and. valid, if it is signed by his authorised agent. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Regulation 6(5)(iii) of Discipline Regulations is reproduced hereunder: ""(5) The Disciplinary Authority shall, where it is not the Inquiring Authority forward to the Inquiring Authority : (i) XXX (ii) XXX (iii) a list of documents by which and list of witnesses by whom the Articles of Charge are proposed to be substantiated."" 36. According to the learned Senior Counsel for the petitioner in para 35 of the counter","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Regulation 6(5)(iii)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Regulation 6(5)(iii)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Regulation 6(5)(iii) of Discipline Regulations is reproduced hereunder: ""(5) The Disciplinary Authority shall, where it is not the Inquiring Authority forward to the Inquiring Authority : (i) XXX (ii) XXX (iii) a list of documents by which and list of witnesses by whom the Articles of Charge are proposed to be substantiated."" 36. According to the learned Senior Counsel for the petitioner in para 35 of the counter [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Regulation 6(5)(iii)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The petitioner on 7-4-1993 instituted Civil Suit No. 674 of 1993 before the Civil Judge, Senior Division, Nagpur, inter alia, seeking a declaration that the decree for divorce dated 20-11-1990 passed in M. J.","{""CASE_NUMBER"": ""['Civil Suit No. 674 of 1993']"", ""COURT"": ""['Civil Judge, Senior Division, Nagpur']"", ""DATE"": ""['7-4-1993', '20-11-1990']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Civil Suit No. 674 of 1993']"", 'COURT': ""['Civil Judge, Senior Division, Nagpur']"", 'DATE': ""['7-4-1993', '20-11-1990']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioner on 7-4-1993 instituted Civil Suit No. 674 of 1993 before the Civil Judge, Senior Division, Nagpur, inter alia, seeking a declaration that the decree for divorce dated 20-11-1990 passed in M. J. [/INST]
 {""CASE_NUMBER"": ""['Civil Suit No. 674 of 1993']"", ""COURT"": ""['Civil Judge, Senior Division, Nagpur']"", ""DATE"": ""['7-4-1993', '20-11-1990']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Hence, the matter has to be examined having regard to the scheme of the Act in the matter of assessments and the procedure prescribed therefor. 9. Section 139 to 158 in Chapter XIV of the I.T. Act provide for procedure for assessment.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 139 to 158', 'Chapter XIV']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.T. Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 139 to 158', 'Chapter XIV']"", 'RESPONDENT': '[]', 'STATUTE': ""['I.T. Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Hence, the matter has to be examined having regard to the scheme of the Act in the matter of assessments and the procedure prescribed therefor. 9. Section 139 to 158 in Chapter XIV of the I.T. Act provide for procedure for assessment. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 139 to 158', 'Chapter XIV']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.T. Act']"", ""WITNESS"": ""[]""} </s>"
operated with the Commissioner of Income-tax most willingly and produced the documents of title and furnished all other particulars and handed over possession of the property and also attorned the tenancy of a portion of the building in favour of the Central Government.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Central Government']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Central Government']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: operated with the Commissioner of Income-tax most willingly and produced the documents of title and furnished all other particulars and handed over possession of the property and also attorned the tenancy of a portion of the building in favour of the Central Government. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Central Government']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"But in Mapp v. Ohio. (1961) 367 US 643 : 6 Law Ed. 2nd Ed. 1081, Wolf was reversed and it was held that all evidence obtained by search and seizure in breach of 4th Amendment of the Federal Constitution was, by virtue of the due process clause of 14th Amendment guaranteeing the right to privacy free from unreasonable State intrusion.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But in Mapp v. Ohio. (1961) 367 US 643 : 6 Law Ed. 2nd Ed. 1081, Wolf was reversed and it was held that all evidence obtained by search and seizure in breach of 4th Amendment of the Federal Constitution was, by virtue of the due process clause of 14th Amendment guaranteeing the right to privacy free from unreasonable State intrusion. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"(Vide The Workmen of Firestone Tyre and Rubber Co. of India P. Ltd. v. Management and Ors., AIR 1973 SC 1227; Rama Kant Misra v. State of U. P. and Ors., AIR 1982 SC 1552 : Management of Hindustan Machine Tools Ltd. v. Mohd. Usman and Anr., (1984) 1 SCC 152 ; Ved Prakash Gupta a M/s.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ved Prakash Gupta']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Vide The Workmen of Firestone Tyre and Rubber Co. of India P. Ltd. v. Management and Ors., AIR 1973 SC 1227', 'Rama Kant Misra v. State of U. P. and Ors., AIR 1982 SC 1552', 'Management of Hindustan Machine Tools Ltd. v. Mohd. Usman and Anr., (1984) 1 SCC 152']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ved Prakash Gupta']"", 'PETITIONER': '[]', 'PRECEDENT': ""['Vide The Workmen of Firestone Tyre and Rubber Co. of India P. Ltd. v. Management and Ors., AIR 1973 SC 1227', 'Rama Kant Misra v. State of U. P. and Ors., AIR 1982 SC 1552', 'Management of Hindustan Machine Tools Ltd. v. Mohd. Usman and Anr., (1984) 1 SCC 152']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (Vide The Workmen of Firestone Tyre and Rubber Co. of India P. Ltd. v. Management and Ors., AIR 1973 SC 1227; Rama Kant Misra v. State of U. P. and Ors., AIR 1982 SC 1552 : Management of Hindustan Machine Tools Ltd. v. Mohd. Usman and Anr., (1984) 1 SCC 152 ; Ved Prakash Gupta a M/s. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ved Prakash Gupta']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Vide The Workmen of Firestone Tyre and Rubber Co. of India P. Ltd. v. Management and Ors., AIR 1973 SC 1227', 'Rama Kant Misra v. State of U. P. and Ors., AIR 1982 SC 1552', 'Management of Hindustan Machine Tools Ltd. v. Mohd. Usman and Anr., (1984) 1 SCC 152']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"J.B.KOSHY, A.K.BASHEER & K.P.BALACHANDRAN, JJ.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['J.B.KOSHY', 'A.K.BASHEER', 'K.P.BALACHANDRAN']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['J.B.KOSHY', 'A.K.BASHEER', 'K.P.BALACHANDRAN']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: J.B.KOSHY, A.K.BASHEER & K.P.BALACHANDRAN, JJ. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['J.B.KOSHY', 'A.K.BASHEER', 'K.P.BALACHANDRAN']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It was found at the time of the arguments before the Sales Tax Tribunal that some of the entries which were found in the khata of Jayantilal Thakordas & Co., as maintained by the Angadia, had corresponding debit entries in the account books of the assessee-firm as having been paid by the assessee-firm to the Angadia.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Sales Tax Tribunal']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Jayantilal Thakordas & Co.']"", ""OTHER_PERSON"": ""['Angadia']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Sales Tax Tribunal']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Jayantilal Thakordas & Co.']"", 'OTHER_PERSON': ""['Angadia']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was found at the time of the arguments before the Sales Tax Tribunal that some of the entries which were found in the khata of Jayantilal Thakordas & Co., as maintained by the Angadia, had corresponding debit entries in the account books of the assessee-firm as having been paid by the assessee-firm to the Angadia. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Sales Tax Tribunal']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Jayantilal Thakordas & Co.']"", ""OTHER_PERSON"": ""['Angadia']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Accused Nos. 1 to 3 (Jithakumar, Sreekumar and Soman) were police constables working under C.W.23 (E.K. Sabu) Circle Inspector of Fort Police Station who was heading the Crime Squad constituted for apprehending culprits involved in theft cases.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Fort Police Station']"", ""OTHER_PERSON"": ""['Jithakumar', 'Sreekumar', 'Soman']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['E.K. Sabu']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Fort Police Station']"", 'OTHER_PERSON': ""['Jithakumar', 'Sreekumar', 'Soman']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['E.K. Sabu']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Accused Nos. 1 to 3 (Jithakumar, Sreekumar and Soman) were police constables working under C.W.23 (E.K. Sabu) Circle Inspector of Fort Police Station who was heading the Crime Squad constituted for apprehending culprits involved in theft cases. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Fort Police Station']"", ""OTHER_PERSON"": ""['Jithakumar', 'Sreekumar', 'Soman']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['E.K. Sabu']""} </s>"
"Along with the affidavit a chart has been provided specifying the C.R. number, name of the complainant and the role of the accused. C.R.No. Name of Role of the accused and status of Complainant the case. I-26/2014 Shamjibhai Accused No.(1) Nareshbhai Geegabhai Ranchhodbhai Dudhat, Residing at 7, Priyanka Row DCB Police Dabhi.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shamjibhai', 'Nareshbhai Geegabhai Ranchhodbhai Dudhat']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Shamjibhai', 'Nareshbhai Geegabhai Ranchhodbhai Dudhat']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Along with the affidavit a chart has been provided specifying the C.R. number, name of the complainant and the role of the accused. C.R.No. Name of Role of the accused and status of Complainant the case. I-26/2014 Shamjibhai Accused No.(1) Nareshbhai Geegabhai Ranchhodbhai Dudhat, Residing at 7, Priyanka Row DCB Police Dabhi. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shamjibhai', 'Nareshbhai Geegabhai Ranchhodbhai Dudhat']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In such a case, the question of other defences never arises under sub-section (2) of Section 96. 71.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['sub-section (2) of Section 96']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['sub-section (2) of Section 96']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In such a case, the question of other defences never arises under sub-section (2) of Section 96. 71. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['sub-section (2) of Section 96']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the matter of Motor General Traders v. State of Andhra Pradesh, AIR 1984 SC 121 the Supreme Court said, ""What may be unobjectionable as a transitional or temporary measure at an initial stage can still become discriminatory and hence violative of Art. 14 of the Constitution if it is persisted in over a long period without any justification."" 77.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Motor General Traders v. State of Andhra Pradesh, AIR 1984 SC 121']"", ""PROVISION"": ""['Art. 14']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Motor General Traders v. State of Andhra Pradesh, AIR 1984 SC 121']"", 'PROVISION': ""['Art. 14']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the matter of Motor General Traders v. State of Andhra Pradesh, AIR 1984 SC 121 the Supreme Court said, ""What may be unobjectionable as a transitional or temporary measure at an initial stage can still become discriminatory and hence violative of Art. 14 of the Constitution if it is persisted in over a long period without any justification."" 77. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Motor General Traders v. State of Andhra Pradesh, AIR 1984 SC 121']"", ""PROVISION"": ""['Art. 14']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
The defendant can provide the non-existence of consideration by raising a probable defence.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The defendant can provide the non-existence of consideration by raising a probable defence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In OMANA JOSE4, a Division Bench of the Kerala High Court was also dealing with the question as to whether an appeal would lie to the Sessions Court under the proviso to Section 372 of the Code against the acquittal of the accused in a case under Section 138 of the Act of 1881.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Kerala High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 372', 'Section 138']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Act of 1881']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Kerala High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 372', 'Section 138']"", 'RESPONDENT': '[]', 'STATUTE': ""['Act of 1881']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In OMANA JOSE4, a Division Bench of the Kerala High Court was also dealing with the question as to whether an appeal would lie to the Sessions Court under the proviso to Section 372 of the Code against the acquittal of the accused in a case under Section 138 of the Act of 1881. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Kerala High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 372', 'Section 138']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Act of 1881']"", ""WITNESS"": ""[]""} </s>"
"The Supreme Court mentioned some of the factors which are required to be considered in deciding whether the language of a particular enactment is to be understood as indicative of the retrospective operation of the Act and held that normally a statute is to be interpreted, as far as possible, not to defeat vested rights.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Supreme Court mentioned some of the factors which are required to be considered in deciding whether the language of a particular enactment is to be understood as indicative of the retrospective operation of the Act and held that normally a statute is to be interpreted, as far as possible, not to defeat vested rights. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam Crl.Rev.Pet.No. 3906 of 2009() 1. U.Nalini Madhavan, ... Petitioner Vs 1. The State Of Kerala, Represented By ... Respondent 2. K.G.Premsankar, S/O.Govindan, 3. K.Abdul Gafoor, 4. P.Jayaraj, S/O.Sundaran Nair, 5. R.V.Kunhiraman, For Petitioner :Sri.Babu S. Nair For Respondent :Sri.M.V.S.Namboothiry,Sc, C.B.I. The Hon'ble Mr. Justice V.K.Mohanan Dated :16/09/2010 O R D E R","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V.K.Mohanan']"", ""LAWYER"": ""['Babu S. Nair', 'M.V.S.Namboothiry']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['U.Nalini Madhavan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala', 'K.G.Premsankar', 'K.Abdul Gafoor', 'P.Jayaraj', 'R.V.Kunhiraman']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['V.K.Mohanan']"", 'LAWYER': ""['Babu S. Nair', 'M.V.S.Namboothiry']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['U.Nalini Madhavan']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Kerala', 'K.G.Premsankar', 'K.Abdul Gafoor', 'P.Jayaraj', 'R.V.Kunhiraman']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam Crl.Rev.Pet.No. 3906 of 2009() 1. U.Nalini Madhavan, ... Petitioner Vs 1. The State Of Kerala, Represented By ... Respondent 2. K.G.Premsankar, S/O.Govindan, 3. K.Abdul Gafoor, 4. P.Jayaraj, S/O.Sundaran Nair, 5. R.V.Kunhiraman, For Petitioner :Sri.Babu S. Nair For Respondent :Sri.M.V.S.Namboothiry,Sc, C.B.I. The Hon'ble Mr. Justice V.K.Mohanan Dated :16/09/2010 O R D E R [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V.K.Mohanan']"", ""LAWYER"": ""['Babu S. Nair', 'M.V.S.Namboothiry']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['U.Nalini Madhavan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala', 'K.G.Premsankar', 'K.Abdul Gafoor', 'P.Jayaraj', 'R.V.Kunhiraman']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"When once it is held that the Amending Acts were within the legislative competence of the State, the question of even examining and applying the principles of colourable legislation, the true scope and ambit of which has been explained by the Supreme Court in Gajapati Narayan Deo's case do not arise and in any event has no application at all.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Gajapati Narayan Deo']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Gajapati Narayan Deo']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: When once it is held that the Amending Acts were within the legislative competence of the State, the question of even examining and applying the principles of colourable legislation, the true scope and ambit of which has been explained by the Supreme Court in Gajapati Narayan Deo's case do not arise and in any event has no application at all. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Gajapati Narayan Deo']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Before considering the evidence of Rosiah who has been examined as P. W. 3, it is necessary to mention a few preliminary facts.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Rosiah']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Rosiah']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Before considering the evidence of Rosiah who has been examined as P. W. 3, it is necessary to mention a few preliminary facts. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Rosiah']""} </s>"
Case No.: Special Leave Petition (crl.) 1971 of 1999 Petitioner: M/S. Medchl Chemicals & Pharma P. Ltd. Vs. Respondent: M/S. Biological E. Ltd. & Ors. Respondents Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Medchl Chemicals & Pharma P. Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Biological E. Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Medchl Chemicals & Pharma P. Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Biological E. Ltd.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Special Leave Petition (crl.) 1971 of 1999 Petitioner: M/S. Medchl Chemicals & Pharma P. Ltd. Vs. Respondent: M/S. Biological E. Ltd. & Ors. Respondents Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Medchl Chemicals & Pharma P. Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Biological E. Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"From the aforesaid discussion, it becomes abundantly clear that there is no iota of evidence against the accused persons, thus, prosecution has miserably failed to bring home the guilt of accused persons, thus, I acquit both the accused persons from all the charges.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: From the aforesaid discussion, it becomes abundantly clear that there is no iota of evidence against the accused persons, thus, prosecution has miserably failed to bring home the guilt of accused persons, thus, I acquit both the accused persons from all the charges. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the year 1929, the Bank of Banares brought a suit against Maharaja Kishore for recovery of certain money claims.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Bank of Banares']"", ""OTHER_PERSON"": ""['Maharaja Kishore']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Bank of Banares']"", 'OTHER_PERSON': ""['Maharaja Kishore']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the year 1929, the Bank of Banares brought a suit against Maharaja Kishore for recovery of certain money claims. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Bank of Banares']"", ""OTHER_PERSON"": ""['Maharaja Kishore']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"If the power is abused and the members of the Scheduled Castes and Scheduled Tribes are given favoured treatment to the extent not warranted by their legitimate claim, the courts are not rendered helpless.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: If the power is abused and the members of the Scheduled Castes and Scheduled Tribes are given favoured treatment to the extent not warranted by their legitimate claim, the courts are not rendered helpless. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The proforma agreement of the loan and exchange also form part Attachment 'C'. 30.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The proforma agreement of the loan and exchange also form part Attachment 'C'. 30. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In our judgment, the conclusion of the Tribunal cannot be supported.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In our judgment, the conclusion of the Tribunal cannot be supported. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Rattan Lal Vs. Respondent: State Of Punjab Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rattan Lal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Punjab']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Rattan Lal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Punjab']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Rattan Lal Vs. Respondent: State Of Punjab Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rattan Lal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Punjab']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is true that in the former case though the trees were not sold with the roots and the stumps, the Kerala High Court took the view that the assessee was not engaged in the business of felling timber and, therefore, the receipts from the sale of trees was not assessable as income.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Kerala High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Kerala High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is true that in the former case though the trees were not sold with the roots and the stumps, the Kerala High Court took the view that the assessee was not engaged in the business of felling timber and, therefore, the receipts from the sale of trees was not assessable as income. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Kerala High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
(xi) P.W.3 enquired A2 under Section 67 of NDPS Act and A2 gave voluntary statement in his own handwriting Ex.P46 and he has signed in all the pages and P.W.3 has also signed in all the pages.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 67']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['NDPS Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 67']"", 'RESPONDENT': '[]', 'STATUTE': ""['NDPS Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (xi) P.W.3 enquired A2 under Section 67 of NDPS Act and A2 gave voluntary statement in his own handwriting Ex.P46 and he has signed in all the pages and P.W.3 has also signed in all the pages. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 67']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['NDPS Act']"", ""WITNESS"": ""[]""} </s>"
The High Court mainly relied on the ratio of the judgment by a three judge bench of this court in ECIL.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The High Court mainly relied on the ratio of the judgment by a three judge bench of this court in ECIL. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The plaintiff and other legal heirs of Ram Nath succeeded to the Doctor's Lane house only on the death of Satyawati who was the limited estate holder.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ram Nath', 'Satyawati']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ram Nath', 'Satyawati']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The plaintiff and other legal heirs of Ram Nath succeeded to the Doctor's Lane house only on the death of Satyawati who was the limited estate holder. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ram Nath', 'Satyawati']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature For Rajasthan At Jaipur Bench, Jaipur (1) S.B. Civil Misc. Appeal No. 4379/2012 Dewan Syed Aley Rasool Ali Khan vs. Altaf Hussain & Ors. With (2) S.B. Civil Writ Petition No. 15228/2013 Abdul Kalam & Anr. vs. District & Sessions Judge, Ajmer & Ors. With (3) S.B. Civil Writ Petition No. 15275/2013 Syed Gulzar Hussain & Anr. vs. District & Session Judge, Ajmer & Ors. Date ::13.11.2013 Common Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature For Rajasthan At Jaipur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Dewan Syed Aley Rasool Ali Khan', 'Abdul Kalam', 'Syed Gulzar Hussain']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Altaf Hussain', 'District & Sessions Judge, Ajmer & Ors.', 'District & Session Judge, Ajmer & Ors.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature For Rajasthan At Jaipur']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Dewan Syed Aley Rasool Ali Khan', 'Abdul Kalam', 'Syed Gulzar Hussain']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Altaf Hussain', 'District & Sessions Judge, Ajmer & Ors.', 'District & Session Judge, Ajmer & Ors.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature For Rajasthan At Jaipur Bench, Jaipur (1) S.B. Civil Misc. Appeal No. 4379/2012 Dewan Syed Aley Rasool Ali Khan vs. Altaf Hussain & Ors. With (2) S.B. Civil Writ Petition No. 15228/2013 Abdul Kalam & Anr. vs. District & Sessions Judge, Ajmer & Ors. With (3) S.B. Civil Writ Petition No. 15275/2013 Syed Gulzar Hussain & Anr. vs. District & Session Judge, Ajmer & Ors. Date ::13.11.2013 Common Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature For Rajasthan At Jaipur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Dewan Syed Aley Rasool Ali Khan', 'Abdul Kalam', 'Syed Gulzar Hussain']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Altaf Hussain', 'District & Sessions Judge, Ajmer & Ors.', 'District & Session Judge, Ajmer & Ors.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In this regard he has relied upon Roop Deol Bajaj Vs. K.P.S. Gill, AIR 1996 SC 309, Samar Singh vs State Cri. Revision 129/2009 passed by Delhi High Court, Shakuntla Devi Vs. Suneet Kumar 1997 Crl. L. J 335 (Del). 4.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Delhi High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Roop Deol Bajaj Vs. K.P.S. Gill, AIR 1996 SC 309', 'Samar Singh vs State Cri. Revision 129/2009', 'Shakuntla Devi Vs. Suneet Kumar 1997 Crl. L. J 335 (Del)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Delhi High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Roop Deol Bajaj Vs. K.P.S. Gill, AIR 1996 SC 309', 'Samar Singh vs State Cri. Revision 129/2009', 'Shakuntla Devi Vs. Suneet Kumar 1997 Crl. L. J 335 (Del)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this regard he has relied upon Roop Deol Bajaj Vs. K.P.S. Gill, AIR 1996 SC 309, Samar Singh vs State Cri. Revision 129/2009 passed by Delhi High Court, Shakuntla Devi Vs. Suneet Kumar 1997 Crl. L. J 335 (Del). 4. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Delhi High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Roop Deol Bajaj Vs. K.P.S. Gill, AIR 1996 SC 309', 'Samar Singh vs State Cri. Revision 129/2009', 'Shakuntla Devi Vs. Suneet Kumar 1997 Crl. L. J 335 (Del)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In a reply affidavit filed by the petitioner in O. P. No. 3532/1982 on 31-1-1983, he has stated that he has secured admission in the Dr. B.R. Ambedkar Medical College at Bangalore and that he is prosecuting his studies there.","{""CASE_NUMBER"": ""['O. P. No. 3532/1982']"", ""COURT"": ""[]"", ""DATE"": ""['31-1-1983']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Dr. B.R. Ambedkar Medical College at Bangalore']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['O. P. No. 3532/1982']"", 'COURT': '[]', 'DATE': ""['31-1-1983']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Dr. B.R. Ambedkar Medical College at Bangalore']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In a reply affidavit filed by the petitioner in O. P. No. 3532/1982 on 31-1-1983, he has stated that he has secured admission in the Dr. B.R. Ambedkar Medical College at Bangalore and that he is prosecuting his studies there. [/INST]
 {""CASE_NUMBER"": ""['O. P. No. 3532/1982']"", ""COURT"": ""[]"", ""DATE"": ""['31-1-1983']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Dr. B.R. Ambedkar Medical College at Bangalore']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The prosecution in order to prove its case had examined as well as 7 witnesses namely PW1 HC Mukesh Kumar, PW2 HC Suresh Chand, PW3 Ct. Vipin Gyagi, PW4 HC Kailash Chand, PW5 Sh. V.R. Anand, AD, FSL, Rohini, PW6 Ct. Ravinder Giri and PW7 HC Sunil Gaur.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['FSL, Rohini']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['HC Mukesh Kumar', 'HC Suresh Chand', 'Ct. Vipin Gyagi', 'HC Kailash Chand', 'V.R. Anand', 'Ct. Ravinder Giri', 'HC Sunil Gaur']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['FSL, Rohini']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['HC Mukesh Kumar', 'HC Suresh Chand', 'Ct. Vipin Gyagi', 'HC Kailash Chand', 'V.R. Anand', 'Ct. Ravinder Giri', 'HC Sunil Gaur']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The prosecution in order to prove its case had examined as well as 7 witnesses namely PW1 HC Mukesh Kumar, PW2 HC Suresh Chand, PW3 Ct. Vipin Gyagi, PW4 HC Kailash Chand, PW5 Sh. V.R. Anand, AD, FSL, Rohini, PW6 Ct. Ravinder Giri and PW7 HC Sunil Gaur. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['FSL, Rohini']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['HC Mukesh Kumar', 'HC Suresh Chand', 'Ct. Vipin Gyagi', 'HC Kailash Chand', 'V.R. Anand', 'Ct. Ravinder Giri', 'HC Sunil Gaur']""} </s>"
"1 R In The High Court Of Karnataka At Bangalore Dated This The 15Th Day Of July 2013 Before The Hon'Ble Mr. Justice Ashok B. Hinchigeri Writ Petition Nos.25964-25967 Of 2013 (Edn-Res) C/W Writ Petition No.25612/2013 And Writ Petition Nos.26170-26171/2013 Wp Nos.25964-25967/2013: Between : 1. Sri A.M.Bhaskar, S/o Sri A.L.Mahadevegowda, Aged about 41 years, No.2099, Near 101, Ganapathy Temple, K.R.Mohalla, Mysore - 570 004. 2. Sri Hirendra Shah, S/o Late Dhanji Shah, Aged about 49 years, No.472, Nirmala Nilaya, 2nd Main Road, C, 3rd Stage, 11th Block, Nagarabhavi, Bangalore - 560 072. 3. Sri Dasaiah, S/o Late Mondaiah, Aged about 50 years, No.281, 6th Cross, Banni Mantapa, C Layout, Mysore - 570 015. 2 4. Sri Jagadeesh, S/o Late B.Linganna, Aged about 40 years, No.1143/21, 7th Main, 4th Cross, Vidyaranyapuram, Mysore - 570 008. ... Petitioners (By Sri K.M.Nataraj, Senior Advocate for M/s. Haranahalli and Patil Associates) And: 1. The State of Karnataka, Department of Education (Universities), M.S.Building, Bangalore - 560 001. Represented by the Chief Secretary. 2. The Deputy Secretary to Government, Education Department, State of Karnataka, M.S.Building, Bangalore - 560 001. 3. University of Mysore, Crawford Hall, Mysore - 575 015. Represented by the Registrar. ... Respondents (By Prof.Ravivarma Kumar, Ag with Sri R.Omkumar, Aga for R-1 and R-2: Sri T.P.Rajendra Kumar Sungay, Advocate for R-3) These writ petitions are filed under Article 226 and 227 of the constitution of India praying to quash impugned order dated 15.6.2013 passed by the 2nd respondent vide Annexure- A in so far as petitioners are concerned and etc. 3 Wp Nos.25612/2013 And 26170-26171/2013: Between: 1. C.K.Jagadish, S/o C.Kempalaiah, Aged about 48 years, No.220, 6th Cross, Ananda Rao Circle, Gandhinagar, Bangalore - 560 009. 2. T.H.Srinivasaiah, S/o T.Hucchaiah, Aged about 46 years, R/at No.35/9, 2nd Cross, Mico Layout, Attiguppe, Vijayanagar, Bangalore - 560 040. 3. Dr.K.V.Acharya, S/o Late K.Srinivasacharya, Aged about 72 years, Professor and Former Chairman of Electronics Department, Uvc, No.300/16, 19th Main, 18th Cross, Mico Layout, Vijayanagar, Bangalore - 560 040. ... Petitioners (By Sri Ravishankar.D.R., Advocate) And: 1. State of Karnataka, Represented by the Secretary to the Education Department, M.S.Building, Ambedkar Beedhi, Bangalore - 560 001. 4 2. Bangalore University, Represented by its Registrar, Gnanabharathi Campus, Bangalore - 560 072. ... Respondents (By Prof.Ravivarma Kumar, Ag with Sri R.Omkumar, Aga for R1 Sri Rajendra Kumar Sungay, Advocate for R2) These writ petitions are filed under Article 226 and 227 of the constitution of India praying to declare that Section 39(1) is ultra vires the object of Section 28(g) and Section 38 of the Karnataka State Universities Act, 2000 and etc. These writ petitions, having been heard and reserved for orders on 03.07.2013, coming on for pronouncement this day, Ashok B.Hinchigeri J., delivered the following: Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ashok B. Hinchigeri', 'Ashok B.Hinchigeri']"", ""LAWYER"": ""['K.M.Nataraj', 'Ravivarma Kumar', 'R.Omkumar', 'T.P.Rajendra Kumar Sungay', 'Ravishankar.D.R.', 'Rajendra Kumar Sungay']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['A.M.Bhaskar', 'Hirendra Shah', 'Dasaiah', 'Jagadeesh', 'C.K.Jagadish', 'T.H.Srinivasaiah', 'K.V.Acharya']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Karnataka', 'Deputy Secretary to Government, Education Department, State of Karnataka', 'University of Mysore', 'Bangalore University']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Karnataka At Bangalore']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ashok B. Hinchigeri', 'Ashok B.Hinchigeri']"", 'LAWYER': ""['K.M.Nataraj', 'Ravivarma Kumar', 'R.Omkumar', 'T.P.Rajendra Kumar Sungay', 'Ravishankar.D.R.', 'Rajendra Kumar Sungay']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['A.M.Bhaskar', 'Hirendra Shah', 'Dasaiah', 'Jagadeesh', 'C.K.Jagadish', 'T.H.Srinivasaiah', 'K.V.Acharya']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Karnataka', 'Deputy Secretary to Government, Education Department, State of Karnataka', 'University of Mysore', 'Bangalore University']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 R In The High Court Of Karnataka At Bangalore Dated This The 15Th Day Of July 2013 Before The Hon'Ble Mr. Justice Ashok B. Hinchigeri Writ Petition Nos.25964-25967 Of 2013 (Edn-Res) C/W Writ Petition No.25612/2013 And Writ Petition Nos.26170-26171/2013 Wp Nos.25964-25967/2013: Between : 1. Sri A.M.Bhaskar, S/o Sri A.L.Mahadevegowda, Aged about 41 years, No.2099, Near 101, Ganapathy Temple, K.R.Mohalla, Mysore - 570 004. 2. Sri Hirendra Shah, S/o Late Dhanji Shah, Aged about 49 years, No.472, Nirmala Nilaya, 2nd Main Road, C, 3rd Stage, 11th Block, Nagarabhavi, Bangalore - 560 072. 3. Sri Dasaiah, S/o Late Mondaiah, Aged about 50 years, No.281, 6th Cross, Banni Mantapa, C Layout, Mysore - 570 015. 2 4. Sri Jagadeesh, S/o Late B.Linganna, Aged about 40 years, No.1143/21, 7th Main, 4th Cross, Vidyaranyapuram, Mysore - 570 008. ... Petitioners (By Sri K.M.Nataraj, Senior Advocate for M/s. Haranahalli and Patil Associates) And: 1. The State of Karnataka, Department of Education (Universities), M.S.Building, Bangalore - 560 001. Represented by the Chief Secretary. 2. The Deputy Secretary to Government, Education Department, State of Karnataka, M.S.Building, Bangalore - 560 001. 3. University of Mysore, Crawford Hall, Mysore - 575 015. Represented by the Registrar. ... Respondents (By Prof.Ravivarma Kumar, Ag with Sri R.Omkumar, Aga for R-1 and R-2: Sri T.P.Rajendra Kumar Sungay, Advocate for R-3) These writ petitions are filed under Article 226 and 227 of the constitution of India praying to quash impugned order dated 15.6.2013 passed by the 2nd respondent vide Annexure- A in so far as petitioners are concerned and etc. 3 Wp Nos.25612/2013 And 26170-26171/2013: Between: 1. C.K.Jagadish, S/o C.Kempalaiah, Aged about 48 years, No.220, 6th Cross, Ananda Rao Circle, Gandhinagar, Bangalore - 560 009. 2. T.H.Srinivasaiah, S/o T.Hucchaiah, Aged about 46 years, R/at No.35/9, 2nd Cross, Mico Layout, Attiguppe, Vijayanagar, Bangalore - 560 040. 3. Dr.K.V.Acharya, S/o Late K.Srinivasacharya, Aged about 72 years, Professor and Former Chairman of Electronics Department, Uvc, No.300/16, 19th Main, 18th Cross, Mico Layout, Vijayanagar, Bangalore - 560 040. ... Petitioners (By Sri Ravishankar.D.R., Advocate) And: 1. State of Karnataka, Represented by the Secretary to the Education Department, M.S.Building, Ambedkar Beedhi, Bangalore - 560 001. 4 2. Bangalore University, Represented by its Registrar, Gnanabharathi Campus, Bangalore - 560 072. ... Respondents (By Prof.Ravivarma Kumar, Ag with Sri R.Omkumar, Aga for R1 Sri Rajendra Kumar Sungay, Advocate for R2) These writ petitions are filed under Article 226 and 227 of the constitution of India praying to declare that Section 39(1) is ultra vires the object of Section 28(g) and Section 38 of the Karnataka State Universities Act, 2000 and etc. These writ petitions, having been heard and reserved for orders on 03.07.2013, coming on for pronouncement this day, Ashok B.Hinchigeri J., delivered the following: Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ashok B. Hinchigeri', 'Ashok B.Hinchigeri']"", ""LAWYER"": ""['K.M.Nataraj', 'Ravivarma Kumar', 'R.Omkumar', 'T.P.Rajendra Kumar Sungay', 'Ravishankar.D.R.', 'Rajendra Kumar Sungay']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['A.M.Bhaskar', 'Hirendra Shah', 'Dasaiah', 'Jagadeesh', 'C.K.Jagadish', 'T.H.Srinivasaiah', 'K.V.Acharya']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Karnataka', 'Deputy Secretary to Government, Education Department, State of Karnataka', 'University of Mysore', 'Bangalore University']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"What the counter-affidavit filed on behalf of the respondent states is that the income subjected to assessment is the agricultural income from the sthanam properties of the Zamorin Raja for the previous year ending 31-3-1958 and that, during that period Sreemanavikraman Raja was the Zamorin Raja.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['31-3-1958']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Zamorin Raja', 'Sreemanavikraman Raja']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['31-3-1958']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Zamorin Raja', 'Sreemanavikraman Raja']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: What the counter-affidavit filed on behalf of the respondent states is that the income subjected to assessment is the agricultural income from the sthanam properties of the Zamorin Raja for the previous year ending 31-3-1958 and that, during that period Sreemanavikraman Raja was the Zamorin Raja. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['31-3-1958']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Zamorin Raja', 'Sreemanavikraman Raja']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of The Xi Addl.City Civil Judge, Bangalore City Dated this the 14th day of September 2015. Present: S.V.Kulkarni, B.Com., LLB(Spl) Xi Addl.City Civil Judge, B'lore city. O.S.No.2443/2000 c/w O.S.2354/2001 C.C.H.8 Plaintiff in C.Venkateshan, both S/o C.Channappa Naidu, O.S.2443/00 & Aged about 49 years, O.S.2354/01: R/at No.10/3, New cross road, Chikkamavalli, Bangalore - 560 004. (By Sri.MN, Advocate) : Vs : Defendantin Krishna Murthy, both S/o Venkatachalam, O.S.2443/00 & Aged about 45 years, : O.S.2354/01: R/at Old No.4, New No.89, New cross road, Chikkamavalli, Bangalore - 560 004. (Sri.VBS, Advocate) Date of the institution of suit in 04.04.2000 O.S.No.2443/2000: 2 O.S No.2443/2000 c/w O.S.No. 2354/2001 Date of the institution of suit in 02.04.2001 O.S.No.2354/2001: Nature of the suit in both Permanent injunction O.S.2443/2000 & O.S.2354/2001: Date of the commencement of 12.02.2011 recording of the evidence in O.S.No.2443/2000 : Date of the commencement of 26.07.2010 recording of the evidence in O.S.No.2354/2001 : Date on which the judgment 14.09.2015 was pronounced : Total duration: Year/s Month/s Day/s In O.S.No.2443/2000: 15 05 10 In O.S.No.2354/2001: 14 05 12 Xi Addl.City Civil Judge, B'lore city. Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['The Court Of The Xi Addl.City Civil Judge, Bangalore City']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['S.V.Kulkarni']"", ""LAWYER"": ""['MN', 'VBS']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['C.Venkateshan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Krishna Murthy']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['The Court Of The Xi Addl.City Civil Judge, Bangalore City']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['S.V.Kulkarni']"", 'LAWYER': ""['MN', 'VBS']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['C.Venkateshan']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Krishna Murthy']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of The Xi Addl.City Civil Judge, Bangalore City Dated this the 14th day of September 2015. Present: S.V.Kulkarni, B.Com., LLB(Spl) Xi Addl.City Civil Judge, B'lore city. O.S.No.2443/2000 c/w O.S.2354/2001 C.C.H.8 Plaintiff in C.Venkateshan, both S/o C.Channappa Naidu, O.S.2443/00 & Aged about 49 years, O.S.2354/01: R/at No.10/3, New cross road, Chikkamavalli, Bangalore - 560 004. (By Sri.MN, Advocate) : Vs : Defendantin Krishna Murthy, both S/o Venkatachalam, O.S.2443/00 & Aged about 45 years, : O.S.2354/01: R/at Old No.4, New No.89, New cross road, Chikkamavalli, Bangalore - 560 004. (Sri.VBS, Advocate) Date of the institution of suit in 04.04.2000 O.S.No.2443/2000: 2 O.S No.2443/2000 c/w O.S.No. 2354/2001 Date of the institution of suit in 02.04.2001 O.S.No.2354/2001: Nature of the suit in both Permanent injunction O.S.2443/2000 & O.S.2354/2001: Date of the commencement of 12.02.2011 recording of the evidence in O.S.No.2443/2000 : Date of the commencement of 26.07.2010 recording of the evidence in O.S.No.2354/2001 : Date on which the judgment 14.09.2015 was pronounced : Total duration: Year/s Month/s Day/s In O.S.No.2443/2000: 15 05 10 In O.S.No.2354/2001: 14 05 12 Xi Addl.City Civil Judge, B'lore city. Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['The Court Of The Xi Addl.City Civil Judge, Bangalore City']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['S.V.Kulkarni']"", ""LAWYER"": ""['MN', 'VBS']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['C.Venkateshan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Krishna Murthy']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He further deposed that he came to know the name of drivers as Dharamvir and Anil and of cleaner Sukhvir Singh from Mahavir Singh.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dharamvir', 'Anil', 'Sukhvir Singh', 'Mahavir Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Dharamvir', 'Anil', 'Sukhvir Singh', 'Mahavir Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He further deposed that he came to know the name of drivers as Dharamvir and Anil and of cleaner Sukhvir Singh from Mahavir Singh. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dharamvir', 'Anil', 'Sukhvir Singh', 'Mahavir Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Honble Sri Justice Vilas V. Afzulpurkar Writ Petition Nos.32710 of 02-03-2015 Saroj Mehandi and others.PETITIONERS The Government of Andhra Pradesh, Rep. by its Chief Secretary, Secretariat Buildings, Hyderabad and two others....RESPONDENTS Counsel for the Petitioners: Mr. D. Prakash Reddy For Mr. D. Purnachandra Reddy Mr. T. Niranjan Reddy For Mr. T.Nagarjuna Reddy Counsel for the Respondents: Advocate General (Ap) <Gist : >Head Note: ? Cases referred: 1. 2009 (4) Kert 725 2. Air 2000 Sc 679 3. Ari 1962 Sc 911 4. Air 1981 Sc 728 5. Air 1953 Sc 318 6. Air 1971 Sc 263 7. 1985 (Supp) Scc 144 8. 2012 (2) Scc 72 9. Air 1975 Sc 2154 10. Ari 1975 Sc 623 11. (2006) 3 Scc 321 The Hon'Ble Sri Justice Vilas V. Afzulpurkar Writ Petition Nos.32710, 33777, 33338 and 32150 of 2014 The Court made the following: Common Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Vilas V. Afzulpurkar']"", ""LAWYER"": ""['D. Prakash Reddy', 'D. Purnachandra Reddy', 'T. Niranjan Reddy', 'T.Nagarjuna Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Saroj Mehandi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Government of Andhra Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Vilas V. Afzulpurkar']"", 'LAWYER': ""['D. Prakash Reddy', 'D. Purnachandra Reddy', 'T. Niranjan Reddy', 'T.Nagarjuna Reddy']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Saroj Mehandi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Government of Andhra Pradesh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Honble Sri Justice Vilas V. Afzulpurkar Writ Petition Nos.32710 of 02-03-2015 Saroj Mehandi and others.PETITIONERS The Government of Andhra Pradesh, Rep. by its Chief Secretary, Secretariat Buildings, Hyderabad and two others....RESPONDENTS Counsel for the Petitioners: Mr. D. Prakash Reddy For Mr. D. Purnachandra Reddy Mr. T. Niranjan Reddy For Mr. T.Nagarjuna Reddy Counsel for the Respondents: Advocate General (Ap) <Gist : >Head Note: ? Cases referred: 1. 2009 (4) Kert 725 2. Air 2000 Sc 679 3. Ari 1962 Sc 911 4. Air 1981 Sc 728 5. Air 1953 Sc 318 6. Air 1971 Sc 263 7. 1985 (Supp) Scc 144 8. 2012 (2) Scc 72 9. Air 1975 Sc 2154 10. Ari 1975 Sc 623 11. (2006) 3 Scc 321 The Hon'Ble Sri Justice Vilas V. Afzulpurkar Writ Petition Nos.32710, 33777, 33338 and 32150 of 2014 The Court made the following: Common Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Vilas V. Afzulpurkar']"", ""LAWYER"": ""['D. Prakash Reddy', 'D. Purnachandra Reddy', 'T. Niranjan Reddy', 'T.Nagarjuna Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Saroj Mehandi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Government of Andhra Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"However, at the instance of father of Shivani, FIR No.97/2009 at Police Station Lahori Gate, Delhi was registered under Section 363 IPC on 10.8.2009 to which later on Section 366 and 376 were added.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['10.8.2009']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Police Station Lahori Gate, Delhi']"", ""OTHER_PERSON"": ""['Shivani']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 363', 'Section 366 and 376']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['10.8.2009']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Police Station Lahori Gate, Delhi']"", 'OTHER_PERSON': ""['Shivani']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 363', 'Section 366 and 376']"", 'RESPONDENT': '[]', 'STATUTE': ""['IPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: However, at the instance of father of Shivani, FIR No.97/2009 at Police Station Lahori Gate, Delhi was registered under Section 363 IPC on 10.8.2009 to which later on Section 366 and 376 were added. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['10.8.2009']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Police Station Lahori Gate, Delhi']"", ""OTHER_PERSON"": ""['Shivani']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 363', 'Section 366 and 376']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""} </s>"
"There was no regular TADA Court at Mumbai and TADA case's trial was likely to take some time to commence and, therefore, a fresh bail application was filed.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['TADA Court at Mumbai']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['TADA']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['TADA Court at Mumbai']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['TADA']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: There was no regular TADA Court at Mumbai and TADA case's trial was likely to take some time to commence and, therefore, a fresh bail application was filed. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['TADA Court at Mumbai']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['TADA']"", ""WITNESS"": ""[]""} </s>"
"The question of increase on account of inflation was not considered by the Supreme Court in Susamma Thomas(supra), Sarla Dixit(supra) Bijoy Kumar Dugar(supra) and Sarla Verma(supra).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Susamma Thomas(supra', 'Sarla Dixit(supra', 'Bijoy Kumar Dugar(supra', 'Sarla Verma(supra']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Susamma Thomas(supra', 'Sarla Dixit(supra', 'Bijoy Kumar Dugar(supra', 'Sarla Verma(supra']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The question of increase on account of inflation was not considered by the Supreme Court in Susamma Thomas(supra), Sarla Dixit(supra) Bijoy Kumar Dugar(supra) and Sarla Verma(supra). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Susamma Thomas(supra', 'Sarla Dixit(supra', 'Bijoy Kumar Dugar(supra', 'Sarla Verma(supra']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The assessee received the consideration in terms of technology transfer agreement between the assessee and Bayer AG, Germany dt. 14th Oct., 1996.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['14th Oct., 1996']"", ""GPE"": ""['Germany']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Bayer AG']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['14th Oct., 1996']"", 'GPE': ""['Germany']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Bayer AG']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The assessee received the consideration in terms of technology transfer agreement between the assessee and Bayer AG, Germany dt. 14th Oct., 1996. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['14th Oct., 1996']"", ""GPE"": ""['Germany']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Bayer AG']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The remaining two appeals, namely Jail Appeals Nos. 317 of 1965 and 320 of 1965, are the unrepresented jail appeals of Chhotey Lal and Gayari.","{""CASE_NUMBER"": ""['Jail Appeals Nos. 317 of 1965 and 320 of 1965']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Chhotey Lal', 'Gayari']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Jail Appeals Nos. 317 of 1965 and 320 of 1965']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Chhotey Lal', 'Gayari']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The remaining two appeals, namely Jail Appeals Nos. 317 of 1965 and 320 of 1965, are the unrepresented jail appeals of Chhotey Lal and Gayari. [/INST]
 {""CASE_NUMBER"": ""['Jail Appeals Nos. 317 of 1965 and 320 of 1965']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Chhotey Lal', 'Gayari']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"3. The Rajasthan Panchayati Raj Act, 1994, came into force on 23-4-1994, hereinafter referred to as 'the Act of 1994'.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['23-4-1994']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Rajasthan Panchayati Raj Act, 1994']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['23-4-1994']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Rajasthan Panchayati Raj Act, 1994']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 3. The Rajasthan Panchayati Raj Act, 1994, came into force on 23-4-1994, hereinafter referred to as 'the Act of 1994'. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['23-4-1994']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Rajasthan Panchayati Raj Act, 1994']"", ""WITNESS"": ""[]""} </s>"
"Sandeep Pathak had stated that in 13 Criminal Appeal No.1264/2010 the evening of the incident, the police came to his shop and they took him to the rented room, where the appellant gave one Katta and one bullet to the police.","{""CASE_NUMBER"": ""['13 Criminal Appeal No.1264/2010']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sandeep Pathak']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['13 Criminal Appeal No.1264/2010']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sandeep Pathak']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Sandeep Pathak had stated that in 13 Criminal Appeal No.1264/2010 the evening of the incident, the police came to his shop and they took him to the rented room, where the appellant gave one Katta and one bullet to the police. [/INST]
 {""CASE_NUMBER"": ""['13 Criminal Appeal No.1264/2010']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sandeep Pathak']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Let explanation be called from the Superintendent of Police, Rajgarh (Biaora) regarding as to why non-bailable warrant issued against appellant No.6 Ratanlal S/o Khemraj has not been served.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Rajgarh']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Khemraj']"", ""PETITIONER"": ""['Ratanlal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Rajgarh']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Khemraj']"", 'PETITIONER': ""['Ratanlal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Let explanation be called from the Superintendent of Police, Rajgarh (Biaora) regarding as to why non-bailable warrant issued against appellant No.6 Ratanlal S/o Khemraj has not been served. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Rajgarh']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Khemraj']"", ""PETITIONER"": ""['Ratanlal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Court is careful not to find fraud unless it is distinctly pleaded and proved; but once it is proved it vitiates judgments, contracts and all transactions whatsoever.....""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Court is careful not to find fraud unless it is distinctly pleaded and proved; but once it is proved it vitiates judgments, contracts and all transactions whatsoever....."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
(2) I.L.R. 10 Lah. 657. I.L.R. 59 Cal. 1226.,"{""CASE_NUMBER"": ""['I.L.R. 59 Cal. 1226']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['I.L.R. 59 Cal. 1226']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (2) I.L.R. 10 Lah. 657. I.L.R. 59 Cal. 1226. [/INST]
 {""CASE_NUMBER"": ""['I.L.R. 59 Cal. 1226']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"But even if it be held that this Court has jurisdiction to examine whether the fundamental rights of members of a Co-operative Society guaranteed by Article 19 (1) (c) are even indirectly infringed by the impugned provision, in my opinion the decision of the Supreme Court in All India Bank Employees' Association v. The National Industrial Tribunal (Bank Deputies), Bombay, AIR 1962 S. C. 171, is a complete answer.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[\""All India Bank Employees' Association v. The National Industrial Tribunal (Bank Deputies), Bombay, AIR 1962 S. C. 171\""]"", ""PROVISION"": ""['Article 19 (1) (c)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[""All India Bank Employees\' Association v. The National Industrial Tribunal (Bank Deputies), Bombay, AIR 1962 S. C. 171""]', 'PROVISION': ""['Article 19 (1) (c)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But even if it be held that this Court has jurisdiction to examine whether the fundamental rights of members of a Co-operative Society guaranteed by Article 19 (1) (c) are even indirectly infringed by the impugned provision, in my opinion the decision of the Supreme Court in All India Bank Employees' Association v. The National Industrial Tribunal (Bank Deputies), Bombay, AIR 1962 S. C. 171, is a complete answer. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[\""All India Bank Employees' Association v. The National Industrial Tribunal (Bank Deputies), Bombay, AIR 1962 S. C. 171\""]"", ""PROVISION"": ""['Article 19 (1) (c)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"After the incorporation, the directors adopted the transaction by a Resolution dated 29.3.1946.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['29.3.1946']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['29.3.1946']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: After the incorporation, the directors adopted the transaction by a Resolution dated 29.3.1946. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['29.3.1946']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The learned Commissioner having held in favour of the applicants/appellants awarded compensation, but the High Court having held in favour of the applicants in all respects had, however, excluded the liability of the Insurance Company on the ground that the contention of deemed transfer of the insurance policy in favour of Jeeva Rathna Setty by virtue of Section 157 of M.V. Act was not actually urged before the Commissioner.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Jeeva Rathna Setty']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 157']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['M.V. Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Jeeva Rathna Setty']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 157']"", 'RESPONDENT': '[]', 'STATUTE': ""['M.V. Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The learned Commissioner having held in favour of the applicants/appellants awarded compensation, but the High Court having held in favour of the applicants in all respects had, however, excluded the liability of the Insurance Company on the ground that the contention of deemed transfer of the insurance policy in favour of Jeeva Rathna Setty by virtue of Section 157 of M.V. Act was not actually urged before the Commissioner. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Jeeva Rathna Setty']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 157']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['M.V. Act']"", ""WITNESS"": ""[]""} </s>"
He requisitioned the photographer and the crime team.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He requisitioned the photographer and the crime team. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Similar deemed explanations prescribing higher rate of tax were very much there in all previous notifications issued under Section 3 of the Taxation Act.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 3']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Taxation Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 3']"", 'RESPONDENT': '[]', 'STATUTE': ""['Taxation Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Similar deemed explanations prescribing higher rate of tax were very much there in all previous notifications issued under Section 3 of the Taxation Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 3']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Taxation Act']"", ""WITNESS"": ""[]""} </s>"
Petitioner: R. K. Sabharwal And Ors. Vs. Respondent: State Of Punjab And Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['R. K. Sabharwal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Punjab']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['R. K. Sabharwal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Punjab']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: R. K. Sabharwal And Ors. Vs. Respondent: State Of Punjab And Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['R. K. Sabharwal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Punjab']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Anita (PW/5) in para-70 of her statement has stated that on the date of the incident, she was in her house.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Anita']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Anita']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Anita (PW/5) in para-70 of her statement has stated that on the date of the incident, she was in her house. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Anita']""} </s>"
Reportable In The Supreme Court Of India Criminal Appellate Jurisdiction Criminal Appeal No. 1020 Of 2010 [Arising out of Slp (Crl.) No. 407 of 2006] Rangappa ... Appellant Versus Sri Mohan ... Respondent Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court Of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rangappa']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Mohan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court Of India']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Rangappa']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Mohan']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Reportable In The Supreme Court Of India Criminal Appellate Jurisdiction Criminal Appeal No. 1020 Of 2010 [Arising out of Slp (Crl.) No. 407 of 2006] Rangappa ... Appellant Versus Sri Mohan ... Respondent Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court Of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Rangappa']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Mohan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
But it was found by the Upa Lok Ayukta that the second W.P.(C).No.33916 of 2008 & con. Cases.,"{""CASE_NUMBER"": ""['W.P.(C).No.33916 of 2008']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Upa Lok Ayukta']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['W.P.(C).No.33916 of 2008']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Upa Lok Ayukta']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But it was found by the Upa Lok Ayukta that the second W.P.(C).No.33916 of 2008 & con. Cases. [/INST]
 {""CASE_NUMBER"": ""['W.P.(C).No.33916 of 2008']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Upa Lok Ayukta']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
21. Secondary evidence of unregistered document was allowed for collateral purpose of showing the nature and character of the possession.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 21. Secondary evidence of unregistered document was allowed for collateral purpose of showing the nature and character of the possession. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We are really concerned with clauses (v) and (vii) of section 2(f) of the Excise Act.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['clauses (v) and (vii) of section 2(f)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Excise Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['clauses (v) and (vii) of section 2(f)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Excise Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We are really concerned with clauses (v) and (vii) of section 2(f) of the Excise Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['clauses (v) and (vii) of section 2(f)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Excise Act']"", ""WITNESS"": ""[]""} </s>"
"On considering the testimony of witnesses coupled with the documents filed on record, it is established that Sonu Tiwari @ Somnath suffered fatal injuries in an accident which took place on 26.11.12 at about 8.00 PM at Bata Mor, near Milan Vatika, NH­2, Faridabad involving vehicle bearing no. HR 29 Y 0134 by Satinder Kumar/respondent no.1.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['26.11.12']"", ""GPE"": ""['Faridabad']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sonu Tiwari @ Somnath']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Satinder Kumar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['26.11.12']"", 'GPE': ""['Faridabad']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sonu Tiwari @ Somnath']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Satinder Kumar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On considering the testimony of witnesses coupled with the documents filed on record, it is established that Sonu Tiwari @ Somnath suffered fatal injuries in an accident which took place on 26.11.12 at about 8.00 PM at Bata Mor, near Milan Vatika, NH­2, Faridabad involving vehicle bearing no. HR 29 Y 0134 by Satinder Kumar/respondent no.1. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['26.11.12']"", ""GPE"": ""['Faridabad']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sonu Tiwari @ Somnath']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Satinder Kumar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The P.W.4 has produced Ex.P.27 Case Sheet and Ex.P.28 X-ray Films 3 in numbers.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The P.W.4 has produced Ex.P.27 Case Sheet and Ex.P.28 X-ray Films 3 in numbers. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"P.W. 10 Ashwin is son of P.W. 3 Vibha, P.W. 11 is Revenue Officer who had drawn sketch map of the spot.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Ashwin', 'Vibha']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Ashwin', 'Vibha']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: P.W. 10 Ashwin is son of P.W. 3 Vibha, P.W. 11 is Revenue Officer who had drawn sketch map of the spot. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Ashwin', 'Vibha']""} </s>"
It is nobody's case that the recognition was granted to the petitioners after coming into force of NCT E R egulations 2009.,"{""CASE_NUMBER"": ""['NCT E R egulations 2009']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['NCT E R egulations 2009']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is nobody's case that the recognition was granted to the petitioners after coming into force of NCT E R egulations 2009. [/INST]
 {""CASE_NUMBER"": ""['NCT E R egulations 2009']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Petitioner: Marri Chandra Shekhar Rao Vs. Respondent: Dean, Seth G.S. Medical College And Ors. Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Marri Chandra Shekhar Rao']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Dean, Seth G.S. Medical College And Ors']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Marri Chandra Shekhar Rao']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Dean, Seth G.S. Medical College And Ors']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Marri Chandra Shekhar Rao Vs. Respondent: Dean, Seth G.S. Medical College And Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Marri Chandra Shekhar Rao']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Dean, Seth G.S. Medical College And Ors']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"During the pendency of that writ petition the Govt. of Gujarat issued an order under r. 115(2) of the Defence of India Rules, 1971, taking over the management of the undertaking with effect from November 19, 1972.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['November 19, 1972']"", ""GPE"": ""['Gujarat']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['r. 115(2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Defence of India Rules, 1971']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['November 19, 1972']"", 'GPE': ""['Gujarat']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['r. 115(2)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Defence of India Rules, 1971']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: During the pendency of that writ petition the Govt. of Gujarat issued an order under r. 115(2) of the Defence of India Rules, 1971, taking over the management of the undertaking with effect from November 19, 1972. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['November 19, 1972']"", ""GPE"": ""['Gujarat']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['r. 115(2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Defence of India Rules, 1971']"", ""WITNESS"": ""[]""} </s>"
"Even in the complaint, dated 24.11.2001 lodged by the mother of the appellant, which forms part of Ex.P.4, the alleged removal of Thali by the respondent/wife has not been referred to.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['24.11.2001']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['24.11.2001']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Even in the complaint, dated 24.11.2001 lodged by the mother of the appellant, which forms part of Ex.P.4, the alleged removal of Thali by the respondent/wife has not been referred to. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['24.11.2001']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The Privy Council as well as the High Courts in India have always taken this view.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Privy Council as well as the High Courts in India have always taken this view. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It was contended that the Departmental Promotion Committee (DPC) constituted in terms of the said Rules would hold its meeting at an early date.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was contended that the Departmental Promotion Committee (DPC) constituted in terms of the said Rules would hold its meeting at an early date. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The revenue records like Sethwar, Khasra Pahani 1954-55 prepared under the Hyderabad Land Census Rules, 1954 and the record of rights prepared under the Andhra Pradesh (Telangana Area) Record of Rights Regulation, 1358 Fasli, would show it as Government land for more than fifty years.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Hyderabad Land Census Rules, 1954', 'Andhra Pradesh (Telangana Area) Record of Rights Regulation, 1358 Fasli']"", ""WITNESS"": ""['Sethwar']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Hyderabad Land Census Rules, 1954', 'Andhra Pradesh (Telangana Area) Record of Rights Regulation, 1358 Fasli']"", 'WITNESS': ""['Sethwar']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The revenue records like Sethwar, Khasra Pahani 1954-55 prepared under the Hyderabad Land Census Rules, 1954 and the record of rights prepared under the Andhra Pradesh (Telangana Area) Record of Rights Regulation, 1358 Fasli, would show it as Government land for more than fifty years. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Hyderabad Land Census Rules, 1954', 'Andhra Pradesh (Telangana Area) Record of Rights Regulation, 1358 Fasli']"", ""WITNESS"": ""['Sethwar']""} </s>"
It was further argued that even RW-1 Veena Gupta in her cross examination had stated that her defence is the same as taken up by her father in law (deceased respondent no. 1) in his written statement.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Veena Gupta']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Veena Gupta']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was further argued that even RW-1 Veena Gupta in her cross examination had stated that her defence is the same as taken up by her father in law (deceased respondent no. 1) in his written statement. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Veena Gupta']""} </s>"
But the employer is bound under the Statute to make an equal contribution up to a minimum prescribed under Section 6.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 6']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 6']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But the employer is bound under the Statute to make an equal contribution up to a minimum prescribed under Section 6. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 6']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Sh. Harvinder Singh, Metropolitan Magistrate - 03 (West), Tis Hazari Courts, Delhi - 110 054. Fir No.982/2004 Ps - Nangloi State Vs. Anil etc. Unique Case Id No.02401R1300162005 J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Metropolitan Magistrate - 03 (West), Tis Hazari Courts, Delhi - 110 054']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Harvinder Singh']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State', 'Anil']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Metropolitan Magistrate - 03 (West), Tis Hazari Courts, Delhi - 110 054']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Harvinder Singh']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State', 'Anil']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Sh. Harvinder Singh, Metropolitan Magistrate - 03 (West), Tis Hazari Courts, Delhi - 110 054. Fir No.982/2004 Ps - Nangloi State Vs. Anil etc. Unique Case Id No.02401R1300162005 J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Metropolitan Magistrate - 03 (West), Tis Hazari Courts, Delhi - 110 054']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Harvinder Singh']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State', 'Anil']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He then referred to and relied on the Supreme Court case of Mahasay Ganesh Prasad Ray v. Narendra Nath Sen AIR 1953 SC 431 in support of the proposition that the loose papers seized could not be regarded as accounts within the meaning of Section 90 of the Evidence Act.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Mahasay Ganesh Prasad Ray v. Narendra Nath Sen AIR 1953 SC 431']"", ""PROVISION"": ""['Section 90']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Mahasay Ganesh Prasad Ray v. Narendra Nath Sen AIR 1953 SC 431']"", 'PROVISION': ""['Section 90']"", 'RESPONDENT': '[]', 'STATUTE': ""['Evidence Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He then referred to and relied on the Supreme Court case of Mahasay Ganesh Prasad Ray v. Narendra Nath Sen AIR 1953 SC 431 in support of the proposition that the loose papers seized could not be regarded as accounts within the meaning of Section 90 of the Evidence Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Mahasay Ganesh Prasad Ray v. Narendra Nath Sen AIR 1953 SC 431']"", ""PROVISION"": ""['Section 90']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act']"", ""WITNESS"": ""[]""} </s>"
"In his further cross-examination, he was confronted with the omissions in the statements Ex. P/l and Ex. D/l about the injuries on the back and the hand.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In his further cross-examination, he was confronted with the omissions in the statements Ex. P/l and Ex. D/l about the injuries on the back and the hand. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Ho further contends that if the witness Maddy Subba Rao was cross-examined, his defence would have been established.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Maddy Subba Rao']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Maddy Subba Rao']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Ho further contends that if the witness Maddy Subba Rao was cross-examined, his defence would have been established. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Maddy Subba Rao']""} </s>"
He received grievous and serious injuries while the pillion rider Rajesh @ Sonu died at the spot.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Rajesh @ Sonu']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Rajesh @ Sonu']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He received grievous and serious injuries while the pillion rider Rajesh @ Sonu died at the spot. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Rajesh @ Sonu']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It may be noted that Broome, J., was a member of the Bench which had decided the case of Synthetics and Chemicals Ltd., 1967 All LJ 188= (AIR 1967 All 4) and was also a member of the Bench which decided Shyam Singh Rawat's case, 1968 All LJ 487.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Broome']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shyam Singh Rawat']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Synthetics and Chemicals Ltd., 1967 All LJ 188= (AIR 1967 All 4)', '1968 All LJ 487']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Broome']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Shyam Singh Rawat']"", 'PETITIONER': '[]', 'PRECEDENT': ""['Synthetics and Chemicals Ltd., 1967 All LJ 188= (AIR 1967 All 4)', '1968 All LJ 487']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It may be noted that Broome, J., was a member of the Bench which had decided the case of Synthetics and Chemicals Ltd., 1967 All LJ 188= (AIR 1967 All 4) and was also a member of the Bench which decided Shyam Singh Rawat's case, 1968 All LJ 487. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Broome']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shyam Singh Rawat']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Synthetics and Chemicals Ltd., 1967 All LJ 188= (AIR 1967 All 4)', '1968 All LJ 487']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Jyoti Basu, the Chief Minister as the seventh respondent, Md. Amin, the Minister of the Transport Branch of the Home Department as the eighth respondent, Hashim Abdul Halim, the Minister of the Legislative and the Judicial Department as the ninth respondent and the Electoral Registration Officer as the tenth respondent.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Jyoti Basu', 'Md. Amin', 'Hashim Abdul Halim']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Jyoti Basu', 'Md. Amin', 'Hashim Abdul Halim']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Jyoti Basu, the Chief Minister as the seventh respondent, Md. Amin, the Minister of the Transport Branch of the Home Department as the eighth respondent, Hashim Abdul Halim, the Minister of the Legislative and the Judicial Department as the ninth respondent and the Electoral Registration Officer as the tenth respondent. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Jyoti Basu', 'Md. Amin', 'Hashim Abdul Halim']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Therefore, Special Case No. 24 of 1982 and Special Case No. 3/83 pending in the Court of Special judge, Greater Bombay Shri R.B. Sule are withdrawn and transferred to the High Court of Bombay with a request to the learned Chief Justice to assign these two cases to a sitting Judge of the High Court.","{""CASE_NUMBER"": ""['Special Case No. 24 of 1982', 'Special Case No. 3/83']"", ""COURT"": ""['Court of Special judge, Greater Bombay', 'High Court of Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['R.B. Sule']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Special Case No. 24 of 1982', 'Special Case No. 3/83']"", 'COURT': ""['Court of Special judge, Greater Bombay', 'High Court of Bombay']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['R.B. Sule']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore, Special Case No. 24 of 1982 and Special Case No. 3/83 pending in the Court of Special judge, Greater Bombay Shri R.B. Sule are withdrawn and transferred to the High Court of Bombay with a request to the learned Chief Justice to assign these two cases to a sitting Judge of the High Court. [/INST]
 {""CASE_NUMBER"": ""['Special Case No. 24 of 1982', 'Special Case No. 3/83']"", ""COURT"": ""['Court of Special judge, Greater Bombay', 'High Court of Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['R.B. Sule']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Utmost care has been taken by the Ld. MM while passing the order.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Utmost care has been taken by the Ld. MM while passing the order. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The: maximum value of this matter could only be the amount for which the properties were attached, because if that amount were paid to the petitioner the properties are bound to be released.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The: maximum value of this matter could only be the amount for which the properties were attached, because if that amount were paid to the petitioner the properties are bound to be released. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the statement of defence filed by the respondents it was more or less conceded that the claim for extra works would lie, and stated that the actuals should be accounted and paid along with the final bill.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the statement of defence filed by the respondents it was more or less conceded that the claim for extra works would lie, and stated that the actuals should be accounted and paid along with the final bill. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In this connection, we refer to section 13 of the Securitisation Act which reads as follows: ""13. Enforcement of security interest.-","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 13']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Securitisation Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 13']"", 'RESPONDENT': '[]', 'STATUTE': ""['Securitisation Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this connection, we refer to section 13 of the Securitisation Act which reads as follows: ""13. Enforcement of security interest.- [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 13']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Securitisation Act']"", ""WITNESS"": ""[]""} </s>"
Petitioner: P. J. Irani Vs. Respondent: The State Of Madras Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['P. J. Irani']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Madras']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['P. J. Irani']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Madras']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: P. J. Irani Vs. Respondent: The State Of Madras Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['P. J. Irani']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Madras']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Respondent No. 3 D.D. Goswami is her neighbour.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['D.D. Goswami']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['D.D. Goswami']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Respondent No. 3 D.D. Goswami is her neighbour. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['D.D. Goswami']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"An inventory was prepared on the 28th oft December, 1956 and sixtyfour articles were entered in it, of which two only were shown as claimed by both parties.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['28th oft December, 1956']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['28th oft December, 1956']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: An inventory was prepared on the 28th oft December, 1956 and sixtyfour articles were entered in it, of which two only were shown as claimed by both parties. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['28th oft December, 1956']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The first respondent Delhi Administration pursuant to aforementioned written agreement referred the following dispute to Shri G. C. Jain, Presiding Officer of the Labour Court, Delhi who was selected by the parties to be the arbitrator.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Labour Court, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['G. C. Jain']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Delhi Administration']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Labour Court, Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['G. C. Jain']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Delhi Administration']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The first respondent Delhi Administration pursuant to aforementioned written agreement referred the following dispute to Shri G. C. Jain, Presiding Officer of the Labour Court, Delhi who was selected by the parties to be the arbitrator. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Labour Court, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['G. C. Jain']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Delhi Administration']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The judgment in Reserve Bank (supra) was referred to contend that the provisions of the unfair labour practices can be enforced through the machinery contained in Industrial Disputes Act, 1947.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Reserve Bank']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Industrial Disputes Act, 1947']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Reserve Bank']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Industrial Disputes Act, 1947']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The judgment in Reserve Bank (supra) was referred to contend that the provisions of the unfair labour practices can be enforced through the machinery contained in Industrial Disputes Act, 1947. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Reserve Bank']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Industrial Disputes Act, 1947']"", ""WITNESS"": ""[]""} </s>"
"After completion of investigation, challan against the accused was presented before the Court.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: After completion of investigation, challan against the accused was presented before the Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The statements of P.W. 3 Anup and P.W. 9 Ravi have been recorded on 11st June, 2006 i.e. two days after the incident.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['11st June, 2006']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Anup', 'Ravi']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['11st June, 2006']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Anup', 'Ravi']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The statements of P.W. 3 Anup and P.W. 9 Ravi have been recorded on 11st June, 2006 i.e. two days after the incident. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['11st June, 2006']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Anup', 'Ravi']""} </s>"
"Therefore, it is quite natural that the blood relatives would come to know about the cruelty or harassment, if any, meted out to the victim.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore, it is quite natural that the blood relatives would come to know about the cruelty or harassment, if any, meted out to the victim. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"At about 11 p.m. she woke up and saw appellant Machhi Singh armed with rifle, and his two brothers, appellant Chhina Singh and appellant Kashmir Singh, armed with Kirpans, standing near the feet of Satnam Singh who was sleeping on the cot.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Satnam Singh']"", ""PETITIONER"": ""['Machhi Singh', 'Chhina Singh', 'Kashmir Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Satnam Singh']"", 'PETITIONER': ""['Machhi Singh', 'Chhina Singh', 'Kashmir Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: At about 11 p.m. she woke up and saw appellant Machhi Singh armed with rifle, and his two brothers, appellant Chhina Singh and appellant Kashmir Singh, armed with Kirpans, standing near the feet of Satnam Singh who was sleeping on the cot. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Satnam Singh']"", ""PETITIONER"": ""['Machhi Singh', 'Chhina Singh', 'Kashmir Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Its correct citation is Jhandu Mal Tara Chand Rice Mills v. CIT [1969] 73 ITR 192 (Punj. & Har.) and not 72 ITR 122 as mentioned in the order of the CIT(A).,"{""CASE_NUMBER"": ""['72 ITR 122']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Jhandu Mal Tara Chand Rice Mills v. CIT [1969] 73 ITR 192']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['72 ITR 122']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Jhandu Mal Tara Chand Rice Mills v. CIT [1969] 73 ITR 192']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Its correct citation is Jhandu Mal Tara Chand Rice Mills v. CIT [1969] 73 ITR 192 (Punj. & Har.) and not 72 ITR 122 as mentioned in the order of the CIT(A). [/INST]
 {""CASE_NUMBER"": ""['72 ITR 122']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Jhandu Mal Tara Chand Rice Mills v. CIT [1969] 73 ITR 192']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is further stated in the counter affidavit that disciplinary proceedings under the Tamil Nadu Civil Services (Discipline and Appeal) Rules were initiated by the District Forest Officer against G.Nalandah Krishnamoorthy, Office Assistant and S.Lazar, Forest Guard and an exparte order of removal of service was passed against G. Nalandah Krishnamoorthy.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['G.Nalandah Krishnamoorthy', 'S.Lazar', 'G. Nalandah Krishnamoorthy']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Tamil Nadu Civil Services (Discipline and Appeal) Rules']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['G.Nalandah Krishnamoorthy', 'S.Lazar', 'G. Nalandah Krishnamoorthy']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Tamil Nadu Civil Services (Discipline and Appeal) Rules']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is further stated in the counter affidavit that disciplinary proceedings under the Tamil Nadu Civil Services (Discipline and Appeal) Rules were initiated by the District Forest Officer against G.Nalandah Krishnamoorthy, Office Assistant and S.Lazar, Forest Guard and an exparte order of removal of service was passed against G. Nalandah Krishnamoorthy. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['G.Nalandah Krishnamoorthy', 'S.Lazar', 'G. Nalandah Krishnamoorthy']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Tamil Nadu Civil Services (Discipline and Appeal) Rules']"", ""WITNESS"": ""[]""} </s>"
"2. Total escalation of Rs. 55,00,000/- paid for all (MIG, LIG, LR. MR) @ 70% Rs. 38,00,000/- 3.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 2. Total escalation of Rs. 55,00,000/- paid for all (MIG, LIG, LR. MR) @ 70% Rs. 38,00,000/- 3. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
From the aforesaid facts it can be safely inferred that appellant Tripathy was not happy with the Collector though it may also be said that the Collector had also acted rashly and that was sufficient motive for entering into the conspiracy with appellant Yadav in order to get rid of the Collector.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Tripathy', 'Yadav']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Tripathy', 'Yadav']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: From the aforesaid facts it can be safely inferred that appellant Tripathy was not happy with the Collector though it may also be said that the Collector had also acted rashly and that was sufficient motive for entering into the conspiracy with appellant Yadav in order to get rid of the Collector. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Tripathy', 'Yadav']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
A vehicle was arranged and the dead body was sent for postmortem examination.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A vehicle was arranged and the dead body was sent for postmortem examination. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"[659B-C] 635 D.C.M. v. Rajasthan State Electricity Board, [1986] 2 SCC 431, referred to. 21. Different tariffs for High and Low Tension Consumers and for different classes of consumers, such as, Industrial, Commercial, Agricultural and Domestic have been prescribed and the differention appears to be reasonable and far from arbitrary and based on intelligent and intelligible criteria.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['D.C.M. v. Rajasthan State Electricity Board, [1986] 2 SCC 431']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['D.C.M. v. Rajasthan State Electricity Board, [1986] 2 SCC 431']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: [659B-C] 635 D.C.M. v. Rajasthan State Electricity Board, [1986] 2 SCC 431, referred to. 21. Different tariffs for High and Low Tension Consumers and for different classes of consumers, such as, Industrial, Commercial, Agricultural and Domestic have been prescribed and the differention appears to be reasonable and far from arbitrary and based on intelligent and intelligible criteria. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['D.C.M. v. Rajasthan State Electricity Board, [1986] 2 SCC 431']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The panel of three persons was decided on the basis of votes secured by each of the persons proposed for inclusion in the panel.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The panel of three persons was decided on the basis of votes secured by each of the persons proposed for inclusion in the panel. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the appeal preferred from the judgment of the High Court upholding the said conviction and sentence the Hon'ble Apex Court, after having considered the defence version that Lakhiram was killed by the father of the accused Meharsingh on seeing his sons being assaulted by lathi and balkathi, accepted the plea of right of private defence.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Lakhiram', 'Meharsingh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Lakhiram', 'Meharsingh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the appeal preferred from the judgment of the High Court upholding the said conviction and sentence the Hon'ble Apex Court, after having considered the defence version that Lakhiram was killed by the father of the accused Meharsingh on seeing his sons being assaulted by lathi and balkathi, accepted the plea of right of private defence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Lakhiram', 'Meharsingh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As per the order passed by the learned Additional District Judge, Amritsar dated 13.3.2003, the petitioner was directed to appear in the office of the Chairman and Managing Director of the Corporation on 2.5.2003 at 11.00 a.m. on which date he did appear, which fact is not in dispute.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['13.3.2003', '2.5.2003']"", ""GPE"": ""['Amritsar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['13.3.2003', '2.5.2003']"", 'GPE': ""['Amritsar']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As per the order passed by the learned Additional District Judge, Amritsar dated 13.3.2003, the petitioner was directed to appear in the office of the Chairman and Managing Director of the Corporation on 2.5.2003 at 11.00 a.m. on which date he did appear, which fact is not in dispute. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['13.3.2003', '2.5.2003']"", ""GPE"": ""['Amritsar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Chapter XII of the Code of Criminal Procedure relates to information to the police and their powers to investigate.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Chapter XII']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Chapter XII']"", 'RESPONDENT': '[]', 'STATUTE': ""['Code of Criminal Procedure']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Chapter XII of the Code of Criminal Procedure relates to information to the police and their powers to investigate. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Chapter XII']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure']"", ""WITNESS"": ""[]""} </s>"
But testimonies of P.Ws. 41 and 44 clearly show that those accused approached them and told them that something should be done for the total annihilation of Tomy's family.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Tomy']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Tomy']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But testimonies of P.Ws. 41 and 44 clearly show that those accused approached them and told them that something should be done for the total annihilation of Tomy's family. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Tomy']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
High Court Of Chattisgarh Bilaspur MCrC No 5024 of 2000 Tata Engineering & Locomotive Company Ltd and another ...Petitioners Versus State of Madhya Pradesh now Cg and another ...Respondents ! Shri Surendra Singh Sr Advocate with Shri Ps Koshy counsel for the petitioners ^ Shri Rakesh Jha Dy Govt Advocate for the State respondent No 1 Shri Bp Sharma and Shri Vivek Chopda counsel for respondent Coram: Honble Shri Manindra Mohan Shrivastava J Dated: 17/11/2011 : Judgement O R D E R,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Chattisgarh Bilaspur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Manindra Mohan Shrivastava']"", ""LAWYER"": ""['Surendra Singh', 'Ps Koshy', 'Rakesh Jha', 'Bp Sharma', 'Vivek Chopda']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Tata Engineering & Locomotive Company Ltd']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Madhya Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Chattisgarh Bilaspur']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Manindra Mohan Shrivastava']"", 'LAWYER': ""['Surendra Singh', 'Ps Koshy', 'Rakesh Jha', 'Bp Sharma', 'Vivek Chopda']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Tata Engineering & Locomotive Company Ltd']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Madhya Pradesh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: High Court Of Chattisgarh Bilaspur MCrC No 5024 of 2000 Tata Engineering & Locomotive Company Ltd and another ...Petitioners Versus State of Madhya Pradesh now Cg and another ...Respondents ! Shri Surendra Singh Sr Advocate with Shri Ps Koshy counsel for the petitioners ^ Shri Rakesh Jha Dy Govt Advocate for the State respondent No 1 Shri Bp Sharma and Shri Vivek Chopda counsel for respondent Coram: Honble Shri Manindra Mohan Shrivastava J Dated: 17/11/2011 : Judgement O R D E R [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Chattisgarh Bilaspur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Manindra Mohan Shrivastava']"", ""LAWYER"": ""['Surendra Singh', 'Ps Koshy', 'Rakesh Jha', 'Bp Sharma', 'Vivek Chopda']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Tata Engineering & Locomotive Company Ltd']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Madhya Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He relied on the decision of the Punjab & Haryana High Court in Swaran Kanta vs. CIT (1989) 176 ITR 291 (P&H). 6.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Punjab & Haryana High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Swaran Kanta vs. CIT (1989) 176 ITR 291 (P&H)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Punjab & Haryana High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Swaran Kanta vs. CIT (1989) 176 ITR 291 (P&H)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He relied on the decision of the Punjab & Haryana High Court in Swaran Kanta vs. CIT (1989) 176 ITR 291 (P&H). 6. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Punjab & Haryana High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Swaran Kanta vs. CIT (1989) 176 ITR 291 (P&H)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The material placed on record fully establishes that the assessment of the petitioner's work and conduct was bad and the adverse remarks for the year 1994-95 were sufficient for the impugned action.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The material placed on record fully establishes that the assessment of the petitioner's work and conduct was bad and the adverse remarks for the year 1994-95 were sufficient for the impugned action. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The respondents placed reliance on the deci- sions of Lahore High Court had Oudh High Court in Jagat Singh and others v. District Board Amritsar, AIR 1940 Lahore 18 and Thakur Prasad v.J. Thomkinson, AIR 1927 Oudh 206.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Lahore High Court', 'Oudh High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Jagat Singh and others v. District Board Amritsar, AIR 1940 Lahore 18', 'Thakur Prasad v.J. Thomkinson, AIR 1927 Oudh 206']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Lahore High Court', 'Oudh High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Jagat Singh and others v. District Board Amritsar, AIR 1940 Lahore 18', 'Thakur Prasad v.J. Thomkinson, AIR 1927 Oudh 206']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The respondents placed reliance on the deci- sions of Lahore High Court had Oudh High Court in Jagat Singh and others v. District Board Amritsar, AIR 1940 Lahore 18 and Thakur Prasad v.J. Thomkinson, AIR 1927 Oudh 206. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Lahore High Court', 'Oudh High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Jagat Singh and others v. District Board Amritsar, AIR 1940 Lahore 18', 'Thakur Prasad v.J. Thomkinson, AIR 1927 Oudh 206']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is appropriate to mention that the report of the expert Shri D.B. Gaur, Executive Engineer(Ex. R-1), was disbelieved wherein he has opined that the building had become unfit and unsafe for human habitation, whereas the other report submitted by Shri Hem Chand Goel that the building was safe and fit for human habitation was accepted.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['D.B. Gaur', 'Hem Chand Goel']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['D.B. Gaur', 'Hem Chand Goel']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is appropriate to mention that the report of the expert Shri D.B. Gaur, Executive Engineer(Ex. R-1), was disbelieved wherein he has opined that the building had become unfit and unsafe for human habitation, whereas the other report submitted by Shri Hem Chand Goel that the building was safe and fit for human habitation was accepted. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['D.B. Gaur', 'Hem Chand Goel']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The accused was prosecuted for contravention of the provisions of the Iron and Steel (Scrap Control) Order, 1943, by selling or causing to be sold scrap iron to different customers at a rate higher than that was authorised by notification.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Iron and Steel (Scrap Control) Order, 1943']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Iron and Steel (Scrap Control) Order, 1943']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The accused was prosecuted for contravention of the provisions of the Iron and Steel (Scrap Control) Order, 1943, by selling or causing to be sold scrap iron to different customers at a rate higher than that was authorised by notification. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Iron and Steel (Scrap Control) Order, 1943']"", ""WITNESS"": ""[]""} </s>"
"Secondly, a provision like Section 13 contained in the Bombay Act was not necessary in the Bal Adhiniyam of our State on account of the fact that by virtue of Sub-section (2) of Section 6 of the Bal Adhiniyam the Magistrate First Class for the area was deemed to be the Juvenile Court till constitution of a Juvenile Court for the area.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 13', 'Sub-section (2) of Section 6']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Bombay Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 13', 'Sub-section (2) of Section 6']"", 'RESPONDENT': '[]', 'STATUTE': ""['Bombay Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Secondly, a provision like Section 13 contained in the Bombay Act was not necessary in the Bal Adhiniyam of our State on account of the fact that by virtue of Sub-section (2) of Section 6 of the Bal Adhiniyam the Magistrate First Class for the area was deemed to be the Juvenile Court till constitution of a Juvenile Court for the area. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 13', 'Sub-section (2) of Section 6']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Bombay Act']"", ""WITNESS"": ""[]""} </s>"
"Amongst the accused/appellant Khokan Konar filed two appeals, namely, Crl. Appeal No. 227/99, 267/99 and accused/appellant Debasis Khan also filed two appeals, namely, Crl. Appeal Nos. 228/99, 258/99.","{""CASE_NUMBER"": ""['Crl. Appeal No. 227/99, 267/99', 'Crl. Appeal Nos. 228/99, 258/99']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Khokan Konar', 'Debasis Khan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Crl. Appeal No. 227/99, 267/99', 'Crl. Appeal Nos. 228/99, 258/99']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Khokan Konar', 'Debasis Khan']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Amongst the accused/appellant Khokan Konar filed two appeals, namely, Crl. Appeal No. 227/99, 267/99 and accused/appellant Debasis Khan also filed two appeals, namely, Crl. Appeal Nos. 228/99, 258/99. [/INST]
 {""CASE_NUMBER"": ""['Crl. Appeal No. 227/99, 267/99', 'Crl. Appeal Nos. 228/99, 258/99']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Khokan Konar', 'Debasis Khan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (civil) 812 of 2004 Petitioner: Naveen Kohli Respondent: Neelu Kohli Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Naveen Kohli']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Neelu Kohli']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Naveen Kohli']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Neelu Kohli']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 812 of 2004 Petitioner: Naveen Kohli Respondent: Neelu Kohli Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Naveen Kohli']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Neelu Kohli']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"That brings us to the actual order passed by the second respondent on March 8th, 1961, the second respondent has stated that he does not grant the permission as the user of a loudspeaker would cause an obstruction to the traffic.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['March 8th, 1961']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['March 8th, 1961']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: That brings us to the actual order passed by the second respondent on March 8th, 1961, the second respondent has stated that he does not grant the permission as the user of a loudspeaker would cause an obstruction to the traffic. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['March 8th, 1961']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Accordingly, the criminal petition is allowed and the proceedings against the petitioners in CC No.1233/2010 on the file of IV Additional Chief Metropolitan Magistrate, City Criminal Courts at Nampally, Hyderabad are hereby quashed. ______________________ C.PRAVEEN KUMAR,J Dt. 5-06-2013","{""CASE_NUMBER"": ""['CC No.1233/2010']"", ""COURT"": ""['Additional Chief Metropolitan Magistrate, City Criminal Courts at Nampally, Hyderabad']"", ""DATE"": ""['5-06-2013']"", ""GPE"": ""[]"", ""JUDGE"": ""['C.PRAVEEN KUMAR']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['CC No.1233/2010']"", 'COURT': ""['Additional Chief Metropolitan Magistrate, City Criminal Courts at Nampally, Hyderabad']"", 'DATE': ""['5-06-2013']"", 'GPE': '[]', 'JUDGE': ""['C.PRAVEEN KUMAR']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Accordingly, the criminal petition is allowed and the proceedings against the petitioners in CC No.1233/2010 on the file of IV Additional Chief Metropolitan Magistrate, City Criminal Courts at Nampally, Hyderabad are hereby quashed. ______________________ C.PRAVEEN KUMAR,J Dt. 5-06-2013 [/INST]
 {""CASE_NUMBER"": ""['CC No.1233/2010']"", ""COURT"": ""['Additional Chief Metropolitan Magistrate, City Criminal Courts at Nampally, Hyderabad']"", ""DATE"": ""['5-06-2013']"", ""GPE"": ""[]"", ""JUDGE"": ""['C.PRAVEEN KUMAR']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
[352F] JUDGMENT: CIVIL APPELLATE JURISDICTION: Civil Appeal No. 2422 of 1989.,"{""CASE_NUMBER"": ""['Civil Appeal No. 2422 of 1989']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Civil Appeal No. 2422 of 1989']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: [352F] JUDGMENT: CIVIL APPELLATE JURISDICTION: Civil Appeal No. 2422 of 1989. [/INST]
 {""CASE_NUMBER"": ""['Civil Appeal No. 2422 of 1989']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"So, he contended that the impugned judgment of conviction dated 01.06.2005 and order of sentence dated 03.06.2005, may be upheld and affirmed, as these do not suffer from any illegality or impropriety.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['01.06.2005', '03.06.2005']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['01.06.2005', '03.06.2005']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: So, he contended that the impugned judgment of conviction dated 01.06.2005 and order of sentence dated 03.06.2005, may be upheld and affirmed, as these do not suffer from any illegality or impropriety. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['01.06.2005', '03.06.2005']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The lower appellate Judge seems to have completely ignored the question of nullity and in fact he does not seem to have considered that aspect at all.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The lower appellate Judge seems to have completely ignored the question of nullity and in fact he does not seem to have considered that aspect at all. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"He deposed that on 28.2.2006, Delhi Police came at the said place and he was removed from the said pit at about 3.30 or 4 PM and at that time his hands and legs were tied.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['28.2.2006']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Delhi Police']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['28.2.2006']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Delhi Police']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He deposed that on 28.2.2006, Delhi Police came at the said place and he was removed from the said pit at about 3.30 or 4 PM and at that time his hands and legs were tied. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['28.2.2006']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Delhi Police']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In support of this contention, the respondents' counsel relied upon the observation of Dutta, J in Rebati Ranjan Chakravarti Vs. Suranjan Chakravarti (supra).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Dutta, J in Rebati Ranjan Chakravarti Vs. Suranjan Chakravarti']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Dutta, J in Rebati Ranjan Chakravarti Vs. Suranjan Chakravarti']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In support of this contention, the respondents' counsel relied upon the observation of Dutta, J in Rebati Ranjan Chakravarti Vs. Suranjan Chakravarti (supra). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Dutta, J in Rebati Ranjan Chakravarti Vs. Suranjan Chakravarti']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
AND S.B.Civil Writ Petition No.6661/2012 Manoj Kumar & Yadav &,"{""CASE_NUMBER"": ""['S.B.Civil Writ Petition No.6661/2012']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Manoj Kumar']"", ""PETITIONER"": ""['Yadav']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['S.B.Civil Writ Petition No.6661/2012']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Manoj Kumar']"", 'PETITIONER': ""['Yadav']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: AND S.B.Civil Writ Petition No.6661/2012 Manoj Kumar & Yadav & [/INST]
 {""CASE_NUMBER"": ""['S.B.Civil Writ Petition No.6661/2012']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Manoj Kumar']"", ""PETITIONER"": ""['Yadav']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"However, contrary to her above depositions made in her examination­in­chief regarding meeting the Investigating Officers Mr. Girish CC No. 146/15, CBI Vs. Gopal Krishan 48/90 Bhardwaj (PW11) and Mr. Rajesh Chahal on 10.05.2010, she has stated in her cross­examination dated 04.06.2014 that she had only met the SP of CBI in the CBI office on 10.05.2010.","{""CASE_NUMBER"": ""['CC No. 146/15']"", ""COURT"": ""[]"", ""DATE"": ""['10.05.2010', '04.06.2014']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['CBI']"", ""OTHER_PERSON"": ""['Girish', 'Rajesh Chahal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['CBI Vs. Gopal Krishan 48/90 Bhardwaj']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['CC No. 146/15']"", 'COURT': '[]', 'DATE': ""['10.05.2010', '04.06.2014']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['CBI']"", 'OTHER_PERSON': ""['Girish', 'Rajesh Chahal']"", 'PETITIONER': '[]', 'PRECEDENT': ""['CBI Vs. Gopal Krishan 48/90 Bhardwaj']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: However, contrary to her above depositions made in her examination­in­chief regarding meeting the Investigating Officers Mr. Girish CC No. 146/15, CBI Vs. Gopal Krishan 48/90 Bhardwaj (PW11) and Mr. Rajesh Chahal on 10.05.2010, she has stated in her cross­examination dated 04.06.2014 that she had only met the SP of CBI in the CBI office on 10.05.2010. [/INST]
 {""CASE_NUMBER"": ""['CC No. 146/15']"", ""COURT"": ""[]"", ""DATE"": ""['10.05.2010', '04.06.2014']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['CBI']"", ""OTHER_PERSON"": ""['Girish', 'Rajesh Chahal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['CBI Vs. Gopal Krishan 48/90 Bhardwaj']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Upon a close reading of the judgments in Dhingra's case, AIR 1958 SC 36 and Moti Ram's case, AIR 1964 SC 600 I have arrived at the definite conclusion that the view taken by the Supreme Court, vide majority judgments in both the cases, is that Article 311(2) would not be applicable to termination of service on the abolition of the post itself.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dhingra', 'Moti Ram']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['AIR 1958 SC 36', 'AIR 1964 SC 600']"", ""PROVISION"": ""['Article 311(2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Dhingra', 'Moti Ram']"", 'PETITIONER': '[]', 'PRECEDENT': ""['AIR 1958 SC 36', 'AIR 1964 SC 600']"", 'PROVISION': ""['Article 311(2)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Upon a close reading of the judgments in Dhingra's case, AIR 1958 SC 36 and Moti Ram's case, AIR 1964 SC 600 I have arrived at the definite conclusion that the view taken by the Supreme Court, vide majority judgments in both the cases, is that Article 311(2) would not be applicable to termination of service on the abolition of the post itself. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dhingra', 'Moti Ram']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['AIR 1958 SC 36', 'AIR 1964 SC 600']"", ""PROVISION"": ""['Article 311(2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The accused informed that he will get back in 5 minutes.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The accused informed that he will get back in 5 minutes. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Therefore, even while not making the provisions of the Transfer of Property Act applicable to such a gift towards Pasupukunkuma, the law appears to be that even where there is a registered deed by a donor, there cannot be any proof of acceptance by the donee and the acceptance must be proved as a independent fact (Item 358 at pages 476 and 477 of Mulla's Hindu Law 15th Edn.).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mulla']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Transfer of Property Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Mulla']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Transfer of Property Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore, even while not making the provisions of the Transfer of Property Act applicable to such a gift towards Pasupukunkuma, the law appears to be that even where there is a registered deed by a donor, there cannot be any proof of acceptance by the donee and the acceptance must be proved as a independent fact (Item 358 at pages 476 and 477 of Mulla's Hindu Law 15th Edn.). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mulla']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Transfer of Property Act']"", ""WITNESS"": ""[]""} </s>"
"High Court Of Madhya Pradesh, Jabalpur Criminal Appeal No.1220/2005 Babu Lal Singh & another Vs. State of Madhya Pradesh Criminal Appeal No.1227/2005 Laxan Dhari Singh & another Vs. State of Madhya Pradesh For the appellants : Shri S.P.Mishra, Advocate. For the State : Shri S.K.Kashyap, Govt. Advocate. Present : Hon'Ble Mr. Justice Ajit Singh Hon'Ble Mr.Justice N.K.Gupta, Jj. J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh, Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ajit Singh', 'N.K.Gupta']"", ""LAWYER"": ""['S.P.Mishra', 'S.K.Kashyap']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Babu Lal Singh', 'Laxan Dhari Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Madhya Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Madhya Pradesh, Jabalpur']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ajit Singh', 'N.K.Gupta']"", 'LAWYER': ""['S.P.Mishra', 'S.K.Kashyap']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Babu Lal Singh', 'Laxan Dhari Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Madhya Pradesh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: High Court Of Madhya Pradesh, Jabalpur Criminal Appeal No.1220/2005 Babu Lal Singh & another Vs. State of Madhya Pradesh Criminal Appeal No.1227/2005 Laxan Dhari Singh & another Vs. State of Madhya Pradesh For the appellants : Shri S.P.Mishra, Advocate. For the State : Shri S.K.Kashyap, Govt. Advocate. Present : Hon'Ble Mr. Justice Ajit Singh Hon'Ble Mr.Justice N.K.Gupta, Jj. J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh, Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ajit Singh', 'N.K.Gupta']"", ""LAWYER"": ""['S.P.Mishra', 'S.K.Kashyap']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Babu Lal Singh', 'Laxan Dhari Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Madhya Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"they would be interrogated at length by the police, and when the interrogation cannot be completed within twenty Jour hours of arrest, the police will file cm application hejbre the Court for remand to police custody.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: they would be interrogated at length by the police, and when the interrogation cannot be completed within twenty Jour hours of arrest, the police will file cm application hejbre the Court for remand to police custody. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The High Court has rightly disbelieved Balak Ram (PW.5) on the basis of material contradictions in his deposition.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Balak Ram']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Balak Ram']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The High Court has rightly disbelieved Balak Ram (PW.5) on the basis of material contradictions in his deposition. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Balak Ram']""} </s>"
"It may be mentioned that the Gujarat High Court in the case of Vijay Textile Mills v. Union of India rendered its decision on 24th January, 1979 on this aspect of the matter.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Gujarat High Court']"", ""DATE"": ""['24th January, 1979']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Vijay Textile Mills v. Union of India']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Gujarat High Court']"", 'DATE': ""['24th January, 1979']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Vijay Textile Mills v. Union of India']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It may be mentioned that the Gujarat High Court in the case of Vijay Textile Mills v. Union of India rendered its decision on 24th January, 1979 on this aspect of the matter. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Gujarat High Court']"", ""DATE"": ""['24th January, 1979']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Vijay Textile Mills v. Union of India']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In exercise of the powers conferred under the Act, the State of Maharashtra framed Rules known as the Maharashtra Motor Vehicles Rules, 1989 (hereinafter referred to as ""the Rules"").","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['State of Maharashtra']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Maharashtra Motor Vehicles Rules, 1989']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['State of Maharashtra']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Maharashtra Motor Vehicles Rules, 1989']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In exercise of the powers conferred under the Act, the State of Maharashtra framed Rules known as the Maharashtra Motor Vehicles Rules, 1989 (hereinafter referred to as ""the Rules""). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['State of Maharashtra']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Maharashtra Motor Vehicles Rules, 1989']"", ""WITNESS"": ""[]""} </s>"
"We may, with advantage, consider at this juncture, the essential distinction between an: order passed under Section 145(6) and one passed under Section 146 of the Code of Criminal Procedure.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 145(6)', 'Section 146']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 145(6)', 'Section 146']"", 'RESPONDENT': '[]', 'STATUTE': ""['Code of Criminal Procedure']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We may, with advantage, consider at this juncture, the essential distinction between an: order passed under Section 145(6) and one passed under Section 146 of the Code of Criminal Procedure. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 145(6)', 'Section 146']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure']"", ""WITNESS"": ""[]""} </s>"
"(N.K.Gupta) Vacation Judge AKM M.Cr.C. No.7928/2014 09/06/2014 Shri R.B. Singh, Advocate for the applicant.","{""CASE_NUMBER"": ""['AKM M.Cr.C. No.7928/2014']"", ""COURT"": ""[]"", ""DATE"": ""['09/06/2014']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['N.K.Gupta', 'R.B. Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['AKM M.Cr.C. No.7928/2014']"", 'COURT': '[]', 'DATE': ""['09/06/2014']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['N.K.Gupta', 'R.B. Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (N.K.Gupta) Vacation Judge AKM M.Cr.C. No.7928/2014 09/06/2014 Shri R.B. Singh, Advocate for the applicant. [/INST]
 {""CASE_NUMBER"": ""['AKM M.Cr.C. No.7928/2014']"", ""COURT"": ""[]"", ""DATE"": ""['09/06/2014']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['N.K.Gupta', 'R.B. Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He has also contended that the petitioner has no locus standi to file the present petition as a public interest litigation.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He has also contended that the petitioner has no locus standi to file the present petition as a public interest litigation. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of I Addl.City Civil & Sessions Judge, Bangalore City. (Cch.No.2) Dated, this the 31st day of July 2015. Present Sri.Ravi M. Naik,B.Com,LL.M., I Addl.City Civil & Sessions Judge, Bangalore. O.S.No.7738/2007 & 7739/2007 Common Plaintiff M.R.Narayan, S/o late Mr.M.N.Rajagopalan, in Os 7738/2007 & aged about 57years,r/a no.768, 34th cross, 7739/2007 9th main, Jayanagar 4th block, Bangalore -11. (party in person) - V E R S U S - Defendant in Os Madhusudhan S/o N.Mukundarao, major, old 7738/2007 r/a Old no.4, new no.89, first floor, 9th main, Jayanagar, 4th block, Bangalore - 11. And also at: No.14, 10th main, 26th cross, Bsk Ii stage, Bangalore - 560 070. (By Sri.S.M.Rizvi - Advocate) Vs Defendant in Os N.Mukundarao, s/o Narayana rao, aged about 7739/2007 80years, r/a Old no.4, new no.89, ground floor, 9th main, Jayanagar, 4th block, Bangalore - 11. And also at: No.14, 10th main, 26th cross, Bsk Ii stage, Bangalore - 560 070. (By Sri.S.M.Rizvi - Advocate) Date of institution of the suit : (1) 29.9.2007 (2) 29.9.2007 Nature of the suit (suit on Suit for ejectment pronote, suit for declaration and Suit for ejectment 2 O.S.No.7738/2007 & Os 7739/2007 possession suit for injunction,etc) : Date of the commencement of (1) 2.8.2010 (2) 2.8.2010 recording of the evidence : Date on which the Judgment was 31.7.2015 pronounced : Total duration Year/s Month/s Day/s 07 10 02 07 10 02 (Ravi M. Naik) I Addl.City Civil & Sessions Judge, Bangalore. Common Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['I Addl.City Civil & Sessions Judge, Bangalore City', 'I Addl.City Civil & Sessions Judge, Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ravi M. Naik']"", ""LAWYER"": ""['S.M.Rizvi']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M.R.Narayan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Madhusudhan', 'N.Mukundarao']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['I Addl.City Civil & Sessions Judge, Bangalore City', 'I Addl.City Civil & Sessions Judge, Bangalore']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ravi M. Naik']"", 'LAWYER': ""['S.M.Rizvi']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['M.R.Narayan']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Madhusudhan', 'N.Mukundarao']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of I Addl.City Civil & Sessions Judge, Bangalore City. (Cch.No.2) Dated, this the 31st day of July 2015. Present Sri.Ravi M. Naik,B.Com,LL.M., I Addl.City Civil & Sessions Judge, Bangalore. O.S.No.7738/2007 & 7739/2007 Common Plaintiff M.R.Narayan, S/o late Mr.M.N.Rajagopalan, in Os 7738/2007 & aged about 57years,r/a no.768, 34th cross, 7739/2007 9th main, Jayanagar 4th block, Bangalore -11. (party in person) - V E R S U S - Defendant in Os Madhusudhan S/o N.Mukundarao, major, old 7738/2007 r/a Old no.4, new no.89, first floor, 9th main, Jayanagar, 4th block, Bangalore - 11. And also at: No.14, 10th main, 26th cross, Bsk Ii stage, Bangalore - 560 070. (By Sri.S.M.Rizvi - Advocate) Vs Defendant in Os N.Mukundarao, s/o Narayana rao, aged about 7739/2007 80years, r/a Old no.4, new no.89, ground floor, 9th main, Jayanagar, 4th block, Bangalore - 11. And also at: No.14, 10th main, 26th cross, Bsk Ii stage, Bangalore - 560 070. (By Sri.S.M.Rizvi - Advocate) Date of institution of the suit : (1) 29.9.2007 (2) 29.9.2007 Nature of the suit (suit on Suit for ejectment pronote, suit for declaration and Suit for ejectment 2 O.S.No.7738/2007 & Os 7739/2007 possession suit for injunction,etc) : Date of the commencement of (1) 2.8.2010 (2) 2.8.2010 recording of the evidence : Date on which the Judgment was 31.7.2015 pronounced : Total duration Year/s Month/s Day/s 07 10 02 07 10 02 (Ravi M. Naik) I Addl.City Civil & Sessions Judge, Bangalore. Common Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['I Addl.City Civil & Sessions Judge, Bangalore City', 'I Addl.City Civil & Sessions Judge, Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ravi M. Naik']"", ""LAWYER"": ""['S.M.Rizvi']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M.R.Narayan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Madhusudhan', 'N.Mukundarao']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The law on the question of consideration of charge is well settled.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The law on the question of consideration of charge is well settled. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"For facility of reference, we may mention that against the judgment of the Special Court in CC No, 1-8/87, 35 appeals were filed in the High Court by 43 appellants therein.","{""CASE_NUMBER"": ""['CC No, 1-8/87']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['CC No, 1-8/87']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: For facility of reference, we may mention that against the judgment of the Special Court in CC No, 1-8/87, 35 appeals were filed in the High Court by 43 appellants therein. [/INST]
 {""CASE_NUMBER"": ""['CC No, 1-8/87']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The language of Section 73 does not permit a Court to give a direction to the accused to give specimen writings for anticipated necessity for comparison in a proceeding which may later be instituted in the Court.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 73']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 73']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The language of Section 73 does not permit a Court to give a direction to the accused to give specimen writings for anticipated necessity for comparison in a proceeding which may later be instituted in the Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 73']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"But, so long as the approval lasts, the assessing officer is bound and cannot challenge the correctness of the approval or take up the position that the contract itself falls outside the purview of the section.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But, so long as the approval lasts, the assessing officer is bound and cannot challenge the correctness of the approval or take up the position that the contract itself falls outside the purview of the section. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Thus it is clear that the respondent No.1 had stated before the IO that at the time of the accident the vehicle was being driven by one Abhay Singh who had expired on 11.12.2005 whereas before the Tribunal in the written statement he had stated about the vehicle being taken by the respondent No. 2.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['11.12.2005']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Abhay Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['11.12.2005']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Abhay Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Thus it is clear that the respondent No.1 had stated before the IO that at the time of the accident the vehicle was being driven by one Abhay Singh who had expired on 11.12.2005 whereas before the Tribunal in the written statement he had stated about the vehicle being taken by the respondent No. 2. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['11.12.2005']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Abhay Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"By a judgment delivered on 19th February, 1981, we referred to the relevant decisions of the Supreme Court, some of which again were referred to us, we also referred to the meaning of expenditure as understood in accordance with the accountancy principle and we further held that, really, depreciation was the money expended which was spread over the effctive life of an asset.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""['19th February, 1981']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': ""['19th February, 1981']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: By a judgment delivered on 19th February, 1981, we referred to the relevant decisions of the Supreme Court, some of which again were referred to us, we also referred to the meaning of expenditure as understood in accordance with the accountancy principle and we further held that, really, depreciation was the money expended which was spread over the effctive life of an asset. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""['19th February, 1981']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The case of the applicant appears to be similar. Let the applicant Iqbal Hussain Khan involved in crime No. 355 of 1989 under Section 302, I.P.C., P.S. Ganj, Rampur be released on bail provided he furnishes a personal bond and sureties to the satisfaction of C.J.M., Rampur.""","{""CASE_NUMBER"": ""['crime No. 355 of 1989']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Rampur']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['P.S. Ganj, Rampur']"", ""OTHER_PERSON"": ""['Iqbal Hussain Khan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 302']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['crime No. 355 of 1989']"", 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Rampur']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['P.S. Ganj, Rampur']"", 'OTHER_PERSON': ""['Iqbal Hussain Khan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 302']"", 'RESPONDENT': '[]', 'STATUTE': ""['I.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The case of the applicant appears to be similar. Let the applicant Iqbal Hussain Khan involved in crime No. 355 of 1989 under Section 302, I.P.C., P.S. Ganj, Rampur be released on bail provided he furnishes a personal bond and sureties to the satisfaction of C.J.M., Rampur."" [/INST]
 {""CASE_NUMBER"": ""['crime No. 355 of 1989']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Rampur']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['P.S. Ganj, Rampur']"", ""OTHER_PERSON"": ""['Iqbal Hussain Khan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 302']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.P.C.']"", ""WITNESS"": ""[]""} </s>"
"As per this letter Ex.49, original of statement in connection with C.R.No.126/95 of Chotila Police Station recorded by Mamlatdar was not available in the office of Mamlatdar and, therefore, that original of statement Ex.46 is not produced in the case, as it was missing on the date on which P.W.15 Dhirajlal, Executive Magistrate gave his evidence.","{""CASE_NUMBER"": ""['C.R.No.126/95']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Chotila Police Station']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Dhirajlal']""}","{'CASE_NUMBER': ""['C.R.No.126/95']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Chotila Police Station']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Dhirajlal']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As per this letter Ex.49, original of statement in connection with C.R.No.126/95 of Chotila Police Station recorded by Mamlatdar was not available in the office of Mamlatdar and, therefore, that original of statement Ex.46 is not produced in the case, as it was missing on the date on which P.W.15 Dhirajlal, Executive Magistrate gave his evidence. [/INST]
 {""CASE_NUMBER"": ""['C.R.No.126/95']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Chotila Police Station']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Dhirajlal']""} </s>"
"PW21 has further deposed that he alongwith IO reached at South­West, Special Staff office, Dhaula Kuan, where accused Aman Bhardwaj @ Bobby, Kapil Sharma and Mohd. Tayyab were arrested by the special Staff on 25/07/2003 vide DD No. 12A U/s. 41.1 Cr.P.C.","{""CASE_NUMBER"": ""['DD No. 12A']"", ""COURT"": ""[]"", ""DATE"": ""['25/07/2003']"", ""GPE"": ""['South\\xadWest', 'Dhaula Kuan']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Aman Bhardwaj @ Bobby', 'Kapil Sharma', 'Mohd. Tayyab']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 41.1']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['DD No. 12A']"", 'COURT': '[]', 'DATE': ""['25/07/2003']"", 'GPE': ""['South\\xadWest', 'Dhaula Kuan']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Aman Bhardwaj @ Bobby', 'Kapil Sharma', 'Mohd. Tayyab']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['s. 41.1']"", 'RESPONDENT': '[]', 'STATUTE': ""['Cr.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: PW21 has further deposed that he alongwith IO reached at South­West, Special Staff office, Dhaula Kuan, where accused Aman Bhardwaj @ Bobby, Kapil Sharma and Mohd. Tayyab were arrested by the special Staff on 25/07/2003 vide DD No. 12A U/s. 41.1 Cr.P.C. [/INST]
 {""CASE_NUMBER"": ""['DD No. 12A']"", ""COURT"": ""[]"", ""DATE"": ""['25/07/2003']"", ""GPE"": ""['South\\xadWest', 'Dhaula Kuan']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Aman Bhardwaj @ Bobby', 'Kapil Sharma', 'Mohd. Tayyab']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 41.1']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr.P.C.']"", ""WITNESS"": ""[]""} </s>"
"On the other hand, learned Additional Advocate General for the State of Punjab contended that unfortunately PW12 injured witness Vikram Singh has not supported the prosecution case but the circumstantial evidence available on record against the appellant is sufficient to establish the charges against him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['State of Punjab']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Vikram Singh']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['State of Punjab']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Vikram Singh']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On the other hand, learned Additional Advocate General for the State of Punjab contended that unfortunately PW12 injured witness Vikram Singh has not supported the prosecution case but the circumstantial evidence available on record against the appellant is sufficient to establish the charges against him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['State of Punjab']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Vikram Singh']""} </s>"
This witness has deposed that the respondent was conducting business of M/s Amigo Industries and was looking after affairs of M/s Amigo Industries and was also interacting with customers and clients.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Amigo Industries']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Amigo Industries']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This witness has deposed that the respondent was conducting business of M/s Amigo Industries and was looking after affairs of M/s Amigo Industries and was also interacting with customers and clients. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Amigo Industries']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The appellant Sukhbasi is a native of Behta, eight miles from the police station.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Behta']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Sukhbasi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Behta']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Sukhbasi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The appellant Sukhbasi is a native of Behta, eight miles from the police station. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Behta']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Sukhbasi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Thereafter, a further sanction was sought for the construction of another 3 floors as, according to the Company construction up to 7 floors was permissible as per the existing rules of the Municipal Corporation.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Thereafter, a further sanction was sought for the construction of another 3 floors as, according to the Company construction up to 7 floors was permissible as per the existing rules of the Municipal Corporation. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
This amount had been demanded for installation of new transformer as old transformer was overloaded and his tubewell meter was not functioning properly.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This amount had been demanded for installation of new transformer as old transformer was overloaded and his tubewell meter was not functioning properly. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Subject to the provisions of this Act, the rules set out in the Schedule (hereinafter referred to as ""the Rules"") shall have effect in relation to and in connection with the carriage of goods by sea in ships carrying goods from any port in India to any other port whether in or outside India.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Subject to the provisions of this Act, the rules set out in the Schedule (hereinafter referred to as ""the Rules"") shall have effect in relation to and in connection with the carriage of goods by sea in ships carrying goods from any port in India to any other port whether in or outside India."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The provisions of section 20-A were challenged.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 20-A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 20-A']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The provisions of section 20-A were challenged. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 20-A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It must involve the consideration of the question as to when it was known to the party concerned either actually or constructively.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It must involve the consideration of the question as to when it was known to the party concerned either actually or constructively. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"According to Sri Haranahalli, the complaint as against respondent/accused No. 2 was definitely maintainable and could be proceeded with against him in view of no bar thereto under section 446 of the Companies Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Haranahalli']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 446']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Companies Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Haranahalli']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 446']"", 'RESPONDENT': '[]', 'STATUTE': ""['Companies Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: According to Sri Haranahalli, the complaint as against respondent/accused No. 2 was definitely maintainable and could be proceeded with against him in view of no bar thereto under section 446 of the Companies Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Haranahalli']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 446']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Companies Act']"", ""WITNESS"": ""[]""} </s>"
(See E.K. Chandrasenan v. State of Kerala6.),"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['E.K. Chandrasenan v. State of Kerala6']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['E.K. Chandrasenan v. State of Kerala6']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (See E.K. Chandrasenan v. State of Kerala6.) [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['E.K. Chandrasenan v. State of Kerala6']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It will not be inappropriate to refer to a portion of the judgment in W.P.(C) 29278 of 2006 which was disposed of by judgment dated 13.4.2007.,"{""CASE_NUMBER"": ""['W.P.(C) 29278 of 2006']"", ""COURT"": ""[]"", ""DATE"": ""['13.4.2007']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['W.P.(C) 29278 of 2006']"", 'COURT': '[]', 'DATE': ""['13.4.2007']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It will not be inappropriate to refer to a portion of the judgment in W.P.(C) 29278 of 2006 which was disposed of by judgment dated 13.4.2007. [/INST]
 {""CASE_NUMBER"": ""['W.P.(C) 29278 of 2006']"", ""COURT"": ""[]"", ""DATE"": ""['13.4.2007']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We observe that the questions of law as framed are not happily worded in the context of the order of the Income-tax Appellate Tribunal which we have extracted elsewhere in this judgment.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Income-tax Appellate Tribunal']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Income-tax Appellate Tribunal']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We observe that the questions of law as framed are not happily worded in the context of the order of the Income-tax Appellate Tribunal which we have extracted elsewhere in this judgment. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Income-tax Appellate Tribunal']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Rummaging through the evidence of PW3 Meherunessa in juxtaposition to the evidence of PW1, Suraiya Bibi fully establishes the case of the prosecution that Meherunessa (PW3), a minor girl under age of 18 years was taken from one place to another with the sole intention that she would be forced or seduced to illicit intercourse with another person.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Meherunessa', 'Suraiya Bibi']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Meherunessa', 'Suraiya Bibi']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Rummaging through the evidence of PW3 Meherunessa in juxtaposition to the evidence of PW1, Suraiya Bibi fully establishes the case of the prosecution that Meherunessa (PW3), a minor girl under age of 18 years was taken from one place to another with the sole intention that she would be forced or seduced to illicit intercourse with another person. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Meherunessa', 'Suraiya Bibi']""} </s>"
"Learned Public Prosecutor relies on paragraph-11 of Bhaskar Industries case, which is to the following effect:- ""At any rate, the objection regarding maintainability of the revision petition have been raised before the Court which invoked such a revisional jurisdiction.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Bhaskar Industries']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Bhaskar Industries']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Learned Public Prosecutor relies on paragraph-11 of Bhaskar Industries case, which is to the following effect:- ""At any rate, the objection regarding maintainability of the revision petition have been raised before the Court which invoked such a revisional jurisdiction. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Bhaskar Industries']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Petitioner: S. C. Prashar, Income-Tax Officer,Market Ward, Bombay And An Vs. Respondent: Vasantsen Dwarkadas And Others Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['S. C. Prashar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Vasantsen Dwarkadas']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['S. C. Prashar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Vasantsen Dwarkadas']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: S. C. Prashar, Income-Tax Officer,Market Ward, Bombay And An Vs. Respondent: Vasantsen Dwarkadas And Others Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['S. C. Prashar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Vasantsen Dwarkadas']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Ravani, J. 1. Can the Industrial Court reappreciate and reweigh the evidence in exercise of its revisional power under Section 85 of the Bombay Industrial Relations Act, 1946 ?","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ravani']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 85']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Bombay Industrial Relations Act, 1946']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ravani']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 85']"", 'RESPONDENT': '[]', 'STATUTE': ""['Bombay Industrial Relations Act, 1946']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Ravani, J. 1. Can the Industrial Court reappreciate and reweigh the evidence in exercise of its revisional power under Section 85 of the Bombay Industrial Relations Act, 1946 ? [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ravani']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 85']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Bombay Industrial Relations Act, 1946']"", ""WITNESS"": ""[]""} </s>"
"Thus the wide sweep of Art. 14 undoubtedly takes within its fold the impugned circular issued by the State of U.P. in exercise of its executive power, irrespective of the precise nature of appointment of the Government Counsel in the districts and the other rights, contractual or statutory, which the appointees may have."" 55.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['State of U.P.']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Art. 14']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['State of U.P.']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Art. 14']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Thus the wide sweep of Art. 14 undoubtedly takes within its fold the impugned circular issued by the State of U.P. in exercise of its executive power, irrespective of the precise nature of appointment of the Government Counsel in the districts and the other rights, contractual or statutory, which the appointees may have."" 55. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['State of U.P.']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Art. 14']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Though the Division Bench held that the insurer would be covered by the term 'person aggrieved' within the meaning of Section 110-D (1) of the old Act, yet it had taken the view that it was not open to the insurer to challenge the quantum of compensation in appeal in Gulab Chandra 1985 ACJ 245 (Allahabad). 15.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Gulab Chandra 1985 ACJ 245 (Allahabad)']"", ""PROVISION"": ""['Section 110-D (1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Gulab Chandra 1985 ACJ 245 (Allahabad)']"", 'PROVISION': ""['Section 110-D (1)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Though the Division Bench held that the insurer would be covered by the term 'person aggrieved' within the meaning of Section 110-D (1) of the old Act, yet it had taken the view that it was not open to the insurer to challenge the quantum of compensation in appeal in Gulab Chandra 1985 ACJ 245 (Allahabad). 15. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Gulab Chandra 1985 ACJ 245 (Allahabad)']"", ""PROVISION"": ""['Section 110-D (1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The consignor was found to be fictitious and the contents of the consignment is alleged to be 6 kgs.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The consignor was found to be fictitious and the contents of the consignment is alleged to be 6 kgs. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The plea in the written statement is one of the denial of conduct alleged, and not of provocation.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The plea in the written statement is one of the denial of conduct alleged, and not of provocation. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of The Ix Addl. Small Causes And Addl. Mact., Bangalore, (Scch-7) Dated this, the 29th day of September, 2015. Present : Smt.Indira Mailswamy Chettiyar, B.Com., Ll.B. (Spl.),L.L.M., Ix Addl. Small Causes Judge & Xxxiv Acmm, Court of Small Causes, Member, Mact-7, Bangalore. M.V.C.No.7875/2012 1. Smt.Ningamma @ Lingamma, ..... Petitioners W/o Late B.H.Gangadharaiah, Aged about 62 years, R/at No.45, 2nd Main Road, Raghava Nagar, New Timber Yard Layout, Bangalore-560026. Her Native Place Address : No.86, Byadagere, Kunigal Taluk, Tumkur District. (By Sri. Venkatesha Naidu. R., Adv.,) V/s .....Respondents 1. District Health Family Welfare Officer (D.H.W.O.), C/o G.V.K. Emergency Management & Research Institute, S.T.D.C. Housing Board Colony, Opp. Govt. Unani Medical College, G.M.S. Compound, Magadi Road, Bangalore-560079. 2. United India Insurance Co. Ltd., Regional Office, M.V.C.No.7875/2012 2 (Scch-7) 6th Floor, Krishi Bhavan, Hudson Circle, Bangalore-560001. (Policy No.241400/31/11/01/00014183 Valid from 16.11.2011 to 15.11.2012) 3. Thammaiah S/o Late Rangaiaha, No.30, 8th Main, 9th Cross, Agrahara Dasarahalli, Magadi Road, Bangalore-79. (Owner of Motor Bike bearing No.KA-02- Ee-1890) (R-1 and R-3 Exparte) (R-2 By Sri. L. Sreekanta Rao, Adv.,) Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Court Of The Ix Addl. Small Causes And Addl. Mact., Bangalore, (Scch-7)']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Indira Mailswamy Chettiyar']"", ""LAWYER"": ""['Venkatesha Naidu. R.', 'L. Sreekanta Rao']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ningamma @ Lingamma']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['District Health Family Welfare Officer', 'United India Insurance Co. Ltd.', 'Thammaiah']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Court Of The Ix Addl. Small Causes And Addl. Mact., Bangalore, (Scch-7)']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Indira Mailswamy Chettiyar']"", 'LAWYER': ""['Venkatesha Naidu. R.', 'L. Sreekanta Rao']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ningamma @ Lingamma']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['District Health Family Welfare Officer', 'United India Insurance Co. Ltd.', 'Thammaiah']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of The Ix Addl. Small Causes And Addl. Mact., Bangalore, (Scch-7) Dated this, the 29th day of September, 2015. Present : Smt.Indira Mailswamy Chettiyar, B.Com., Ll.B. (Spl.),L.L.M., Ix Addl. Small Causes Judge & Xxxiv Acmm, Court of Small Causes, Member, Mact-7, Bangalore. M.V.C.No.7875/2012 1. Smt.Ningamma @ Lingamma, ..... Petitioners W/o Late B.H.Gangadharaiah, Aged about 62 years, R/at No.45, 2nd Main Road, Raghava Nagar, New Timber Yard Layout, Bangalore-560026. Her Native Place Address : No.86, Byadagere, Kunigal Taluk, Tumkur District. (By Sri. Venkatesha Naidu. R., Adv.,) V/s .....Respondents 1. District Health Family Welfare Officer (D.H.W.O.), C/o G.V.K. Emergency Management & Research Institute, S.T.D.C. Housing Board Colony, Opp. Govt. Unani Medical College, G.M.S. Compound, Magadi Road, Bangalore-560079. 2. United India Insurance Co. Ltd., Regional Office, M.V.C.No.7875/2012 2 (Scch-7) 6th Floor, Krishi Bhavan, Hudson Circle, Bangalore-560001. (Policy No.241400/31/11/01/00014183 Valid from 16.11.2011 to 15.11.2012) 3. Thammaiah S/o Late Rangaiaha, No.30, 8th Main, 9th Cross, Agrahara Dasarahalli, Magadi Road, Bangalore-79. (Owner of Motor Bike bearing No.KA-02- Ee-1890) (R-1 and R-3 Exparte) (R-2 By Sri. L. Sreekanta Rao, Adv.,) Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Court Of The Ix Addl. Small Causes And Addl. Mact., Bangalore, (Scch-7)']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Indira Mailswamy Chettiyar']"", ""LAWYER"": ""['Venkatesha Naidu. R.', 'L. Sreekanta Rao']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ningamma @ Lingamma']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['District Health Family Welfare Officer', 'United India Insurance Co. Ltd.', 'Thammaiah']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Particular reliance was placed on Shalimar Paint Colour and Varnish Co. Ltd v. Chief Secy. to Govt. of Travancore Cochin, ILR (1954) Trav-Co 453 : AIR 1955 NUC (Trav-Co) 4125 holding that if the State has not authorised its agent then the State cannot possibly be bound therefor.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Shalimar Paint Colour and Varnish Co. Ltd v. Chief Secy. to Govt. of Travancore Cochin, ILR (1954) Trav-Co 453 : AIR 1955 NUC (Trav-Co) 4125']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Shalimar Paint Colour and Varnish Co. Ltd v. Chief Secy. to Govt. of Travancore Cochin, ILR (1954) Trav-Co 453 : AIR 1955 NUC (Trav-Co) 4125']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Particular reliance was placed on Shalimar Paint Colour and Varnish Co. Ltd v. Chief Secy. to Govt. of Travancore Cochin, ILR (1954) Trav-Co 453 : AIR 1955 NUC (Trav-Co) 4125 holding that if the State has not authorised its agent then the State cannot possibly be bound therefor. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Shalimar Paint Colour and Varnish Co. Ltd v. Chief Secy. to Govt. of Travancore Cochin, ILR (1954) Trav-Co 453 : AIR 1955 NUC (Trav-Co) 4125']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"16. In ARUN KUMAR AGARWAL v. RADHA ARUN 4, a Division Bench of Karnataka High Court observed similarly under similar circumstances as follows: ""Where such adulterer is named in the petition and evidence is let in to show that the spouse had intercourse with such person, the Court will have to record a finding that the spouse had a voluntary sexual intercourse with such named person.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Division Bench of Karnataka High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['ARUN KUMAR AGARWAL v. RADHA ARUN']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Division Bench of Karnataka High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['ARUN KUMAR AGARWAL v. RADHA ARUN']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 16. In ARUN KUMAR AGARWAL v. RADHA ARUN 4, a Division Bench of Karnataka High Court observed similarly under similar circumstances as follows: ""Where such adulterer is named in the petition and evidence is let in to show that the spouse had intercourse with such person, the Court will have to record a finding that the spouse had a voluntary sexual intercourse with such named person. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Division Bench of Karnataka High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['ARUN KUMAR AGARWAL v. RADHA ARUN']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Bill part of Exhibit Item No.73 1250.00 C.T.Scan Examination paid to Bombay Hospital.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Bombay Hospital']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Bombay Hospital']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Bill part of Exhibit Item No.73 1250.00 C.T.Scan Examination paid to Bombay Hospital. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Bombay Hospital']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
PW 6 is HC Ram Sultan who deposed that he was posted as HC at B Shift IGI Airport.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Ram Sultan']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Ram Sultan']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: PW 6 is HC Ram Sultan who deposed that he was posted as HC at B Shift IGI Airport. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Ram Sultan']""} </s>"
"The firm was dissolved and its business was discontinued with effect from February 1, 1948.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['February 1, 1948']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['February 1, 1948']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The firm was dissolved and its business was discontinued with effect from February 1, 1948. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['February 1, 1948']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Committee concluded that three of the tenderers namely M/s H.D.C., Mukand and Bharatiya who had quoted identical rates without any cushion for escalation between 1.7.91 and 1.9.91, have apparently formed a cartel.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['1.7.91', '1.9.91']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['1.7.91', '1.9.91']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Committee concluded that three of the tenderers namely M/s H.D.C., Mukand and Bharatiya who had quoted identical rates without any cushion for escalation between 1.7.91 and 1.9.91, have apparently formed a cartel. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['1.7.91', '1.9.91']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"After importing them, they would fix their own price for those goods and endorse the shipping documents in favour of the second plaintiff, who would be entitled to clear them at the harbour on payment of 80 per cent. of the price, the balance of 20 per cent.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: After importing them, they would fix their own price for those goods and endorse the shipping documents in favour of the second plaintiff, who would be entitled to clear them at the harbour on payment of 80 per cent. of the price, the balance of 20 per cent. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On February 3, 1970 an advertisement was published in the Government Gazette to the effect that the Haryana Public Service Commission will hold an examination for recruitment of candidates for 15 vacancies in the Haryana Civil Service (Judicial Branch).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['February 3, 1970']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Haryana Public Service Commission', 'Haryana Civil Service']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['February 3, 1970']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Haryana Public Service Commission', 'Haryana Civil Service']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On February 3, 1970 an advertisement was published in the Government Gazette to the effect that the Haryana Public Service Commission will hold an examination for recruitment of candidates for 15 vacancies in the Haryana Civil Service (Judicial Branch). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['February 3, 1970']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Haryana Public Service Commission', 'Haryana Civil Service']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
A copy of this order shall be served on the office of the CBI at Gandhinagar and its central office at New Delhi.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Gandhinagar', 'New Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['CBI']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Gandhinagar', 'New Delhi']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['CBI']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A copy of this order shall be served on the office of the CBI at Gandhinagar and its central office at New Delhi. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Gandhinagar', 'New Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['CBI']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Once a document has been admitted, Sections 91 & 92 of the Evidence Act come into play and any oral evidence to prove to the contrary cannot be accepted.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 91 & 92']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Sections 91 & 92']"", 'RESPONDENT': '[]', 'STATUTE': ""['Evidence Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Once a document has been admitted, Sections 91 & 92 of the Evidence Act come into play and any oral evidence to prove to the contrary cannot be accepted. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 91 & 92']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act']"", ""WITNESS"": ""[]""} </s>"
"In this connection Section 173(2) may also be set out: "" 173.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 173(2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 173(2)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this connection Section 173(2) may also be set out: "" 173. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 173(2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Notices be made returnable within two weeks.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Notices be made returnable within two weeks. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The assailants who were outside were shouting for sending Hareshbhai out and had threatened that, otherwise, they would set their house on fire.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Hareshbhai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Hareshbhai']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The assailants who were outside were shouting for sending Hareshbhai out and had threatened that, otherwise, they would set their house on fire. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Hareshbhai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"So far as witnesses are concerned, in para 41 of the judgment, the Apex Court has quoted Bentham who described witnesses as the eyes and ears of justice.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Bentham']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Bentham']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: So far as witnesses are concerned, in para 41 of the judgment, the Apex Court has quoted Bentham who described witnesses as the eyes and ears of justice. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Bentham']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
But this is not the only consideration that should weigh with a court in applying the provisions of the Act to prosecutions thereunder.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But this is not the only consideration that should weigh with a court in applying the provisions of the Act to prosecutions thereunder. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is also an admitted position that all these documents in English referred to in para 11 of the grounds of detention, were supplied to the detenu in Hindi on 19th July, 1989, fortynine days after the grounds of detention were served on him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['19th July, 1989']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['19th July, 1989']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is also an admitted position that all these documents in English referred to in para 11 of the grounds of detention, were supplied to the detenu in Hindi on 19th July, 1989, fortynine days after the grounds of detention were served on him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['19th July, 1989']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
There was a dispute over 'khal' (water course) for irrigating the lands.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: There was a dispute over 'khal' (water course) for irrigating the lands. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In his opinion, septicemia could develop within 24 hours of the occurrence.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In his opinion, septicemia could develop within 24 hours of the occurrence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Honble Sri Justice Dama Seshadri Naidu Writ Petition Nos.6470 of 2006 23-06-2014 Kondamudi Chandrasekhara Rao..... Petitioner State Bank of India, Zonal Office, Vijayawada, rep. By its Assistant General Manager nd others .....Respondents Counsel for the petitioner:Sri Challa Ajay Kumar Counsel for respondents : Sri P.Vishnuvardhan Reddy Dr. Y.Padmavathi <Gist: >Head Note: ?Cases referred: 1. 1987(4) Scc 691 2. Air 1966 Sc 1672 3. 1993(1) Scc 71 4. 2002(3) Llj 209 5. Air 1991 Sc 101 6. Air 1986 Sc 954 7. (1993) 1 Scc 71 8. (1995) 2 Scc 326 9. 1998(7) Scc 66 10. 1997(7) Scc 592 11. 1993(3) Scc 259 12. Air 1995 Sc 922 13. Air 1991 Sc 101 14. 1979 (2) Alt 411 15. 1981 Scc 1253 16. 2004(1) Llj 190 17. 1991(2) Scc 599 18. 1992(2) Scc 29 19. 1995 Supp. (4) Scc 111 20. 2004(1) Llj (Feb) 227 21. 1992(4) Scc 118 22. 2001(1) Llj 596 23. 2003(3) Llj 904 24. 1979(2) Llj 80 25. 1986(2) Llj 624 26. 2002(3) Llj 229 27. Air 1966 Sc 1672 28. 1979(2) Alt 411 29. 2004(1) Llj 190 30. 2009 12 Scc 49 31. 2009 3 Scc 35 32. 2006 (1) Scc 667 33. 2007 (1) Scc 408 34. Air 2007 631. 35. 2008 Air Scw 3996 36. 2007 (1) Scc 575 37. (2008) 5 Scc 241 38. (2007) 11 Scc 92 39. (2008) 12 Scc 275 40. (2000) 6 Scc 359 41. 2007 Air Scw 2265 42. 2007 (5) Scc 326 43. 2008 Air Scw 1383 44. 2008 Air Scw 1594 45. 2009 (3) Slr 241 46. (2008) 10 Scc 1 47. (2007)(11 Scc 92, 48. Air 1930 Pc 57 (1) 49. (2003) 4 Scc 161 50. (2005) 2 Scc 638 51. (2003) 5 Scc 12 52. (2003) 5 Scc 372 53. (2006) 5 Scc 493 54. (2006) 7 Scc 684, 55. Air 2000 Sc 469 56. Air 1992 Sc 789 57. Air 1992 Sc 2070 58. Air 1997 Sc 3091 59. Air 1997 Sc 1628 60. (2013) 14 Scc 65 1987(4) Scc 691 Air 1966 Sc 1672 1993(1) Scc 71 2002(3) Llj 209 Air 1991 Sc 101 Air 1986 Sc 954 (1993) 1 Scc 71 (1995) 2 Scc 326 1998(7) Scc 66 1997(7) Scc 592 1993(3) Scc 259 Air 1995 Sc 922 Air 1991 Sc 101 1979 (2) Alt 411 1981 Scc 1253 2004(1) Llj 190 1991(2) Scc 599 1992(2) Scc 29 1995 Supp. (4) Scc 111 2004(1) Llj (Feb) 227 1992(4) Scc 118 2001(1) Llj 596 2003(3) Llj 904 1979(2) Llj 80 1986(2) Llj 624 2002(3) Llj 229 Air 1966 Sc 1672 1979(2) Alt 411 2004(1) Llj 190 2009 12 Scc 49 2009 3 Scc 35 2006 (1) Scc 667 2007 (1) Scc 408 Air 2007 631. 2008 Air Scw 3996 2007 (1) Scc 575 (2008) 5 Scc 241 (2007) 11 Scc 92 (2008) 12 Scc 275 (2000) 6 Scc 359 2007 Air Scw 2265 2007 (5) Scc 326 2008 Air Scw 1383 2008 Air Scw 1594 2009 (3) Slr 241 (2008) 10 Scc 1 (2007)(11 Scc 92, Air 1930 Pc 57 (1) (2003) 4 Scc 161 (2005) 2 Scc 638 (2003) 5 Scc 12 (2003) 5 Scc 372 (2006) 5 Scc 493 (2006) 7 Scc 684, Air 2000 Sc 469 Air 1992 Sc 789 Air 1992 Sc 2070 Air 1997 Sc 3091 Air 1997 Sc 1628 (2013) 14 Scc 65 Honble Sri Justice Dama Seshadri Naidu Writ Petition Nos.6470 of2006, 9109 of 2007, 7806, 7807, 7808, 12151, 15481, 15486, 15852, 15855, 15868, 15869, 16053, 16470, 17079, 17880, 17881, 17883, 18107, 18108, 18109, 18111, 18324, 18326, 18327, 18328, 20875, 20877, 20878, 20879, 20880, 20883, 20884, 20885, 20887, 20888, 20889, 20890, 20891, 20893, 20894, 20896, 20897, 20898, 20899, 20901, 25785 and 26240 of 2006, 25805, 28502, 28555, 28573, 28578, 28725, 28755, 28897, 28944, 33822, 33823, 33460 and 33835 of 2010 Common Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Dama Seshadri Naidu']"", ""LAWYER"": ""['Challa Ajay Kumar', 'P.Vishnuvardhan Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Kondamudi Chandrasekhara Rao']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Bank of India, Zonal Office, Vijayawada']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Dama Seshadri Naidu']"", 'LAWYER': ""['Challa Ajay Kumar', 'P.Vishnuvardhan Reddy']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Kondamudi Chandrasekhara Rao']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Bank of India, Zonal Office, Vijayawada']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Honble Sri Justice Dama Seshadri Naidu Writ Petition Nos.6470 of 2006 23-06-2014 Kondamudi Chandrasekhara Rao..... Petitioner State Bank of India, Zonal Office, Vijayawada, rep. By its Assistant General Manager nd others .....Respondents Counsel for the petitioner:Sri Challa Ajay Kumar Counsel for respondents : Sri P.Vishnuvardhan Reddy Dr. Y.Padmavathi <Gist: >Head Note: ?Cases referred: 1. 1987(4) Scc 691 2. Air 1966 Sc 1672 3. 1993(1) Scc 71 4. 2002(3) Llj 209 5. Air 1991 Sc 101 6. Air 1986 Sc 954 7. (1993) 1 Scc 71 8. (1995) 2 Scc 326 9. 1998(7) Scc 66 10. 1997(7) Scc 592 11. 1993(3) Scc 259 12. Air 1995 Sc 922 13. Air 1991 Sc 101 14. 1979 (2) Alt 411 15. 1981 Scc 1253 16. 2004(1) Llj 190 17. 1991(2) Scc 599 18. 1992(2) Scc 29 19. 1995 Supp. (4) Scc 111 20. 2004(1) Llj (Feb) 227 21. 1992(4) Scc 118 22. 2001(1) Llj 596 23. 2003(3) Llj 904 24. 1979(2) Llj 80 25. 1986(2) Llj 624 26. 2002(3) Llj 229 27. Air 1966 Sc 1672 28. 1979(2) Alt 411 29. 2004(1) Llj 190 30. 2009 12 Scc 49 31. 2009 3 Scc 35 32. 2006 (1) Scc 667 33. 2007 (1) Scc 408 34. Air 2007 631. 35. 2008 Air Scw 3996 36. 2007 (1) Scc 575 37. (2008) 5 Scc 241 38. (2007) 11 Scc 92 39. (2008) 12 Scc 275 40. (2000) 6 Scc 359 41. 2007 Air Scw 2265 42. 2007 (5) Scc 326 43. 2008 Air Scw 1383 44. 2008 Air Scw 1594 45. 2009 (3) Slr 241 46. (2008) 10 Scc 1 47. (2007)(11 Scc 92, 48. Air 1930 Pc 57 (1) 49. (2003) 4 Scc 161 50. (2005) 2 Scc 638 51. (2003) 5 Scc 12 52. (2003) 5 Scc 372 53. (2006) 5 Scc 493 54. (2006) 7 Scc 684, 55. Air 2000 Sc 469 56. Air 1992 Sc 789 57. Air 1992 Sc 2070 58. Air 1997 Sc 3091 59. Air 1997 Sc 1628 60. (2013) 14 Scc 65 1987(4) Scc 691 Air 1966 Sc 1672 1993(1) Scc 71 2002(3) Llj 209 Air 1991 Sc 101 Air 1986 Sc 954 (1993) 1 Scc 71 (1995) 2 Scc 326 1998(7) Scc 66 1997(7) Scc 592 1993(3) Scc 259 Air 1995 Sc 922 Air 1991 Sc 101 1979 (2) Alt 411 1981 Scc 1253 2004(1) Llj 190 1991(2) Scc 599 1992(2) Scc 29 1995 Supp. (4) Scc 111 2004(1) Llj (Feb) 227 1992(4) Scc 118 2001(1) Llj 596 2003(3) Llj 904 1979(2) Llj 80 1986(2) Llj 624 2002(3) Llj 229 Air 1966 Sc 1672 1979(2) Alt 411 2004(1) Llj 190 2009 12 Scc 49 2009 3 Scc 35 2006 (1) Scc 667 2007 (1) Scc 408 Air 2007 631. 2008 Air Scw 3996 2007 (1) Scc 575 (2008) 5 Scc 241 (2007) 11 Scc 92 (2008) 12 Scc 275 (2000) 6 Scc 359 2007 Air Scw 2265 2007 (5) Scc 326 2008 Air Scw 1383 2008 Air Scw 1594 2009 (3) Slr 241 (2008) 10 Scc 1 (2007)(11 Scc 92, Air 1930 Pc 57 (1) (2003) 4 Scc 161 (2005) 2 Scc 638 (2003) 5 Scc 12 (2003) 5 Scc 372 (2006) 5 Scc 493 (2006) 7 Scc 684, Air 2000 Sc 469 Air 1992 Sc 789 Air 1992 Sc 2070 Air 1997 Sc 3091 Air 1997 Sc 1628 (2013) 14 Scc 65 Honble Sri Justice Dama Seshadri Naidu Writ Petition Nos.6470 of2006, 9109 of 2007, 7806, 7807, 7808, 12151, 15481, 15486, 15852, 15855, 15868, 15869, 16053, 16470, 17079, 17880, 17881, 17883, 18107, 18108, 18109, 18111, 18324, 18326, 18327, 18328, 20875, 20877, 20878, 20879, 20880, 20883, 20884, 20885, 20887, 20888, 20889, 20890, 20891, 20893, 20894, 20896, 20897, 20898, 20899, 20901, 25785 and 26240 of 2006, 25805, 28502, 28555, 28573, 28578, 28725, 28755, 28897, 28944, 33822, 33823, 33460 and 33835 of 2010 Common Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Dama Seshadri Naidu']"", ""LAWYER"": ""['Challa Ajay Kumar', 'P.Vishnuvardhan Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Kondamudi Chandrasekhara Rao']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Bank of India, Zonal Office, Vijayawada']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Thus, the submission that the entire examination should be set aside also merits no consideration.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Thus, the submission that the entire examination should be set aside also merits no consideration. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Madras Dated: 16/12/2002 Coram The Honourable Mr.Justice M.Karpagavinayagam And The Honourable Mr.Justice P.Thangavel Crl.A. No. 810 Of 1998 1.Thavaraj Pandian 2.Palani 3.Raja 4.Packianathan ..Appellants -Vs- State, rep. by Inspector of Police, G-1, Thilagar Thidal Police Station (Crime), George Town (North), Madurai. ..Respondent Criminal Appeal against the judgment dated 12-8-1998 in S.C. No.307 of 1994 on the file of the Principal Sessions Court, Madurai. !For appellants 1 and 2: Mr. N.Ramu For appellants 3 and 4: Mr. V.Gopinath, Senior Counsel for Ms.N.S.Nappinai ^For respondent : Mr. E.Raja, Addl.P.P. :Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.Karpagavinayagam', 'P.Thangavel']"", ""LAWYER"": ""['N.Ramu', 'V.Gopinath', 'N.S.Nappinai', 'E.Raja']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['1.Thavaraj Pandian', '2.Palani', '3.Raja', '4.Packianathan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Madras']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['M.Karpagavinayagam', 'P.Thangavel']"", 'LAWYER': ""['N.Ramu', 'V.Gopinath', 'N.S.Nappinai', 'E.Raja']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['1.Thavaraj Pandian', '2.Palani', '3.Raja', '4.Packianathan']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Madras Dated: 16/12/2002 Coram The Honourable Mr.Justice M.Karpagavinayagam And The Honourable Mr.Justice P.Thangavel Crl.A. No. 810 Of 1998 1.Thavaraj Pandian 2.Palani 3.Raja 4.Packianathan ..Appellants -Vs- State, rep. by Inspector of Police, G-1, Thilagar Thidal Police Station (Crime), George Town (North), Madurai. ..Respondent Criminal Appeal against the judgment dated 12-8-1998 in S.C. No.307 of 1994 on the file of the Principal Sessions Court, Madurai. !For appellants 1 and 2: Mr. N.Ramu For appellants 3 and 4: Mr. V.Gopinath, Senior Counsel for Ms.N.S.Nappinai ^For respondent : Mr. E.Raja, Addl.P.P. :Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.Karpagavinayagam', 'P.Thangavel']"", ""LAWYER"": ""['N.Ramu', 'V.Gopinath', 'N.S.Nappinai', 'E.Raja']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['1.Thavaraj Pandian', '2.Palani', '3.Raja', '4.Packianathan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Madras Dated: 11/04/2002 Coram The Honourable Mr. Justice V.S. Sirpurkar and The Honourable Mr. Justice Malai Subramanian and The Honourable Mr. Justice A. Packiaraj H.C.P. No.1633 of 2001 and H.C.P.No. 1152 Of 2001 Hidaya Banu :: Petitioner in Hcp 1633/2001 Mohamed Razick @ Ponnambalam :: Petitioner in Hcp 1152/2001 :versus: 1. State of Tamil Nadu rep. by Secretary to Govt. Public (Sc) Department Fort St. George Chennai – 600 009 :: R1 in both the HCPs 2. State of Tamil Nadu rep. by Secretary to Govt. Public (L & O) Department Fort St. George Chennai – 600 009 :: R2 in Hcp 1152/2001 3. Union of India, rep. by Secretary to Government Ministry of Finance R2 in Hcp 1633/2001 New Delhi – 1 :: R3 in Hcp 1152/2001 4. The Superintendent Central Prison Chennai :: R3 in Hcp 1633/2001 Petitions under Art.226 of the Constitution for a Writ of Habeas Corpus as stated in the petitions !For Petitioners :: Mr. Habibullah Basha, S.C. For Mr. M.M. Abdul Huck (in Hcp No.1633 of 2001) Mr. C.T. Subbiah (in Hcp No.1152 of 2001) ^For Respondents :: Mr. I. Subramanian, Public Prosecutor for R1 & R3 Mr. K. Raviananthapadmanabhan A.C.G.S.C. For R2 in H.C.P.No.1633 of 2001 Mr. Su. Srinivasan, A.C.G.S.C. for R3 in H.C.P. No.1152 of 2001 :Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V.S. Sirpurkar', 'Malai Subramanian', 'A. Packiaraj']"", ""LAWYER"": ""['Habibullah Basha', 'M.M. Abdul Huck', 'C.T. Subbiah', 'I. Subramanian', 'K. Raviananthapadmanabhan', 'Su. Srinivasan']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Hidaya Banu', 'Mohamed Razick @ Ponnambalam']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Tamil Nadu', 'Union of India', 'Superintendent Central Prison Chennai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Madras']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['V.S. Sirpurkar', 'Malai Subramanian', 'A. Packiaraj']"", 'LAWYER': ""['Habibullah Basha', 'M.M. Abdul Huck', 'C.T. Subbiah', 'I. Subramanian', 'K. Raviananthapadmanabhan', 'Su. Srinivasan']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Hidaya Banu', 'Mohamed Razick @ Ponnambalam']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Tamil Nadu', 'Union of India', 'Superintendent Central Prison Chennai']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Madras Dated: 11/04/2002 Coram The Honourable Mr. Justice V.S. Sirpurkar and The Honourable Mr. Justice Malai Subramanian and The Honourable Mr. Justice A. Packiaraj H.C.P. No.1633 of 2001 and H.C.P.No. 1152 Of 2001 Hidaya Banu :: Petitioner in Hcp 1633/2001 Mohamed Razick @ Ponnambalam :: Petitioner in Hcp 1152/2001 :versus: 1. State of Tamil Nadu rep. by Secretary to Govt. Public (Sc) Department Fort St. George Chennai – 600 009 :: R1 in both the HCPs 2. State of Tamil Nadu rep. by Secretary to Govt. Public (L & O) Department Fort St. George Chennai – 600 009 :: R2 in Hcp 1152/2001 3. Union of India, rep. by Secretary to Government Ministry of Finance R2 in Hcp 1633/2001 New Delhi – 1 :: R3 in Hcp 1152/2001 4. The Superintendent Central Prison Chennai :: R3 in Hcp 1633/2001 Petitions under Art.226 of the Constitution for a Writ of Habeas Corpus as stated in the petitions !For Petitioners :: Mr. Habibullah Basha, S.C. For Mr. M.M. Abdul Huck (in Hcp No.1633 of 2001) Mr. C.T. Subbiah (in Hcp No.1152 of 2001) ^For Respondents :: Mr. I. Subramanian, Public Prosecutor for R1 & R3 Mr. K. Raviananthapadmanabhan A.C.G.S.C. For R2 in H.C.P.No.1633 of 2001 Mr. Su. Srinivasan, A.C.G.S.C. for R3 in H.C.P. No.1152 of 2001 :Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V.S. Sirpurkar', 'Malai Subramanian', 'A. Packiaraj']"", ""LAWYER"": ""['Habibullah Basha', 'M.M. Abdul Huck', 'C.T. Subbiah', 'I. Subramanian', 'K. Raviananthapadmanabhan', 'Su. Srinivasan']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Hidaya Banu', 'Mohamed Razick @ Ponnambalam']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Tamil Nadu', 'Union of India', 'Superintendent Central Prison Chennai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The petitioners contended that petitions are maintainable having regard to the principles laid down in the decisions of the Supreme Court in DWARKADAS MARFATIA & SONS v. BOARD OF TRUSTEES OF THE PORT OF BOMBAY, and MAHABIR AUTO STORES v. INDIAN OIL CORPORATION, SRILEKHA VIDYARTHI v. STATE OF U.P., 1995 AIR SCW 1613 and INDORE DEVELOPMENT AUTHORITY v. SADHANA AGARWAL, . 13.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['DWARKADAS MARFATIA & SONS v. BOARD OF TRUSTEES OF THE PORT OF BOMBAY', 'MAHABIR AUTO STORES v. INDIAN OIL CORPORATION, SRILEKHA VIDYARTHI v. STATE OF U.P., 1995 AIR SCW 1613', 'INDORE DEVELOPMENT AUTHORITY v. SADHANA AGARWAL']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['DWARKADAS MARFATIA & SONS v. BOARD OF TRUSTEES OF THE PORT OF BOMBAY', 'MAHABIR AUTO STORES v. INDIAN OIL CORPORATION, SRILEKHA VIDYARTHI v. STATE OF U.P., 1995 AIR SCW 1613', 'INDORE DEVELOPMENT AUTHORITY v. SADHANA AGARWAL']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioners contended that petitions are maintainable having regard to the principles laid down in the decisions of the Supreme Court in DWARKADAS MARFATIA & SONS v. BOARD OF TRUSTEES OF THE PORT OF BOMBAY, and MAHABIR AUTO STORES v. INDIAN OIL CORPORATION, SRILEKHA VIDYARTHI v. STATE OF U.P., 1995 AIR SCW 1613 and INDORE DEVELOPMENT AUTHORITY v. SADHANA AGARWAL, . 13. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['DWARKADAS MARFATIA & SONS v. BOARD OF TRUSTEES OF THE PORT OF BOMBAY', 'MAHABIR AUTO STORES v. INDIAN OIL CORPORATION, SRILEKHA VIDYARTHI v. STATE OF U.P., 1995 AIR SCW 1613', 'INDORE DEVELOPMENT AUTHORITY v. SADHANA AGARWAL']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
This statement clearly supports the deposition of Atma Ram (P. W. 1).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Atma Ram']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Atma Ram']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This statement clearly supports the deposition of Atma Ram (P. W. 1). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Atma Ram']""} </s>"
"The ratio of the majority judgment in R. C. Cooper's case was explained in clear and categorical terms by Shelat, J., speaking on behalf of seven judges of this Court in Shambhu Nath Sarkar v. State of West Bengal(1).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Shelat']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['R. C. Cooper']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Shambhu Nath Sarkar v. State of West Bengal(1)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Shelat']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['R. C. Cooper']"", 'PETITIONER': '[]', 'PRECEDENT': ""['Shambhu Nath Sarkar v. State of West Bengal(1)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The ratio of the majority judgment in R. C. Cooper's case was explained in clear and categorical terms by Shelat, J., speaking on behalf of seven judges of this Court in Shambhu Nath Sarkar v. State of West Bengal(1). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Shelat']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['R. C. Cooper']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Shambhu Nath Sarkar v. State of West Bengal(1)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"6. Section 28, Companies Act lays down that the shares or other interest of any member in a company shall be moveable property, transferable in manner provided by the articles of the company.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 28']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Companies Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 28']"", 'RESPONDENT': '[]', 'STATUTE': ""['Companies Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 6. Section 28, Companies Act lays down that the shares or other interest of any member in a company shall be moveable property, transferable in manner provided by the articles of the company. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 28']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Companies Act']"", ""WITNESS"": ""[]""} </s>"
"Whether the expenditure was incurred on account of a statutory obligation as in the case of Lakshmiji Sugar Mitts Co. P. Ltd. v. CIT or on a voluntary basis because of the assessee's desire to provide facilities to its employees on account of its expectations of better work from them, would not make any difference.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Lakshmiji Sugar Mitts Co. P. Ltd. v. CIT']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Lakshmiji Sugar Mitts Co. P. Ltd. v. CIT']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Whether the expenditure was incurred on account of a statutory obligation as in the case of Lakshmiji Sugar Mitts Co. P. Ltd. v. CIT or on a voluntary basis because of the assessee's desire to provide facilities to its employees on account of its expectations of better work from them, would not make any difference. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Lakshmiji Sugar Mitts Co. P. Ltd. v. CIT']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Before 1930, there, was no system of compulsory insurance in respect of third party risks in England.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['England']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['England']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Before 1930, there, was no system of compulsory insurance in respect of third party risks in England. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['England']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In order to properly appreciate that case, it is necessary first to have a look at Sri Sankari Prasad Singh Deo v. Union of India and State of Bihar [1952] S.C.R. 89 and Sajjan Singh v. State of Rajasthan [1965] 1 S.C.R. 933. 17.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sri Sankari Prasad Singh Deo v. Union of India', 'State of Bihar [1952] S.C.R. 89', 'Sajjan Singh v. State of Rajasthan [1965] 1 S.C.R. 933']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Sri Sankari Prasad Singh Deo v. Union of India', 'State of Bihar [1952] S.C.R. 89', 'Sajjan Singh v. State of Rajasthan [1965] 1 S.C.R. 933']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In order to properly appreciate that case, it is necessary first to have a look at Sri Sankari Prasad Singh Deo v. Union of India and State of Bihar [1952] S.C.R. 89 and Sajjan Singh v. State of Rajasthan [1965] 1 S.C.R. 933. 17. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sri Sankari Prasad Singh Deo v. Union of India', 'State of Bihar [1952] S.C.R. 89', 'Sajjan Singh v. State of Rajasthan [1965] 1 S.C.R. 933']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The term ""litigation"" as employed in section 5189 of the Civil Code 1895, Civ. Code 1910, 5776, in reference to admissions of defendants if fi. fa. is not confined merely to the determination of a possible issue which may arise after levy , between the plaintiff in fi. fa.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 5189']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Civil Code 1895', 'Civ. Code 1910']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 5189']"", 'RESPONDENT': '[]', 'STATUTE': ""['Civil Code 1895', 'Civ. Code 1910']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The term ""litigation"" as employed in section 5189 of the Civil Code 1895, Civ. Code 1910, 5776, in reference to admissions of defendants if fi. fa. is not confined merely to the determination of a possible issue which may arise after levy , between the plaintiff in fi. fa. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 5189']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Civil Code 1895', 'Civ. Code 1910']"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam Crl Rev Pet No. 4423 of 2006(C) 1. Jose Maveli, Director, ... Petitioner Vs 1. State Of Kerala, Represented By The ... Respondent 2. K.Babu, S/O.Vijayan, For Petitioner :Sri.B.S.Swathy Kumar For Respondent :Public Prosecutor The Hon'ble Mrs. Justice K.Hema Dated :13/04/2007 O R D E R","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K.Hema']"", ""LAWYER"": ""['B.S.Swathy Kumar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Jose Maveli']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala', 'K.Babu']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['K.Hema']"", 'LAWYER': ""['B.S.Swathy Kumar']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Jose Maveli']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Kerala', 'K.Babu']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam Crl Rev Pet No. 4423 of 2006(C) 1. Jose Maveli, Director, ... Petitioner Vs 1. State Of Kerala, Represented By The ... Respondent 2. K.Babu, S/O.Vijayan, For Petitioner :Sri.B.S.Swathy Kumar For Respondent :Public Prosecutor The Hon'ble Mrs. Justice K.Hema Dated :13/04/2007 O R D E R [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K.Hema']"", ""LAWYER"": ""['B.S.Swathy Kumar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Jose Maveli']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala', 'K.Babu']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The business in question of the assessee started in Burma in 1861.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Burma']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Burma']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The business in question of the assessee started in Burma in 1861. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Burma']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"After referring to these decisions, a Constitution Bench of this Court in Haricharan Kurmi v. State of Bihar [1964 (6) SCR 623] further clarified the legal position thus: "".In dealing with a case against an accused person","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Haricharan Kurmi v. State of Bihar [1964 (6) SCR 623]']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Haricharan Kurmi v. State of Bihar [1964 (6) SCR 623]']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: After referring to these decisions, a Constitution Bench of this Court in Haricharan Kurmi v. State of Bihar [1964 (6) SCR 623] further clarified the legal position thus: "".In dealing with a case against an accused person [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Haricharan Kurmi v. State of Bihar [1964 (6) SCR 623]']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam CRL.A.No. 181 of 2007() 1. Shajahan @ Shaji, S/O.Sahib Abdul Khader ... Petitioner Vs 1. State Of Kerala, Rep.By The Public ... Respondent For Petitioner :Sri.Rajgopal Padippurackal For Respondent :Public Prosecutor The Hon'ble Mr. Justice V.Ramkumar The Hon'ble Mr. Justice P.Q.Barkath Ali Dated :19/07/2011 O R D E R","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V.Ramkumar', 'P.Q.Barkath Ali']"", ""LAWYER"": ""['Rajgopal Padippurackal']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Shajahan @ Shaji']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['V.Ramkumar', 'P.Q.Barkath Ali']"", 'LAWYER': ""['Rajgopal Padippurackal']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Shajahan @ Shaji']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Kerala']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam CRL.A.No. 181 of 2007() 1. Shajahan @ Shaji, S/O.Sahib Abdul Khader ... Petitioner Vs 1. State Of Kerala, Rep.By The Public ... Respondent For Petitioner :Sri.Rajgopal Padippurackal For Respondent :Public Prosecutor The Hon'ble Mr. Justice V.Ramkumar The Hon'ble Mr. Justice P.Q.Barkath Ali Dated :19/07/2011 O R D E R [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V.Ramkumar', 'P.Q.Barkath Ali']"", ""LAWYER"": ""['Rajgopal Padippurackal']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Shajahan @ Shaji']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He verified the arrest panchanama at Exh.92 which was signed by PW-10 Mangal Shelar and Bhagwan Dhumal.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Mangal Shelar', 'Bhagwan Dhumal']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Mangal Shelar', 'Bhagwan Dhumal']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He verified the arrest panchanama at Exh.92 which was signed by PW-10 Mangal Shelar and Bhagwan Dhumal. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Mangal Shelar', 'Bhagwan Dhumal']""} </s>"
The decision of the Gujarat High Court in the case of N.R. Paper & Boards Ltd. and Ors. v. Dy. (supra) relied upon.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Gujarat High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['N.R. Paper & Boards Ltd. and Ors. v. Dy']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Gujarat High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['N.R. Paper & Boards Ltd. and Ors. v. Dy']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The decision of the Gujarat High Court in the case of N.R. Paper & Boards Ltd. and Ors. v. Dy. (supra) relied upon. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Gujarat High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['N.R. Paper & Boards Ltd. and Ors. v. Dy']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Tahsildar Singh And Another Vs. Respondent: The State Of Uttar Pradesh Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Tahsildar Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Uttar Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Tahsildar Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Uttar Pradesh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Tahsildar Singh And Another Vs. Respondent: The State Of Uttar Pradesh Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Tahsildar Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Uttar Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This is what the Supreme Court said in paragraph 19 of the Report: ―The Arbitration Act which is a consolidating and amending Act, being substantially in the form of a code relating to arbitration must be construed without any assumption that it was not intended to alter the law relating to appeals.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Arbitration Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Arbitration Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This is what the Supreme Court said in paragraph 19 of the Report: ―The Arbitration Act which is a consolidating and amending Act, being substantially in the form of a code relating to arbitration must be construed without any assumption that it was not intended to alter the law relating to appeals. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Arbitration Act']"", ""WITNESS"": ""[]""} </s>"
"After the conclusion of hearing, our attention was invited to order dated 22nd February, 2008 passed by this Court in Writ Petition no. 838 of 2006.","{""CASE_NUMBER"": ""['Writ Petition no. 838 of 2006']"", ""COURT"": ""[]"", ""DATE"": ""['22nd February, 2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Writ Petition no. 838 of 2006']"", 'COURT': '[]', 'DATE': ""['22nd February, 2008']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: After the conclusion of hearing, our attention was invited to order dated 22nd February, 2008 passed by this Court in Writ Petition no. 838 of 2006. [/INST]
 {""CASE_NUMBER"": ""['Writ Petition no. 838 of 2006']"", ""COURT"": ""[]"", ""DATE"": ""['22nd February, 2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"W.P.1342/15 1 High Court Of Madhya Pradesh Bench At Gwalior Justice Sujoy Paul. Writ Petition No.1342/15 Jai Prakash Agrawal Vs. Anand Agrawal & Ors. -------------------------------------------------------------------------------------- Shri D.D.Bansal, Advocate for the petitioner. Shri K.S.Tomar, Senior Advocate with Shri J.S.Kaurav, Advocate for respondents No. 1 to 3. -------------------------------------------------------------------------------------- Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh Bench At Gwalior']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sujoy Paul']"", ""LAWYER"": ""['D.D.Bansal', 'K.S.Tomar', 'J.S.Kaurav']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Jai Prakash Agrawal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Anand Agrawal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Madhya Pradesh Bench At Gwalior']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Sujoy Paul']"", 'LAWYER': ""['D.D.Bansal', 'K.S.Tomar', 'J.S.Kaurav']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Jai Prakash Agrawal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Anand Agrawal']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: W.P.1342/15 1 High Court Of Madhya Pradesh Bench At Gwalior Justice Sujoy Paul. Writ Petition No.1342/15 Jai Prakash Agrawal Vs. Anand Agrawal & Ors. -------------------------------------------------------------------------------------- Shri D.D.Bansal, Advocate for the petitioner. Shri K.S.Tomar, Senior Advocate with Shri J.S.Kaurav, Advocate for respondents No. 1 to 3. -------------------------------------------------------------------------------------- Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh Bench At Gwalior']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sujoy Paul']"", ""LAWYER"": ""['D.D.Bansal', 'K.S.Tomar', 'J.S.Kaurav']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Jai Prakash Agrawal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Anand Agrawal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Originally, when the appeal in Crl.A.(MD) No.402 of 2009 was taken up for hearing on 17.12.2012, the learned senior counsel, who was appearing for the first appellant/accused Sekar, had submitted that the first appellant/accused Sekar was a juvenile as he was aged only 17 years 5 months and 15 days on the date of commission of crime i.e., as on 19.04.2007. 111.","{""CASE_NUMBER"": ""['Crl.A.(MD) No.402 of 2009']"", ""COURT"": ""[]"", ""DATE"": ""['17.12.2012', '19.04.2007']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Sekar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Crl.A.(MD) No.402 of 2009']"", 'COURT': '[]', 'DATE': ""['17.12.2012', '19.04.2007']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Sekar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Originally, when the appeal in Crl.A.(MD) No.402 of 2009 was taken up for hearing on 17.12.2012, the learned senior counsel, who was appearing for the first appellant/accused Sekar, had submitted that the first appellant/accused Sekar was a juvenile as he was aged only 17 years 5 months and 15 days on the date of commission of crime i.e., as on 19.04.2007. 111. [/INST]
 {""CASE_NUMBER"": ""['Crl.A.(MD) No.402 of 2009']"", ""COURT"": ""[]"", ""DATE"": ""['17.12.2012', '19.04.2007']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Sekar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Re: Kerala Education Bill, 1957 1959 SCR 995, p.1047, the contention of the State of Kerala was that in order to constitute a minority for the purposes of Articles 29(1) and 30(1), persons must be numerically in the minority in the particular area or locality in which educational institution is or is intended to be constituted.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['State of Kerala']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Kerala Education Bill, 1957 1959 SCR 995']"", ""PROVISION"": ""['Articles 29(1) and 30(1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['State of Kerala']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Kerala Education Bill, 1957 1959 SCR 995']"", 'PROVISION': ""['Articles 29(1) and 30(1)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Re: Kerala Education Bill, 1957 1959 SCR 995, p.1047, the contention of the State of Kerala was that in order to constitute a minority for the purposes of Articles 29(1) and 30(1), persons must be numerically in the minority in the particular area or locality in which educational institution is or is intended to be constituted. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['State of Kerala']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Kerala Education Bill, 1957 1959 SCR 995']"", ""PROVISION"": ""['Articles 29(1) and 30(1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We allow the appeal in the manner indicated.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We allow the appeal in the manner indicated. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Varadachariar J., as he then was, pointed out ""that Section 37 of the Indian Contract Act which lays down that 'parties to a contract must either perform or offer to perform their respective promises' "" qualifies this statement by the words ""unless such performance is dispensed with or excused under the provisions of any other law.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Varadachariar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 37']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Indian Contract Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Varadachariar']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 37']"", 'RESPONDENT': '[]', 'STATUTE': ""['Indian Contract Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Varadachariar J., as he then was, pointed out ""that Section 37 of the Indian Contract Act which lays down that 'parties to a contract must either perform or offer to perform their respective promises' "" qualifies this statement by the words ""unless such performance is dispensed with or excused under the provisions of any other law."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Varadachariar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 37']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Indian Contract Act']"", ""WITNESS"": ""[]""} </s>"
"(Of course there is no question of Sections 6 and 7 operating to extend ""the period within which any suit must be instituted"", or of Section 8 to limit the extension to three years, unless the period of limitation computed from the ordinary starting point specified in the third column of the Schedule has expired).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 6 and 7', 'Section 8']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Sections 6 and 7', 'Section 8']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (Of course there is no question of Sections 6 and 7 operating to extend ""the period within which any suit must be instituted"", or of Section 8 to limit the extension to three years, unless the period of limitation computed from the ordinary starting point specified in the third column of the Schedule has expired). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 6 and 7', 'Section 8']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Sh. Sanjay Bansal: Additional Sessions Judge-03 (East): Karkardooma Courts: Delhi. S.C. No: 32/2014 Id No.: 024402R0048612014 State Versus Ranjeet S/o Sh. Jawahar Lal R/o Kirti Vihar, Loni. 2 near Bijli Ghar, Ghaziabad, Up. Fir No: 70/1989 Ps.: Gandhi Nagar U/s. 353/332/307 Ipc & 27 Arms Act Chargesheet Allocated on : 18.07.1989 Judgment Reserved on : 04.08.2014 Judgment Delivered on : 07.08.2014 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Additional Sessions Judge-03 (East): Karkardooma Courts: Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sanjay Bansal']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ranjeet']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Additional Sessions Judge-03 (East): Karkardooma Courts: Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Sanjay Bansal']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['State']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Ranjeet']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Sh. Sanjay Bansal: Additional Sessions Judge-03 (East): Karkardooma Courts: Delhi. S.C. No: 32/2014 Id No.: 024402R0048612014 State Versus Ranjeet S/o Sh. Jawahar Lal R/o Kirti Vihar, Loni. 2 near Bijli Ghar, Ghaziabad, Up. Fir No: 70/1989 Ps.: Gandhi Nagar U/s. 353/332/307 Ipc & 27 Arms Act Chargesheet Allocated on : 18.07.1989 Judgment Reserved on : 04.08.2014 Judgment Delivered on : 07.08.2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Additional Sessions Judge-03 (East): Karkardooma Courts: Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sanjay Bansal']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ranjeet']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Further, the observation of the AO that certain flats were left as closing stock as on 31.3.2008 is not a relevant factor for deciding the eligibility of the assessee for deduction u/s. 80IB(10).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['31.3.2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 80IB(10)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['31.3.2008']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['s. 80IB(10)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Further, the observation of the AO that certain flats were left as closing stock as on 31.3.2008 is not a relevant factor for deciding the eligibility of the assessee for deduction u/s. 80IB(10). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['31.3.2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 80IB(10)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Ashok Kumar and Kewal Krishna preferred a petition for Special Leave before the Supreme Court.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ashok Kumar', 'Kewal Krishna']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ashok Kumar', 'Kewal Krishna']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Ashok Kumar and Kewal Krishna preferred a petition for Special Leave before the Supreme Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ashok Kumar', 'Kewal Krishna']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Page 1 of 12 In The Court Of Ms. Sunena Sharma Addl. Distt Judge - 04 (Se) Saket Courts Complex: New Delhi Rca No.02/2014 Unique Case Id No.02406C0015642014 Date of Institution : 22.01.2014 Arguments concluded : 26.11.2014 Date of decision : 26.11.2014 President, Okhla Industries (Regd) 1, Dsidc Complex, Okhla Industrial Area Phase - I, New Delhi .............. Appellant V E R S U S Apra Auto (India) Pvt Ltd Regd Office at K­80, Hauz Khas Enclave, New Delhi Also At F­85, Okhla Industrial Area Phase - I, Okhla, New Delhi - 110020. .............. Respondent J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Addl. Distt Judge - 04 (Se) Saket Courts Complex: New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sunena Sharma']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['President, Okhla Industries (Regd) 1, Dsidc Complex, Okhla Industrial Area Phase - I, New Delhi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Apra Auto (India) Pvt Ltd Regd Office at K\\xad80, Hauz Khas Enclave, New Delhi Also At F\\xad85, Okhla Industrial Area Phase - I, Okhla, New Delhi - 110020']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Addl. Distt Judge - 04 (Se) Saket Courts Complex: New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Sunena Sharma']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['President, Okhla Industries (Regd) 1, Dsidc Complex, Okhla Industrial Area Phase - I, New Delhi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Apra Auto (India) Pvt Ltd Regd Office at K\\xad80, Hauz Khas Enclave, New Delhi Also At F\\xad85, Okhla Industrial Area Phase - I, Okhla, New Delhi - 110020']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Page 1 of 12 In The Court Of Ms. Sunena Sharma Addl. Distt Judge - 04 (Se) Saket Courts Complex: New Delhi Rca No.02/2014 Unique Case Id No.02406C0015642014 Date of Institution : 22.01.2014 Arguments concluded : 26.11.2014 Date of decision : 26.11.2014 President, Okhla Industries (Regd) 1, Dsidc Complex, Okhla Industrial Area Phase - I, New Delhi .............. Appellant V E R S U S Apra Auto (India) Pvt Ltd Regd Office at K­80, Hauz Khas Enclave, New Delhi Also At F­85, Okhla Industrial Area Phase - I, Okhla, New Delhi - 110020. .............. Respondent J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Addl. Distt Judge - 04 (Se) Saket Courts Complex: New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sunena Sharma']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['President, Okhla Industries (Regd) 1, Dsidc Complex, Okhla Industrial Area Phase - I, New Delhi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Apra Auto (India) Pvt Ltd Regd Office at K\\xad80, Hauz Khas Enclave, New Delhi Also At F\\xad85, Okhla Industrial Area Phase - I, Okhla, New Delhi - 110020']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"So far as Debi Chand (defendant No. 4) is concerned, he had preferred First Appeal No 298 of 1954 in this Court against the decision of the trial court, which appeal, as mentioned above, was connected with the instant First Appeal","{""CASE_NUMBER"": ""['First Appeal No 298 of 1954']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Debi Chand']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['First Appeal No 298 of 1954']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Debi Chand']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: So far as Debi Chand (defendant No. 4) is concerned, he had preferred First Appeal No 298 of 1954 in this Court against the decision of the trial court, which appeal, as mentioned above, was connected with the instant First Appeal [/INST]
 {""CASE_NUMBER"": ""['First Appeal No 298 of 1954']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Debi Chand']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"A Comprehensive Bill, called the Uttar Pradesh Avas Evam Vikas Parishad Vidheyak has accordingly been prepared to provide for the establishment, incorporation and functioning of a Housing and Development Board in this State.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Uttar Pradesh Avas Evam Vikas Parishad Vidheyak']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Uttar Pradesh Avas Evam Vikas Parishad Vidheyak']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A Comprehensive Bill, called the Uttar Pradesh Avas Evam Vikas Parishad Vidheyak has accordingly been prepared to provide for the establishment, incorporation and functioning of a Housing and Development Board in this State. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Uttar Pradesh Avas Evam Vikas Parishad Vidheyak']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Petitioner: The United Commercial Bank Ltd.,Calcutta Vs. Respondent: The Commissioner Of Income-Tax,West Bengal Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['United Commercial Bank Ltd.,Calcutta']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Commissioner Of Income-Tax,West Bengal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['United Commercial Bank Ltd.,Calcutta']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Commissioner Of Income-Tax,West Bengal']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: The United Commercial Bank Ltd.,Calcutta Vs. Respondent: The Commissioner Of Income-Tax,West Bengal Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['United Commercial Bank Ltd.,Calcutta']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Commissioner Of Income-Tax,West Bengal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The claimants produced two witnesses, namely Bhim Singh (PW-1), and Lalloo Mal (PW-2) but they arc not parties to the sale-deeds filed by the claimants. 8.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Bhim Singh', 'Lalloo Mal']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Bhim Singh', 'Lalloo Mal']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The claimants produced two witnesses, namely Bhim Singh (PW-1), and Lalloo Mal (PW-2) but they arc not parties to the sale-deeds filed by the claimants. 8. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Bhim Singh', 'Lalloo Mal']""} </s>"
"In Sheth case Krishna Iyer, J. while dealing with an identical argument observed as follows : (SCC p. 270, para 107) It would be seen that in this constitutional provision the words"" appointed""and"" transferred ""have been used separately conveying different connotations; and if the Constitution-makers had used these two terms in the said subject in different contexts it cannot be argued that these two terms are interchangeable.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Krishna Iyer']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Krishna Iyer']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Sheth case Krishna Iyer, J. while dealing with an identical argument observed as follows : (SCC p. 270, para 107) It would be seen that in this constitutional provision the words"" appointed""and"" transferred ""have been used separately conveying different connotations; and if the Constitution-makers had used these two terms in the said subject in different contexts it cannot be argued that these two terms are interchangeable. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Krishna Iyer']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
In Misc. Judicial Case No. 221 of 1960 the material facts are somewhat different.,"{""CASE_NUMBER"": ""['Judicial Case No. 221 of 1960']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Judicial Case No. 221 of 1960']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Misc. Judicial Case No. 221 of 1960 the material facts are somewhat different. [/INST]
 {""CASE_NUMBER"": ""['Judicial Case No. 221 of 1960']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"b) Likewise, the point that arises for consideration in O.S.A.No.60 of 2007 is:- ""whether this Court does not have the territorial jurisdiction to entertain and try the suit?.""","{""CASE_NUMBER"": ""['O.S.A.No.60 of 2007']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['O.S.A.No.60 of 2007']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: b) Likewise, the point that arises for consideration in O.S.A.No.60 of 2007 is:- ""whether this Court does not have the territorial jurisdiction to entertain and try the suit?."" [/INST]
 {""CASE_NUMBER"": ""['O.S.A.No.60 of 2007']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"He has cited a decision of mine in Ganesh Nayak v. Land Acquisition Collector, (1961) 65 Cal WN 908.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ganesh Nayak v. Land Acquisition Collector, (1961) 65 Cal WN 908']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Ganesh Nayak v. Land Acquisition Collector, (1961) 65 Cal WN 908']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He has cited a decision of mine in Ganesh Nayak v. Land Acquisition Collector, (1961) 65 Cal WN 908. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ganesh Nayak v. Land Acquisition Collector, (1961) 65 Cal WN 908']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As regards the future prospects in Rajesh and Ors. v Rajbir Singh and Ors. 2013 (6) SCALE 563 the Hon'ble Supreme Court held as under: Suit no. 289/14 Anita & Ors. v Naresh Kumar & Ors. Page no. 21 of 31 ""11.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Rajesh and Ors. v Rajbir Singh and Ors. 2013 (6) SCALE 563']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Rajesh and Ors. v Rajbir Singh and Ors. 2013 (6) SCALE 563']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As regards the future prospects in Rajesh and Ors. v Rajbir Singh and Ors. 2013 (6) SCALE 563 the Hon'ble Supreme Court held as under: Suit no. 289/14 Anita & Ors. v Naresh Kumar & Ors. Page no. 21 of 31 ""11. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Rajesh and Ors. v Rajbir Singh and Ors. 2013 (6) SCALE 563']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"(1999) 6 SCC 667 = AIR 1999 SC 2979 = (1999) 5 JT 237, in which it was, inter alia, observed as under : ""Under Article 226 of the Constitution, the High Court has been given the power and jurisdiction to issue appropriate Writs in the nature of Mandamus, Certiorari, Prohibition, Quo-Warranto and Habeas Corpus for the enforcement of Fundamental Rights or for any other purpose.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['(1999) 6 SCC 667 = AIR 1999 SC 2979 = (1999) 5 JT 237']"", ""PROVISION"": ""['Article 226']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['(1999) 6 SCC 667 = AIR 1999 SC 2979 = (1999) 5 JT 237']"", 'PROVISION': ""['Article 226']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (1999) 6 SCC 667 = AIR 1999 SC 2979 = (1999) 5 JT 237, in which it was, inter alia, observed as under : ""Under Article 226 of the Constitution, the High Court has been given the power and jurisdiction to issue appropriate Writs in the nature of Mandamus, Certiorari, Prohibition, Quo-Warranto and Habeas Corpus for the enforcement of Fundamental Rights or for any other purpose. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['(1999) 6 SCC 667 = AIR 1999 SC 2979 = (1999) 5 JT 237']"", ""PROVISION"": ""['Article 226']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
C.R.A. No. 280/1988 and C.R.A. No. 283/1988 : Assailing the impugned conviction and sentence recorded by the learned Trial Court on 29.6.88 both the above appellants preferred two separate appeals.,"{""CASE_NUMBER"": ""['C.R.A. No. 280/1988', 'C.R.A. No. 283/1988']"", ""COURT"": ""[]"", ""DATE"": ""['29.6.88']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['C.R.A. No. 280/1988', 'C.R.A. No. 283/1988']"", 'COURT': '[]', 'DATE': ""['29.6.88']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: C.R.A. No. 280/1988 and C.R.A. No. 283/1988 : Assailing the impugned conviction and sentence recorded by the learned Trial Court on 29.6.88 both the above appellants preferred two separate appeals. [/INST]
 {""CASE_NUMBER"": ""['C.R.A. No. 280/1988', 'C.R.A. No. 283/1988']"", ""COURT"": ""[]"", ""DATE"": ""['29.6.88']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is her further contention that the complainant along with his wife and son-in-law and (husband of deceased), filed C.D.No.40 of 2003 before A.P.State Consumer Disputes Redressal Commission, Hyderabad making self same allegations of medical negligence and claimed compensation of Rs.one crore and after enquiry, the State Commission by a reasoned order dated 29-8-2008 dismissed the said complaint holding that there is no negligence on the part of A.1.","{""CASE_NUMBER"": ""['C.D.No.40 of 2003']"", ""COURT"": ""[]"", ""DATE"": ""['29-8-2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['A.P.State Consumer Disputes Redressal Commission, Hyderabad']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['C.D.No.40 of 2003']"", 'COURT': '[]', 'DATE': ""['29-8-2008']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['A.P.State Consumer Disputes Redressal Commission, Hyderabad']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is her further contention that the complainant along with his wife and son-in-law and (husband of deceased), filed C.D.No.40 of 2003 before A.P.State Consumer Disputes Redressal Commission, Hyderabad making self same allegations of medical negligence and claimed compensation of Rs.one crore and after enquiry, the State Commission by a reasoned order dated 29-8-2008 dismissed the said complaint holding that there is no negligence on the part of A.1. [/INST]
 {""CASE_NUMBER"": ""['C.D.No.40 of 2003']"", ""COURT"": ""[]"", ""DATE"": ""['29-8-2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['A.P.State Consumer Disputes Redressal Commission, Hyderabad']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On the 21st May, 1956, the assessee entered into an agreement with Messrs. Simplex Electric Company Ltd. of England (hereinafter sometimes called the "" foreign company ""}.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['21st May, 1956']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Simplex Electric Company Ltd. of England']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['21st May, 1956']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Simplex Electric Company Ltd. of England']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On the 21st May, 1956, the assessee entered into an agreement with Messrs. Simplex Electric Company Ltd. of England (hereinafter sometimes called the "" foreign company ""}. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['21st May, 1956']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Simplex Electric Company Ltd. of England']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"We shall, therefore, have a look at the said evidence to see whether the two courts are justified or not in taking the view that the appellant Suresh Bahri had a strong motive to hatch a conspiracy with the assistance of the other two appellants, namely, Raj Pal Sharma and Gurbachan Singh to commit the murder of his wife and the two children.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Suresh Bahri', 'Raj Pal Sharma', 'Gurbachan Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Suresh Bahri', 'Raj Pal Sharma', 'Gurbachan Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We shall, therefore, have a look at the said evidence to see whether the two courts are justified or not in taking the view that the appellant Suresh Bahri had a strong motive to hatch a conspiracy with the assistance of the other two appellants, namely, Raj Pal Sharma and Gurbachan Singh to commit the murder of his wife and the two children. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Suresh Bahri', 'Raj Pal Sharma', 'Gurbachan Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
(See Gurucharan Singh and Anr. v. State of Punjab ( AIR 1956 SC 460).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Gurucharan Singh and Anr. v. State of Punjab ( AIR 1956 SC 460']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Gurucharan Singh and Anr. v. State of Punjab ( AIR 1956 SC 460']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (See Gurucharan Singh and Anr. v. State of Punjab ( AIR 1956 SC 460). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Gurucharan Singh and Anr. v. State of Punjab ( AIR 1956 SC 460']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The results obtained from each of the impugned tests bear a `testimonial' character and they cannot be categorised as material evidence.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The results obtained from each of the impugned tests bear a `testimonial' character and they cannot be categorised as material evidence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"After 36 years, the issue was again considered in Randhir Singh v. Union of India (supra), and it was unequivocally ruled that the principle of equal pay for equal work is not an abstract doctrine and can be enforced by reading it into the doctrine of equality enshrined in Articles 14 and 16 of the Constitution of India. xxx xxx xxx 100.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Randhir Singh v. Union of India']"", ""PROVISION"": ""['Articles 14 and 16']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution of India']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Randhir Singh v. Union of India']"", 'PROVISION': ""['Articles 14 and 16']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution of India']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: After 36 years, the issue was again considered in Randhir Singh v. Union of India (supra), and it was unequivocally ruled that the principle of equal pay for equal work is not an abstract doctrine and can be enforced by reading it into the doctrine of equality enshrined in Articles 14 and 16 of the Constitution of India. xxx xxx xxx 100. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Randhir Singh v. Union of India']"", ""PROVISION"": ""['Articles 14 and 16']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution of India']"", ""WITNESS"": ""[]""} </s>"
The Death Reference No. 1 of 1989 will stand disposed of as stated above.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Death Reference No. 1 of 1989 will stand disposed of as stated above. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
This witness also deposed that one week after the registration of the deeds Chandrarao represented to him that they obtained settlement deeds from Veerayya by playing fraud and he had not gone to the house of Meera Mohiddin.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Chandrarao', 'Meera Mohiddin']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Chandrarao', 'Meera Mohiddin']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This witness also deposed that one week after the registration of the deeds Chandrarao represented to him that they obtained settlement deeds from Veerayya by playing fraud and he had not gone to the house of Meera Mohiddin. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Chandrarao', 'Meera Mohiddin']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Again in AIR para 9, the Court held: ""We, therefore, hold that normally petitions solely praying for the refund of money against the State by a writ of mandamus are not to be entertained.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Again in AIR para 9, the Court held: ""We, therefore, hold that normally petitions solely praying for the refund of money against the State by a writ of mandamus are not to be entertained. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam WP(C).No. 18568 of 2008(I) 1. M/S.Essar Telecom Infracture (P) Ltd., ... Petitioner Vs 1. C.I. Of Police, Thaliparamba ... Respondent 2. S.I. Of Police 3. Sri.Lakshmanan, Chaithram House 4. Sri.Joibin Lakshmanan, S/O.Lakshman, 5. Sri.Ramachandran.K.P., Kunhipurayuil 7. Thaliparambu Municipality, Municipal For Petitioner :Sri.Santhosh Mathew For Respondent :Sri.M.Sasindran The Hon'ble Mr. Justice K.Balakrishnan Nair The Hon'ble Mrs. Justice M.C.Hari Rani Dated :21/10/2008 O R D E R K.Balakrishnan Nair & M.C.Hari Rani, Jj. ----------------------------------------- W.P.(C) Nos. 26169/2007 & 6960, 7450, 7476, 10424, 10435, 12904, 18568, 22490, 27780 & 30600 Of 2008 ----------------------------------------- Dated 21st October, 2008. Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K.Balakrishnan Nair', 'M.C.Hari Rani']"", ""LAWYER"": ""['Santhosh Mathew', 'M.Sasindran']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M/S.Essar Telecom Infracture (P) Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['C.I. Of Police, Thaliparamba', 'S.I. Of Police', 'Lakshmanan', 'Joibin Lakshmanan', 'Ramachandran.K.P.', 'Thaliparambu Municipality']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['K.Balakrishnan Nair', 'M.C.Hari Rani']"", 'LAWYER': ""['Santhosh Mathew', 'M.Sasindran']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['M/S.Essar Telecom Infracture (P) Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['C.I. Of Police, Thaliparamba', 'S.I. Of Police', 'Lakshmanan', 'Joibin Lakshmanan', 'Ramachandran.K.P.', 'Thaliparambu Municipality']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam WP(C).No. 18568 of 2008(I) 1. M/S.Essar Telecom Infracture (P) Ltd., ... Petitioner Vs 1. C.I. Of Police, Thaliparamba ... Respondent 2. S.I. Of Police 3. Sri.Lakshmanan, Chaithram House 4. Sri.Joibin Lakshmanan, S/O.Lakshman, 5. Sri.Ramachandran.K.P., Kunhipurayuil 7. Thaliparambu Municipality, Municipal For Petitioner :Sri.Santhosh Mathew For Respondent :Sri.M.Sasindran The Hon'ble Mr. Justice K.Balakrishnan Nair The Hon'ble Mrs. Justice M.C.Hari Rani Dated :21/10/2008 O R D E R K.Balakrishnan Nair & M.C.Hari Rani, Jj. ----------------------------------------- W.P.(C) Nos. 26169/2007 & 6960, 7450, 7476, 10424, 10435, 12904, 18568, 22490, 27780 & 30600 Of 2008 ----------------------------------------- Dated 21st October, 2008. Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K.Balakrishnan Nair', 'M.C.Hari Rani']"", ""LAWYER"": ""['Santhosh Mathew', 'M.Sasindran']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M/S.Essar Telecom Infracture (P) Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['C.I. Of Police, Thaliparamba', 'S.I. Of Police', 'Lakshmanan', 'Joibin Lakshmanan', 'Ramachandran.K.P.', 'Thaliparambu Municipality']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Perusal of the leave to defend application shows that the number of the family member of the petitioner has not been disputed by the respondent.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Perusal of the leave to defend application shows that the number of the family member of the petitioner has not been disputed by the respondent. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
(see a country view of our Supreme Court recently in Navinchandra N. Majithia v. Stale of Meghalaya and Ors.. JT [2000] Suppl. 1 SC 538).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Navinchandra N. Majithia v. Stale of Meghalaya and Ors.. JT [2000] Suppl. 1 SC 538']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Navinchandra N. Majithia v. Stale of Meghalaya and Ors.. JT [2000] Suppl. 1 SC 538']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (see a country view of our Supreme Court recently in Navinchandra N. Majithia v. Stale of Meghalaya and Ors.. JT [2000] Suppl. 1 SC 538). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Navinchandra N. Majithia v. Stale of Meghalaya and Ors.. JT [2000] Suppl. 1 SC 538']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Defendant nos. 3 & 4 have accordingly prayed for rejection of the plaint under Order 7 Rule 11 CPC. 4.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Order 7 Rule 11']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Order 7 Rule 11']"", 'RESPONDENT': '[]', 'STATUTE': ""['CPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Defendant nos. 3 & 4 have accordingly prayed for rejection of the plaint under Order 7 Rule 11 CPC. 4. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Order 7 Rule 11']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""} </s>"
"At that stage, the first respondent herein filed an application I. A. 290 of 1968 before the tribunal for inspection of the ballot papers in order to find out whether and if so how man of the is disputed votes were cast in favour of the successful candidate.","{""CASE_NUMBER"": ""['I. A. 290 of 1968']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['I. A. 290 of 1968']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: At that stage, the first respondent herein filed an application I. A. 290 of 1968 before the tribunal for inspection of the ballot papers in order to find out whether and if so how man of the is disputed votes were cast in favour of the successful candidate. [/INST]
 {""CASE_NUMBER"": ""['I. A. 290 of 1968']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He was serving as a conductor in Gujarat State Road Transport Corporation and was residing at village Chandrala.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Chandrala']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Gujarat State Road Transport Corporation']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Chandrala']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Gujarat State Road Transport Corporation']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He was serving as a conductor in Gujarat State Road Transport Corporation and was residing at village Chandrala. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Chandrala']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Gujarat State Road Transport Corporation']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"(ix) With reference to the testimony of Pinki PW-3, learned counsel urged that on being cross-examined, Pinki admitted that when Sangeeta PW-1 handed over Harshit to her, she i.e. Sangeeta, did not name the appellant as the person who had assaulted Harshit.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Harshit']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Pinki', 'Sangeeta']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Harshit']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Pinki', 'Sangeeta']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (ix) With reference to the testimony of Pinki PW-3, learned counsel urged that on being cross-examined, Pinki admitted that when Sangeeta PW-1 handed over Harshit to her, she i.e. Sangeeta, did not name the appellant as the person who had assaulted Harshit. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Harshit']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Pinki', 'Sangeeta']""} </s>"
"It is in this background that the provisions of the Act have to be understood. Section-2 of the Act inter alia defines the ""scheduled offences"" and Section-3 provides for constitution of the N.I.A. Chapter 2, comprising Sections 3 to 5, provides for constitution and other aspects of the N.I.A. Section-6 happens to be the fulcrum of the Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['N.I.A.']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section-2', 'Section-3', 'Chapter 2', 'Sections 3 to 5', 'Section-6 happens']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['N.I.A.']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section-2', 'Section-3', 'Chapter 2', 'Sections 3 to 5', 'Section-6 happens']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is in this background that the provisions of the Act have to be understood. Section-2 of the Act inter alia defines the ""scheduled offences"" and Section-3 provides for constitution of the N.I.A. Chapter 2, comprising Sections 3 to 5, provides for constitution and other aspects of the N.I.A. Section-6 happens to be the fulcrum of the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['N.I.A.']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section-2', 'Section-3', 'Chapter 2', 'Sections 3 to 5', 'Section-6 happens']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
98.The aforementioned facts and circumstances fully establish the offence under Sections 302/120-B of the Penal Code against the appellants Gurbachan Singh and Raj Pal Sharma also and there is hardly anything deserving interference with the view taken by the two courts below after a detailed and elaborate discussion of the evidence and material on record.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Gurbachan Singh', 'Raj Pal Sharma']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 302/120-B']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Penal Code']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Gurbachan Singh', 'Raj Pal Sharma']"", 'PRECEDENT': '[]', 'PROVISION': ""['Sections 302/120-B']"", 'RESPONDENT': '[]', 'STATUTE': ""['Penal Code']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 98.The aforementioned facts and circumstances fully establish the offence under Sections 302/120-B of the Penal Code against the appellants Gurbachan Singh and Raj Pal Sharma also and there is hardly anything deserving interference with the view taken by the two courts below after a detailed and elaborate discussion of the evidence and material on record. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Gurbachan Singh', 'Raj Pal Sharma']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 302/120-B']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Penal Code']"", ""WITNESS"": ""[]""} </s>"
Mr. Chari contended that the High Court was in error in applying the provisions of section 6 of the General Clauses Act to the interpretation of article 13 (1) of the Constitution inasmuch as the provisions of this article were not analogous to repeal and did not amount to a repeal of the existing law.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Chari']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 6', 'article 13 (1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['General Clauses Act', 'Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Chari']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 6', 'article 13 (1)']"", 'RESPONDENT': '[]', 'STATUTE': ""['General Clauses Act', 'Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mr. Chari contended that the High Court was in error in applying the provisions of section 6 of the General Clauses Act to the interpretation of article 13 (1) of the Constitution inasmuch as the provisions of this article were not analogous to repeal and did not amount to a repeal of the existing law. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Chari']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 6', 'article 13 (1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['General Clauses Act', 'Constitution']"", ""WITNESS"": ""[]""} </s>"
"However, at this juncture, it would be relevant to take note of paragraphs 11 and 19 of National Insurance Co. Ltd. Vs. Kusum Rai and others (2006 (4) SCC 250.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['National Insurance Co. Ltd. Vs. Kusum Rai and others (2006 (4) SCC 250']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['National Insurance Co. Ltd. Vs. Kusum Rai and others (2006 (4) SCC 250']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: However, at this juncture, it would be relevant to take note of paragraphs 11 and 19 of National Insurance Co. Ltd. Vs. Kusum Rai and others (2006 (4) SCC 250. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['National Insurance Co. Ltd. Vs. Kusum Rai and others (2006 (4) SCC 250']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Firstly, in the present case it is deposed by the complainant that he had given the loan to the accused in cash in installments from September, 2011 to the middle of December, 2011.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Firstly, in the present case it is deposed by the complainant that he had given the loan to the accused in cash in installments from September, 2011 to the middle of December, 2011. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"But he has deposed that he had a bank account in Punjab National Bank, Majeet Mandi, Amritsar.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Amritsar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Punjab National Bank']"", ""OTHER_PERSON"": ""['Majeet Mandi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Amritsar']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Punjab National Bank']"", 'OTHER_PERSON': ""['Majeet Mandi']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But he has deposed that he had a bank account in Punjab National Bank, Majeet Mandi, Amritsar. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Amritsar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Punjab National Bank']"", ""OTHER_PERSON"": ""['Majeet Mandi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"According to the deposition of PW25 Deepak Gupta, DGM, Vodafone Essar South Ltd., the call details of mobile phone No. 9811134191, in the name of Sanjay Gupta from 01/05/2003 to 29/07/2003, were extracted from the system and were provided to the police, which are Ex. PW25/B.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['01/05/2003', '29/07/2003']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Vodafone Essar South Ltd.']"", ""OTHER_PERSON"": ""['Sanjay Gupta']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Deepak Gupta']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['01/05/2003', '29/07/2003']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Vodafone Essar South Ltd.']"", 'OTHER_PERSON': ""['Sanjay Gupta']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Deepak Gupta']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: According to the deposition of PW25 Deepak Gupta, DGM, Vodafone Essar South Ltd., the call details of mobile phone No. 9811134191, in the name of Sanjay Gupta from 01/05/2003 to 29/07/2003, were extracted from the system and were provided to the police, which are Ex. PW25/B. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['01/05/2003', '29/07/2003']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Vodafone Essar South Ltd.']"", ""OTHER_PERSON"": ""['Sanjay Gupta']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Deepak Gupta']""} </s>"
"The 4th respondent, had also contested in the election for the local bodies conducted by the State Election Commission on 24.09.2005 for Edavacode Ward, Thiruvananthapuram.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['24.09.2005']"", ""GPE"": ""['Edavacode Ward', 'Thiruvananthapuram']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['24.09.2005']"", 'GPE': ""['Edavacode Ward', 'Thiruvananthapuram']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The 4th respondent, had also contested in the election for the local bodies conducted by the State Election Commission on 24.09.2005 for Edavacode Ward, Thiruvananthapuram. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['24.09.2005']"", ""GPE"": ""['Edavacode Ward', 'Thiruvananthapuram']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
PW2 Chandra Shekhar has stated in Paragraph 4 that Exs.P-6 and P-7 were published during the election campaign in contravention of provisions of Section 127A of the Act.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 127A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Chandra Shekhar']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 127A']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Chandra Shekhar']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: PW2 Chandra Shekhar has stated in Paragraph 4 that Exs.P-6 and P-7 were published during the election campaign in contravention of provisions of Section 127A of the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 127A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Chandra Shekhar']""} </s>"
"It is alleged that on 30.07.2005 at about 11.15 a.m., P.W.2-Thippeswamy, PSI., Basavapatna Police Station received a credible information that some persons at Kamsagara village are circulating counterfeit notes in a Maruti Omni van.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['30.07.2005']"", ""GPE"": ""['Kamsagara village']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Basavapatna Police Station']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Thippeswamy']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['30.07.2005']"", 'GPE': ""['Kamsagara village']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Basavapatna Police Station']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Thippeswamy']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is alleged that on 30.07.2005 at about 11.15 a.m., P.W.2-Thippeswamy, PSI., Basavapatna Police Station received a credible information that some persons at Kamsagara village are circulating counterfeit notes in a Maruti Omni van. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['30.07.2005']"", ""GPE"": ""['Kamsagara village']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Basavapatna Police Station']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Thippeswamy']""} </s>"
"Petitioner: R. Pandian And Anothera. Deivendran Son Of M. Ammavasithevar Vs. Respondent: State Of Tamil Naduthrough The Secretary, Department Of Home Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['R. Pandian And Anothera. Deivendran Son Of M. Ammavasithevar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Tamil Naduthrough']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['R. Pandian And Anothera. Deivendran Son Of M. Ammavasithevar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Tamil Naduthrough']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: R. Pandian And Anothera. Deivendran Son Of M. Ammavasithevar Vs. Respondent: State Of Tamil Naduthrough The Secretary, Department Of Home Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['R. Pandian And Anothera. Deivendran Son Of M. Ammavasithevar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Tamil Naduthrough']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Agent for respondent No. 4: P.A. Mehta.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['P.A. Mehta']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['P.A. Mehta']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Agent for respondent No. 4: P.A. Mehta. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['P.A. Mehta']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The petitioner had received from the respondent an amount of Rs. 2,25,000/­ at the time of creation of the tenancy of the said shop, but the petitioner has not specified this material fact under any paragraph of his petition despite the fact that he has filed some receipt signed by him regarding payment of Rs. 45,000/­ and balance payment of Rs. 1,80,000/­ made on 07.05.1993. 16.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['07.05.1993']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['07.05.1993']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioner had received from the respondent an amount of Rs. 2,25,000/­ at the time of creation of the tenancy of the said shop, but the petitioner has not specified this material fact under any paragraph of his petition despite the fact that he has filed some receipt signed by him regarding payment of Rs. 45,000/­ and balance payment of Rs. 1,80,000/­ made on 07.05.1993. 16. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['07.05.1993']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On the other hand, where the plaintiff has clear title supported by documents, if a trespasser without any claim to title or an interloper ... ...17.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On the other hand, where the plaintiff has clear title supported by documents, if a trespasser without any claim to title or an interloper ... ...17. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Besides relying on the above observation of the Apex Court,reliance is also placed on the view expressed by Justice Oka, in one of the cognate matters between the parties, in his judgement dated 15th February 2008 in Civil Application no.5892 of 2007 in First Appeal no.2667 of 2007.","{""CASE_NUMBER"": ""['Civil Application no.5892 of 2007', 'First Appeal no.2667 of 2007']"", ""COURT"": ""['Apex Court']"", ""DATE"": ""['15th February 2008']"", ""GPE"": ""[]"", ""JUDGE"": ""['Oka']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Civil Application no.5892 of 2007', 'First Appeal no.2667 of 2007']"", 'COURT': ""['Apex Court']"", 'DATE': ""['15th February 2008']"", 'GPE': '[]', 'JUDGE': ""['Oka']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Besides relying on the above observation of the Apex Court,reliance is also placed on the view expressed by Justice Oka, in one of the cognate matters between the parties, in his judgement dated 15th February 2008 in Civil Application no.5892 of 2007 in First Appeal no.2667 of 2007. [/INST]
 {""CASE_NUMBER"": ""['Civil Application no.5892 of 2007', 'First Appeal no.2667 of 2007']"", ""COURT"": ""['Apex Court']"", ""DATE"": ""['15th February 2008']"", ""GPE"": ""[]"", ""JUDGE"": ""['Oka']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The claimant is entitled to the interest under section 28 of the Act.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 28']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 28']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The claimant is entitled to the interest under section 28 of the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 28']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the second decision, viz., 2001 (6) SCC 46 (cited supra), though it also relates to submission of tenders, the principle laid down is helpful to the stand taken by the Tamil Nadu Public Service Commission.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Tamil Nadu Public Service Commission']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['2001 (6) SCC 46']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Tamil Nadu Public Service Commission']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['2001 (6) SCC 46']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the second decision, viz., 2001 (6) SCC 46 (cited supra), though it also relates to submission of tenders, the principle laid down is helpful to the stand taken by the Tamil Nadu Public Service Commission. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Tamil Nadu Public Service Commission']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['2001 (6) SCC 46']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the case of Ramesh v. Savita, reported, in 3 MC 74 this Court was dealing with the question as to whether pending the application under Rule 13 of Order 9 the wife could maintain an application under Section 24 of the Hindu Marriage Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ramesh v. Savita, reported, in 3 MC 74']"", ""PROVISION"": ""['Rule 13 of Order 9', 'Section 24']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Hindu Marriage Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Ramesh v. Savita, reported, in 3 MC 74']"", 'PROVISION': ""['Rule 13 of Order 9', 'Section 24']"", 'RESPONDENT': '[]', 'STATUTE': ""['Hindu Marriage Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the case of Ramesh v. Savita, reported, in 3 MC 74 this Court was dealing with the question as to whether pending the application under Rule 13 of Order 9 the wife could maintain an application under Section 24 of the Hindu Marriage Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ramesh v. Savita, reported, in 3 MC 74']"", ""PROVISION"": ""['Rule 13 of Order 9', 'Section 24']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Hindu Marriage Act']"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Madras Dated : 14-7-2009 Coram The Honourable Mr.Justice M.Chockalingam And The Honourable Mr.Justice C.S.Karnan CRL.A.Nos.39, 47, 85, 92 and 165 of 2006 Appu @ Deepan Kumar .. Appellant/A-4 in Ca 39/2006 Sanjay Sudanthiranathan .. Appellant/A-5 in Ca 47/2006 K.M.V.Anand .. Appellant/A-1 in Ca 85/2008 1.Murali 2.Sathish .. Appellants/A-2 & A-3 in Ca 92/2006 Indira @ Victoria .. Appellant/A-6 in Ca 165/2006 vs State rep. By: Deputy Superintendent of Police Crime Branch Cid Organised Crime Unit Chengai East, Chennai 600 002. (Crime No.521/2003) .. Respondent/ Complainant in all appeals Criminal appeals preferred under Sec.374(2) of the Code of Criminal Procedure against the judgment of the Additional Sessions Judge, Chennai at Poonamallee, made in S.C.No.311 of 2004 dated 8.12.2005. For Appellants : Mr.K.Kannan in Ca 39/2006 Mr.T.K.Sampath in Ca 47/2006 Mr.S.Doraisami in Ca 85/2006 Mr.R.Sankarasubbu in Ca 92/2006 Mr.V.Gopinath Senior Counsel for Mr.L.Mahendran in Ca 165/2006 For Respondent : Mr.N.R.Elango Additional Public Prosecutor Common Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.Chockalingam', 'C.S.Karnan']"", ""LAWYER"": ""['K.Kannan', 'T.K.Sampath', 'S.Doraisami', 'R.Sankarasubbu', 'V.Gopinath', 'L.Mahendran', 'N.R.Elango']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Appu @ Deepan Kumar', 'Sanjay Sudanthiranathan', 'K.M.V.Anand', '1.Murali', '2.Sathish', 'Indira @ Victoria']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Madras']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['M.Chockalingam', 'C.S.Karnan']"", 'LAWYER': ""['K.Kannan', 'T.K.Sampath', 'S.Doraisami', 'R.Sankarasubbu', 'V.Gopinath', 'L.Mahendran', 'N.R.Elango']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Appu @ Deepan Kumar', 'Sanjay Sudanthiranathan', 'K.M.V.Anand', '1.Murali', '2.Sathish', 'Indira @ Victoria']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Madras Dated : 14-7-2009 Coram The Honourable Mr.Justice M.Chockalingam And The Honourable Mr.Justice C.S.Karnan CRL.A.Nos.39, 47, 85, 92 and 165 of 2006 Appu @ Deepan Kumar .. Appellant/A-4 in Ca 39/2006 Sanjay Sudanthiranathan .. Appellant/A-5 in Ca 47/2006 K.M.V.Anand .. Appellant/A-1 in Ca 85/2008 1.Murali 2.Sathish .. Appellants/A-2 & A-3 in Ca 92/2006 Indira @ Victoria .. Appellant/A-6 in Ca 165/2006 vs State rep. By: Deputy Superintendent of Police Crime Branch Cid Organised Crime Unit Chengai East, Chennai 600 002. (Crime No.521/2003) .. Respondent/ Complainant in all appeals Criminal appeals preferred under Sec.374(2) of the Code of Criminal Procedure against the judgment of the Additional Sessions Judge, Chennai at Poonamallee, made in S.C.No.311 of 2004 dated 8.12.2005. For Appellants : Mr.K.Kannan in Ca 39/2006 Mr.T.K.Sampath in Ca 47/2006 Mr.S.Doraisami in Ca 85/2006 Mr.R.Sankarasubbu in Ca 92/2006 Mr.V.Gopinath Senior Counsel for Mr.L.Mahendran in Ca 165/2006 For Respondent : Mr.N.R.Elango Additional Public Prosecutor Common Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.Chockalingam', 'C.S.Karnan']"", ""LAWYER"": ""['K.Kannan', 'T.K.Sampath', 'S.Doraisami', 'R.Sankarasubbu', 'V.Gopinath', 'L.Mahendran', 'N.R.Elango']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Appu @ Deepan Kumar', 'Sanjay Sudanthiranathan', 'K.M.V.Anand', '1.Murali', '2.Sathish', 'Indira @ Victoria']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"-1- In The Court Of Ms. Poonam A. Bamba: Special Judge (Pc Act) : Cbi - 03 : New Delhi District : Patiala House Court : New Delhi In re : Cc No. 06/12 Case Id No. 02403R0031142012 Rc No. 12(A)/2011-DAI/CBI/ACB/New Delhi u/Sec. 120B Ipc, Sec. 7 & 13(2) r/w Sec. 13(1)(d) of Pc Act State (Cbi) Vs. 1. Samay Singh Meena, S/o Late Sh. Kirodi Lal Meena, R/o. 382, Dda, Lig Flat Pocket-13, Phase-I, Dwarka, New Delhi Permanent Address : Lalpur, Roth Hadiya, Salempur, Distt. Dausa, Rajasthan-321608 2. Arvind Kumar Tony, S/o Late Sh. Sant Ram Singh R/o. Gali No. 5, Nagla Road, Mangla Puri, Karnkar, Khera, Meerut Cantt. Date of filing of charge sheet - 27.04.2012 Date of framing of charge - 21.09.2012 Date on which arguments concluded- 25.03.2014 Date on which judgment pronounced- 29.03.2014 Appearances: Sh. S. C. Sharma, Sr. Ld. Pp for the State (Cbi). Sh. J. R. Priyani, Advocate for A-1 Samay Singh Meena. Sh. B. P. Singh, Advocate for A-2 Arvind Kumar Tony. Cc No. 06/12 : Rc No. 12A/2011/DAI/CBI/ACB/New Delhi Cbi Vs. Samay Singh Meena etc. Page No. 1 of 81 -2- 29.03.2014 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Special Judge (Pc Act) : Cbi - 03 : New Delhi District : Patiala House Court : New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""['S. C. Sharma', 'J. R. Priyani', 'B. P. Singh']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State (Cbi)', 'Cbi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Samay Singh Meena', 'Arvind Kumar Tony']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Special Judge (Pc Act) : Cbi - 03 : New Delhi District : Patiala House Court : New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': ""['S. C. Sharma', 'J. R. Priyani', 'B. P. Singh']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['State (Cbi)', 'Cbi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Samay Singh Meena', 'Arvind Kumar Tony']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: -1- In The Court Of Ms. Poonam A. Bamba: Special Judge (Pc Act) : Cbi - 03 : New Delhi District : Patiala House Court : New Delhi In re : Cc No. 06/12 Case Id No. 02403R0031142012 Rc No. 12(A)/2011-DAI/CBI/ACB/New Delhi u/Sec. 120B Ipc, Sec. 7 & 13(2) r/w Sec. 13(1)(d) of Pc Act State (Cbi) Vs. 1. Samay Singh Meena, S/o Late Sh. Kirodi Lal Meena, R/o. 382, Dda, Lig Flat Pocket-13, Phase-I, Dwarka, New Delhi Permanent Address : Lalpur, Roth Hadiya, Salempur, Distt. Dausa, Rajasthan-321608 2. Arvind Kumar Tony, S/o Late Sh. Sant Ram Singh R/o. Gali No. 5, Nagla Road, Mangla Puri, Karnkar, Khera, Meerut Cantt. Date of filing of charge sheet - 27.04.2012 Date of framing of charge - 21.09.2012 Date on which arguments concluded- 25.03.2014 Date on which judgment pronounced- 29.03.2014 Appearances: Sh. S. C. Sharma, Sr. Ld. Pp for the State (Cbi). Sh. J. R. Priyani, Advocate for A-1 Samay Singh Meena. Sh. B. P. Singh, Advocate for A-2 Arvind Kumar Tony. Cc No. 06/12 : Rc No. 12A/2011/DAI/CBI/ACB/New Delhi Cbi Vs. Samay Singh Meena etc. Page No. 1 of 81 -2- 29.03.2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Special Judge (Pc Act) : Cbi - 03 : New Delhi District : Patiala House Court : New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""['S. C. Sharma', 'J. R. Priyani', 'B. P. Singh']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State (Cbi)', 'Cbi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Samay Singh Meena', 'Arvind Kumar Tony']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It was held by the ITAT, Delhi Bench in the case of G.E. Capital Transportation Financial Services Ltd. vs. CIT vide order dated 24th Feb., 2006, reported in (2006) 101 TTJ (Del) 298 that interest on delayed payment of lease rent, hire purchase instalment etc. is not interest on loans and advances but is compensation for late payment and hence not exigible to interest tax.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['ITAT, Delhi Bench']"", ""DATE"": ""['24th Feb., 2006']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['G.E. Capital Transportation Financial Services Ltd. vs. CIT', '(2006) 101 TTJ (Del) 298']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['ITAT, Delhi Bench']"", 'DATE': ""['24th Feb., 2006']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['G.E. Capital Transportation Financial Services Ltd. vs. CIT', '(2006) 101 TTJ (Del) 298']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was held by the ITAT, Delhi Bench in the case of G.E. Capital Transportation Financial Services Ltd. vs. CIT vide order dated 24th Feb., 2006, reported in (2006) 101 TTJ (Del) 298 that interest on delayed payment of lease rent, hire purchase instalment etc. is not interest on loans and advances but is compensation for late payment and hence not exigible to interest tax. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['ITAT, Delhi Bench']"", ""DATE"": ""['24th Feb., 2006']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['G.E. Capital Transportation Financial Services Ltd. vs. CIT', '(2006) 101 TTJ (Del) 298']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The policy also provides for insurance of risks which are not covered under section 95 of the Act by stipulating payment of extra premium.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 95']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 95']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The policy also provides for insurance of risks which are not covered under section 95 of the Act by stipulating payment of extra premium. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 95']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This Kh. No. 71/2 had been transferred by Parmanand during his life time to Roop Singh etc., P.W. 3 is Ramkisan (Patwari of village) Bagthari, at the relevant time.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Bagthari']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Parmanand', 'Roop Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Ramkisan']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Bagthari']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Parmanand', 'Roop Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Ramkisan']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This Kh. No. 71/2 had been transferred by Parmanand during his life time to Roop Singh etc., P.W. 3 is Ramkisan (Patwari of village) Bagthari, at the relevant time. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Bagthari']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Parmanand', 'Roop Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Ramkisan']""} </s>"
The appellants Dalip Singh and Battan Singh are said to have assaulted the two dead men Rattan and Bawa about twenty years before the occurrence.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Rattan', 'Bawa']"", ""PETITIONER"": ""['Dalip Singh', 'Battan Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Rattan', 'Bawa']"", 'PETITIONER': ""['Dalip Singh', 'Battan Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The appellants Dalip Singh and Battan Singh are said to have assaulted the two dead men Rattan and Bawa about twenty years before the occurrence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Rattan', 'Bawa']"", ""PETITIONER"": ""['Dalip Singh', 'Battan Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It is also relevant to refer to the observations made in judgment of Hon'ble the Apex Court rendered in Criminal Appeal No. 1602 of 2012 (Sahabuddin & Anr vs. State of Assam) dated 5.10.2012.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""['5.10.2012']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Criminal Appeal No. 1602 of 2012 (Sahabuddin & Anr vs. State of Assam)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': ""['5.10.2012']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Criminal Appeal No. 1602 of 2012 (Sahabuddin & Anr vs. State of Assam)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is also relevant to refer to the observations made in judgment of Hon'ble the Apex Court rendered in Criminal Appeal No. 1602 of 2012 (Sahabuddin & Anr vs. State of Assam) dated 5.10.2012. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""['5.10.2012']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Criminal Appeal No. 1602 of 2012 (Sahabuddin & Anr vs. State of Assam)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Exercising the power under section 398(2) of the Companies Act, the learned Judge directed NIIL to make good that loss which, according to him, could have been avoided by it ""by adopting a fairer process of communication"" with the Holding Company and ""a consequential dialogue"" with them, in the matter of the issue of rights shares at a premium.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['NIIL']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 398(2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Companies Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['NIIL']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 398(2)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Companies Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Exercising the power under section 398(2) of the Companies Act, the learned Judge directed NIIL to make good that loss which, according to him, could have been avoided by it ""by adopting a fairer process of communication"" with the Holding Company and ""a consequential dialogue"" with them, in the matter of the issue of rights shares at a premium. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['NIIL']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 398(2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Companies Act']"", ""WITNESS"": ""[]""} </s>"
"In support of the aforesaid submission the learned counsel have placed reliance on the decision of the Supreme Court in Maneka Gandhi v. Union of India (AIR 1978 SC 597) (supra) and Francis, Coralie Mullin v. Administrator, Union Territory of Delhi (1981) 1 SCC 608 : (AIR 1981 SC 746).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Maneka Gandhi v. Union of India (AIR 1978 SC 597)', 'Coralie Mullin v. Administrator, Union Territory of Delhi (1981) 1 SCC 608 : (AIR 1981 SC 746)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Maneka Gandhi v. Union of India (AIR 1978 SC 597)', 'Coralie Mullin v. Administrator, Union Territory of Delhi (1981) 1 SCC 608 : (AIR 1981 SC 746)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In support of the aforesaid submission the learned counsel have placed reliance on the decision of the Supreme Court in Maneka Gandhi v. Union of India (AIR 1978 SC 597) (supra) and Francis, Coralie Mullin v. Administrator, Union Territory of Delhi (1981) 1 SCC 608 : (AIR 1981 SC 746). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Maneka Gandhi v. Union of India (AIR 1978 SC 597)', 'Coralie Mullin v. Administrator, Union Territory of Delhi (1981) 1 SCC 608 : (AIR 1981 SC 746)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"(5) That the cross-objections filed by respondent No. 1 Gaffar Khan, owner of the car No. RJT 1058 also stand rejected simultaneously","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Gaffar Khan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Gaffar Khan']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (5) That the cross-objections filed by respondent No. 1 Gaffar Khan, owner of the car No. RJT 1058 also stand rejected simultaneously [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Gaffar Khan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The relevant provision is contained in Rule 28(A) of the Rules which prescribes the criteria, eligibility and procedure for promotion to Junior, Senior and other posts encadered in the Service, Under Sub-rule (5) of the Rule 28(A)","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rule 28(A)', 'Sub-rule (5) of the Rule 28(A)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Rule 28(A)', 'Sub-rule (5) of the Rule 28(A)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The relevant provision is contained in Rule 28(A) of the Rules which prescribes the criteria, eligibility and procedure for promotion to Junior, Senior and other posts encadered in the Service, Under Sub-rule (5) of the Rule 28(A) [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rule 28(A)', 'Sub-rule (5) of the Rule 28(A)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As can be seen from the above portion of the Judgment, the Division Bench affirmed the view taken by Swami, J. in Gwalior Rayon's case .","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Swami']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Gwalior Rayon']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Swami']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Gwalior Rayon']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As can be seen from the above portion of the Judgment, the Division Bench affirmed the view taken by Swami, J. in Gwalior Rayon's case . [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Swami']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Gwalior Rayon']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Munnu Raja and another v. State of M.P., 1976 AIR (SC) 2199, Hon'ble Supreme Court of India held that statement by victim recorded as FIR can be treated as dying declaration and such statement is admissible under Section 32 (a) of Evidence Act and corroboration is not necessary.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Munnu Raja and another v. State of M.P., 1976 AIR (SC) 2199']"", ""PROVISION"": ""['Section 32 (a)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court of India']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Munnu Raja and another v. State of M.P., 1976 AIR (SC) 2199']"", 'PROVISION': ""['Section 32 (a)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Evidence Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Munnu Raja and another v. State of M.P., 1976 AIR (SC) 2199, Hon'ble Supreme Court of India held that statement by victim recorded as FIR can be treated as dying declaration and such statement is admissible under Section 32 (a) of Evidence Act and corroboration is not necessary. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Munnu Raja and another v. State of M.P., 1976 AIR (SC) 2199']"", ""PROVISION"": ""['Section 32 (a)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act']"", ""WITNESS"": ""[]""} </s>"
"Excluded from the ambit of Section 2(wa) of the Code, such a complainant would not be entitled to avail the remedy of appeal under the proviso to Section 372 of the Code and must continue to avail the special remedy of appeal provided under Section 378(4) of the Code after obtaining special leave.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 2(wa)', 'Section 372', 'Section 378(4)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 2(wa)', 'Section 372', 'Section 378(4)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Excluded from the ambit of Section 2(wa) of the Code, such a complainant would not be entitled to avail the remedy of appeal under the proviso to Section 372 of the Code and must continue to avail the special remedy of appeal provided under Section 378(4) of the Code after obtaining special leave. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 2(wa)', 'Section 372', 'Section 378(4)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Sh. Rajesh Malik, ACJ­cum­CCJ­cum Arc (North), Rohini Court, Delhi E. No. 468/06/03 Unique Id No.: 02404C0075382006 In the matter of : 1. Sh. Tulsi Dass S/o Sh. Shyam Sunder R/o Gh­13/886, Paschim Vihar, New Delhi. ........Petitioner Versus 1. Ashok Kumar Kainth (Deceased) 2. Smt. Chander Kanta Kainth W/o Late Sh. Ashok Kumar Kainth 3. Sh. Jatin Kainth S/o Sh. Ashok Kumar Kainth 4. Sh. Ritin Kainth S/o Sh. Ashok Kumar Kainth All Resident of Flat no. A2/A4, Jhule Lal Sindhu Nagar co­operative Society, Road no. 44, Pitampura, New Delhi. .... Respondent E. No. 468/06/03 Tulsi Dass v Ashok Kumar Kainth 1 of 21 Date of institution : 31.03.2003 Date of reserving the order : 24.07.2014 Date of pronouncement of the order : 30.07.2014 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['ACJ\\xadcum\\xadCCJ\\xadcum Arc (North), Rohini Court, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rajesh Malik']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Tulsi Dass']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ashok Kumar Kainth', 'Chander Kanta Kainth', 'Jatin Kainth', 'Ritin Kainth']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['ACJ\\xadcum\\xadCCJ\\xadcum Arc (North), Rohini Court, Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Rajesh Malik']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Tulsi Dass']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Ashok Kumar Kainth', 'Chander Kanta Kainth', 'Jatin Kainth', 'Ritin Kainth']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Sh. Rajesh Malik, ACJ­cum­CCJ­cum Arc (North), Rohini Court, Delhi E. No. 468/06/03 Unique Id No.: 02404C0075382006 In the matter of : 1. Sh. Tulsi Dass S/o Sh. Shyam Sunder R/o Gh­13/886, Paschim Vihar, New Delhi. ........Petitioner Versus 1. Ashok Kumar Kainth (Deceased) 2. Smt. Chander Kanta Kainth W/o Late Sh. Ashok Kumar Kainth 3. Sh. Jatin Kainth S/o Sh. Ashok Kumar Kainth 4. Sh. Ritin Kainth S/o Sh. Ashok Kumar Kainth All Resident of Flat no. A2/A4, Jhule Lal Sindhu Nagar co­operative Society, Road no. 44, Pitampura, New Delhi. .... Respondent E. No. 468/06/03 Tulsi Dass v Ashok Kumar Kainth 1 of 21 Date of institution : 31.03.2003 Date of reserving the order : 24.07.2014 Date of pronouncement of the order : 30.07.2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['ACJ\\xadcum\\xadCCJ\\xadcum Arc (North), Rohini Court, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rajesh Malik']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Tulsi Dass']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ashok Kumar Kainth', 'Chander Kanta Kainth', 'Jatin Kainth', 'Ritin Kainth']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"28. R. W. 2, Shyamapada is the priest of the Respondent.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Shyamapada']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Shyamapada']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 28. R. W. 2, Shyamapada is the priest of the Respondent. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Shyamapada']""} </s>"
"In Ethiopian Airlines Vs. Ganesh Narain Saboo (2011) 8 SCC 539, while examining the provisions of Code, the Hon'ble Supreme Court held that the 'Court' in CPC exclusively refers to Civil Court.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ethiopian Airlines Vs. Ganesh Narain Saboo (2011) 8 SCC 539']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Ethiopian Airlines Vs. Ganesh Narain Saboo (2011) 8 SCC 539']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['CPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Ethiopian Airlines Vs. Ganesh Narain Saboo (2011) 8 SCC 539, while examining the provisions of Code, the Hon'ble Supreme Court held that the 'Court' in CPC exclusively refers to Civil Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ethiopian Airlines Vs. Ganesh Narain Saboo (2011) 8 SCC 539']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""} </s>"
"The plaintiff turned down the proposal even on that occasion, it was thereafter that the appellant went to the plaintiff with Champalal Jain (P. W. 1) and Bihari Lal Shah (P. W. 3).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Champalal Jain', 'Bihari Lal Shah']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Champalal Jain', 'Bihari Lal Shah']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The plaintiff turned down the proposal even on that occasion, it was thereafter that the appellant went to the plaintiff with Champalal Jain (P. W. 1) and Bihari Lal Shah (P. W. 3). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Champalal Jain', 'Bihari Lal Shah']""} </s>"
"[1960] 2 SCR 311, The General Manager, Southern Railway v. Rangachari","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['[1960] 2 SCR 311, The General Manager, Southern Railway v. Rangachari']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['[1960] 2 SCR 311, The General Manager, Southern Railway v. Rangachari']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: [1960] 2 SCR 311, The General Manager, Southern Railway v. Rangachari [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['[1960] 2 SCR 311, The General Manager, Southern Railway v. Rangachari']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Even otherwise, there is no cogent and convincing evidence that mother of the prosecutrix had given to her Rs.4000/­ at the time she left for Delhi.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Delhi']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Even otherwise, there is no cogent and convincing evidence that mother of the prosecutrix had given to her Rs.4000/­ at the time she left for Delhi. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"If that be right, then the fee leviable on an appeal is the fee payable for the time being to the officers of the High Court by virtue of the High Courts Charter Act directly.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['High Courts Charter Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['High Courts Charter Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: If that be right, then the fee leviable on an appeal is the fee payable for the time being to the officers of the High Court by virtue of the High Courts Charter Act directly."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['High Courts Charter Act']"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Patna Criminal Miscellaneous No.39130 of 2014 Arising Out of PS.Case No. -33 Year- 1992 Thana -C.B.I Case District- Muzaffarpur =========================================================== Ajay Kumar @ Ajay Kumar Singh son of late Ram Prakash Singh, resident of village - Haibatpur, P.S. Rampur Chauram, District - Arwal, presently posted as an Assistant, Forest and Environment Department, Nepal House, Doranda, Ranchi (Jharkhand ) .... .... Petitioner/s Versus The State of Bihar through the Vigilance .... .... Opposite Party/s =========================================================== Appearance : For the Petitioner/s : Mr. Rana Ishwar Chandra, Adv. For the Opposite Party/s : Mr. =========================================================== Coram: Honourable Mr. Justice Mohit Kumar Shah Cav Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Mohit Kumar Shah']"", ""LAWYER"": ""['Rana Ishwar Chandra']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ajay Kumar @ Ajay Kumar Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Bihar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Patna']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Mohit Kumar Shah']"", 'LAWYER': ""['Rana Ishwar Chandra']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ajay Kumar @ Ajay Kumar Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Bihar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Patna Criminal Miscellaneous No.39130 of 2014 Arising Out of PS.Case No. -33 Year- 1992 Thana -C.B.I Case District- Muzaffarpur =========================================================== Ajay Kumar @ Ajay Kumar Singh son of late Ram Prakash Singh, resident of village - Haibatpur, P.S. Rampur Chauram, District - Arwal, presently posted as an Assistant, Forest and Environment Department, Nepal House, Doranda, Ranchi (Jharkhand ) .... .... Petitioner/s Versus The State of Bihar through the Vigilance .... .... Opposite Party/s =========================================================== Appearance : For the Petitioner/s : Mr. Rana Ishwar Chandra, Adv. For the Opposite Party/s : Mr. =========================================================== Coram: Honourable Mr. Justice Mohit Kumar Shah Cav Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Mohit Kumar Shah']"", ""LAWYER"": ""['Rana Ishwar Chandra']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ajay Kumar @ Ajay Kumar Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Bihar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It seems that it was sent to his old address.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It seems that it was sent to his old address. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"If argument of Mr.Chagla is accepted the words ""under sec. 293"" would practically render superfluous and meaningless.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Chagla']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['sec. 293']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Chagla']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['sec. 293']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: If argument of Mr.Chagla is accepted the words ""under sec. 293"" would practically render superfluous and meaningless. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Chagla']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['sec. 293']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The right of free speech is guaranteed to every citizen so that he may reach the minds of willing listeners and to do so, there must be opportunity to win the attention.......Opportu nity to gain the public ear, is not by objec tionably amplified sound on the streets.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The right of free speech is guaranteed to every citizen so that he may reach the minds of willing listeners and to do so, there must be opportunity to win the attention.......Opportu nity to gain the public ear, is not by objec tionably amplified sound on the streets. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
On his disclosure the appellant Nandu @ Nand Lal was apprehended from his room in Gita Nagar.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Gita Nagar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Nandu @ Nand Lal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Gita Nagar']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Nandu @ Nand Lal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On his disclosure the appellant Nandu @ Nand Lal was apprehended from his room in Gita Nagar. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Gita Nagar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Nandu @ Nand Lal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Case No.: Appeal (civil) 3595-3612 of 1999 Petitioner: Secretary, State of Karnataka and others Respondent: Umadevi and others Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Secretary, State of Karnataka']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Umadevi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Secretary, State of Karnataka']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Umadevi']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 3595-3612 of 1999 Petitioner: Secretary, State of Karnataka and others Respondent: Umadevi and others Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Secretary, State of Karnataka']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Umadevi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (civil) 1853 of 2005 Petitioner: M/s Master Marine Services Pvt. Ltd. Respondent: Metcalfe & Hodgkinson Pvt. Ltd. & Anr. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M/s Master Marine Services Pvt. Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Metcalfe & Hodgkinson Pvt. Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['M/s Master Marine Services Pvt. Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Metcalfe & Hodgkinson Pvt. Ltd.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 1853 of 2005 Petitioner: M/s Master Marine Services Pvt. Ltd. Respondent: Metcalfe & Hodgkinson Pvt. Ltd. & Anr. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M/s Master Marine Services Pvt. Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Metcalfe & Hodgkinson Pvt. Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Roop Kishore v. United Provinces Government, AIR 1945 All 24, was cited with approval, which contained the observation that in some cases, such an application may not be a step in the proceedings.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Roop Kishore v. United Provinces Government, AIR 1945 All 24']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Roop Kishore v. United Provinces Government, AIR 1945 All 24']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Roop Kishore v. United Provinces Government, AIR 1945 All 24, was cited with approval, which contained the observation that in some cases, such an application may not be a step in the proceedings. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Roop Kishore v. United Provinces Government, AIR 1945 All 24']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
P.W. 5 was the doctor who had examined P.W.4 Meena and issued Ext.P6 wound certificate.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Meena']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Meena']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: P.W. 5 was the doctor who had examined P.W.4 Meena and issued Ext.P6 wound certificate. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Meena']""} </s>"
"It is relevant to refer to the approach made by the Hon'ble Supreme Court in Manchegowda to prevent violation of the rights guaranteed by the Constitution by saving certain transfers, by construing Section 4 of the Act as not to have the effect of rendering void the title of any transferee which was not voidable at the date of the commencement of the Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""['Manchegowda']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 4']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': ""['Manchegowda']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 4']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is relevant to refer to the approach made by the Hon'ble Supreme Court in Manchegowda to prevent violation of the rights guaranteed by the Constitution by saving certain transfers, by construing Section 4 of the Act as not to have the effect of rendering void the title of any transferee which was not voidable at the date of the commencement of the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""['Manchegowda']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 4']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"In the circumstances, we find that he has engaged himself both in abetting smuggling of goods, as has been found in the order of detention, and he has also been dealing in the contraband Smuggled goods on behalf of Dawood Ibrahim in India.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dawood Ibrahim']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Dawood Ibrahim']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the circumstances, we find that he has engaged himself both in abetting smuggling of goods, as has been found in the order of detention, and he has also been dealing in the contraband Smuggled goods on behalf of Dawood Ibrahim in India. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dawood Ibrahim']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Hence, in matters of account, although not barred by the Statute of Limitations, courts of equity refused.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Hence, in matters of account, although not barred by the Statute of Limitations, courts of equity refused. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The conviction of Maganlal under section 121 was thus upheld.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Maganlal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 121']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Maganlal']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 121']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The conviction of Maganlal under section 121 was thus upheld. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Maganlal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 121']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The purport of the new clause was that the expression ""repeal"" includes ""omission"" and ""deletion"".","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The purport of the new clause was that the expression ""repeal"" includes ""omission"" and ""deletion"". [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the meanwhile, P.W.25 prepared Ext.P8 scene mahazar.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the meanwhile, P.W.25 prepared Ext.P8 scene mahazar. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Section 34 deals with the power of the Academic Council of the University to make Regulations for the purposes mentioned in that section.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 34']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 34']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Section 34 deals with the power of the Academic Council of the University to make Regulations for the purposes mentioned in that section. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 34']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"S.N. Jha, J, speaking for the Court in S.S. Ghosh's case 1985 (1) SLR 31, observed as under:","{""CASE_NUMBER"": ""['1985 (1) SLR 31']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['S.N. Jha']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['S.S. Ghosh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['1985 (1) SLR 31']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['S.N. Jha']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['S.S. Ghosh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: S.N. Jha, J, speaking for the Court in S.S. Ghosh's case 1985 (1) SLR 31, observed as under: [/INST]
 {""CASE_NUMBER"": ""['1985 (1) SLR 31']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['S.N. Jha']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['S.S. Ghosh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Hukam Chand Shyam Lal Vs. Respondent: Union Of India And Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Hukam Chand Shyam Lal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union Of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Hukam Chand Shyam Lal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Union Of India']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Hukam Chand Shyam Lal Vs. Respondent: Union Of India And Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Hukam Chand Shyam Lal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union Of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
For these reasons we are of the view that the said statement by appellant Arun to Bhola Nath Das immediately on the publication of the photograph of Sadhana in Swadhinata was rightly admitted by the learned Judge m evidence and is an incriminating circumstance against appellant Arun.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Bhola Nath Das', 'Sadhana']"", ""PETITIONER"": ""['Arun']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Bhola Nath Das', 'Sadhana']"", 'PETITIONER': ""['Arun']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: For these reasons we are of the view that the said statement by appellant Arun to Bhola Nath Das immediately on the publication of the photograph of Sadhana in Swadhinata was rightly admitted by the learned Judge m evidence and is an incriminating circumstance against appellant Arun. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Bhola Nath Das', 'Sadhana']"", ""PETITIONER"": ""['Arun']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"is that while two Departments of the Government have taken one view the Department of the Comptroller and Auditor-General has taken a contrary view, which is neither warranted nor tenable.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Department of the Comptroller and Auditor-General']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Department of the Comptroller and Auditor-General']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: is that while two Departments of the Government have taken one view the Department of the Comptroller and Auditor-General has taken a contrary view, which is neither warranted nor tenable. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Department of the Comptroller and Auditor-General']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The assessee further pointed out to entries of books of accounts where material, funds and labour of one unit were transferred to other to show interdependence of units on each other.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The assessee further pointed out to entries of books of accounts where material, funds and labour of one unit were transferred to other to show interdependence of units on each other. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Against this order, appeals were preferred by 18 claimants for permits before the State Transport Appellate Tribunal (hereinafter called ""the Appellate Tribunal); amongst them was the appellant Syed Yakoob and respondent No. 1 K.S. Radhakrishnan.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Syed Yakoob']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['K.S. Radhakrishnan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Syed Yakoob']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['K.S. Radhakrishnan']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Against this order, appeals were preferred by 18 claimants for permits before the State Transport Appellate Tribunal (hereinafter called ""the Appellate Tribunal); amongst them was the appellant Syed Yakoob and respondent No. 1 K.S. Radhakrishnan. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Syed Yakoob']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['K.S. Radhakrishnan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In this context, they relied upon the judgment passed by Hon'ble the Apex Court in case of ""Mithu Singh Vs. State of Punjab"", [AIR 2001 SC 1929], in which it is held that merely because accused knew that co­accused was himself armed with a gun and also had knowledge about previous enmity between co­accused and deceased, inference that accused had common intention to kill cannot be drawn.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Mithu Singh Vs. State of Punjab\"", [AIR 2001 SC 1929]']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[\'Mithu Singh Vs. State of Punjab"", [AIR 2001 SC 1929]\']', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this context, they relied upon the judgment passed by Hon'ble the Apex Court in case of ""Mithu Singh Vs. State of Punjab"", [AIR 2001 SC 1929], in which it is held that merely because accused knew that co­accused was himself armed with a gun and also had knowledge about previous enmity between co­accused and deceased, inference that accused had common intention to kill cannot be drawn. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Mithu Singh Vs. State of Punjab\"", [AIR 2001 SC 1929]']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The petitioner-Committee of Management is by and large, aggrieved by the refusal of the Commission to accord approval to the proposal to terminate the services of Saraswat.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Saraswat']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Saraswat']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioner-Committee of Management is by and large, aggrieved by the refusal of the Commission to accord approval to the proposal to terminate the services of Saraswat. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Saraswat']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Sh Sunil K. Aggarwal: Addl. District Judge (Central) 10: Delhi Suit No. 106/06 M/s Azureways Cargo Pvt. Ltd., 252 H, Kailash Plaza, 2nd Floor, Sant Nagar, East of Kailash, New Delhi­ 110065 ..... Plaintiff. Versus Sh. Rakesh Juneja, Prop. of M/s Bagmakers, Vardhman Tower, G­29, Community Centre, Vikaspuri, New Delhi­18 .....Defendant Plaint presented on 31.05.2001 J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Addl. District Judge (Central) 10: Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sunil K. Aggarwal']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Azureways Cargo Pvt. Ltd., 252 H, Kailash Plaza, 2nd Floor, Sant Nagar, East of Kailash, New Delhi\\xad 110065']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Rakesh Juneja']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Addl. District Judge (Central) 10: Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Sunil K. Aggarwal']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Azureways Cargo Pvt. Ltd., 252 H, Kailash Plaza, 2nd Floor, Sant Nagar, East of Kailash, New Delhi\\xad 110065']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Rakesh Juneja']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Sh Sunil K. Aggarwal: Addl. District Judge (Central) 10: Delhi Suit No. 106/06 M/s Azureways Cargo Pvt. Ltd., 252 H, Kailash Plaza, 2nd Floor, Sant Nagar, East of Kailash, New Delhi­ 110065 ..... Plaintiff. Versus Sh. Rakesh Juneja, Prop. of M/s Bagmakers, Vardhman Tower, G­29, Community Centre, Vikaspuri, New Delhi­18 .....Defendant Plaint presented on 31.05.2001 J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Addl. District Judge (Central) 10: Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sunil K. Aggarwal']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Azureways Cargo Pvt. Ltd., 252 H, Kailash Plaza, 2nd Floor, Sant Nagar, East of Kailash, New Delhi\\xad 110065']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Rakesh Juneja']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On perusal of EX.DW6/A against Reeta Verma and Manish Agrawal Rajesh Verma, his brother in relation of Kamal and brother in law of Smt. ____x_____. 26. DW7 deposed that on 24.8.2009 he was working as Duty Officer at P.S. Bhajan Pura and he had recorded FIR No. 333/09 at P.S. Bhajan Pura and he proved the computerized copy of FIR as EX.DW7/A.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['24.8.2009']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['P.S. Bhajan Pura']"", ""OTHER_PERSON"": ""['Reeta Verma', 'Manish Agrawal Rajesh Verma', 'Kamal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['24.8.2009']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['P.S. Bhajan Pura']"", 'OTHER_PERSON': ""['Reeta Verma', 'Manish Agrawal Rajesh Verma', 'Kamal']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On perusal of EX.DW6/A against Reeta Verma and Manish Agrawal Rajesh Verma, his brother in relation of Kamal and brother in law of Smt. ____x_____. 26. DW7 deposed that on 24.8.2009 he was working as Duty Officer at P.S. Bhajan Pura and he had recorded FIR No. 333/09 at P.S. Bhajan Pura and he proved the computerized copy of FIR as EX.DW7/A. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['24.8.2009']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['P.S. Bhajan Pura']"", ""OTHER_PERSON"": ""['Reeta Verma', 'Manish Agrawal Rajesh Verma', 'Kamal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"W. S. Barlingay and A. G. Ratnaparkhi, for intervener No. 5.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['W. S. Barlingay', 'A. G. Ratnaparkhi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['W. S. Barlingay', 'A. G. Ratnaparkhi']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: W. S. Barlingay and A. G. Ratnaparkhi, for intervener No. 5. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['W. S. Barlingay', 'A. G. Ratnaparkhi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Karnataka At Bengaluru Dated This The 17Th Day Of July 2017 Before The Hon'Ble Mr. Justice N.K. Sudhindrarao M.F.A.No.5061/2014 C/W M.F.A.No.3224/2014 And M.F.A.No.3225/2014(MV) In M.F.A.No.5061/2014: Between: 1. Ramaiah @ Ramanna S/O Gaviappa Aged About 51 Years 2. Smt.Jayamma W/O Ramanna Aged About 44 Years Both The Appellants Are Residing At No.20/A, 6Th Cross Om Shivashakthi Nagar Chunchaghatta Main Raod, Bengaluru - 560 062. Both Were Previously Resided At No.1354, 8Th Cross Shivashakthi Nagar Chunchaghatta Main Raod, Bengaluru - 560 062. ...Appellants (By Sri. F S Dabali, Advocate) 2 And: 1. R.D.Palaksha S/O Dhanaguru Shetty Age Major, Residing At No.317/5, Nimishambha Layout, Kuvempu Nagar Mysuru - 570 001. 2. The Regional Manager United India Insurance Company Limited M.G. Road Bengaluru - 560 001. ...Respondents (By Sri C S Prem Kumar, Advocate For R-1 Sri B C Seetharama Rao, Advocate For R-2) This Mfa Is Filed Under Section 173(1) Of Mv Act Against The Judgment And Award Dated 2.1.2014 Passed In Mvc No.1854/2013 On The File Of The Xxi Acmm & Xxiii A.S.C.J., Bengaluru, Allowing The Claim Petition For Compensation And Seeking Enhancement Of Compensation. In M.F.A.No.3224/2014: Between: United India Insurance Co., Ltd., Regional Office Krishi Bhavan Building Nrupathunga Road Bengaluru - 560 009 Rep. By Its Mr.Sandeep Kumar Administrative Officer. ...Appellant (By Sri B C Seetharama Rao, Advocate) 3 And: 1. Sri Yashawanth Kumar N S/O Nagaraja M Aged About 22 Years Residing At No.132, Beereshwara Nagar Kuvempu Road Bengaluru - 560 062. 2. Sri Chandraiah Y B Major, No.19, I Cross Cholur Palya, Magadi Road Bengaluru - 560 023. (Previous Rc Owner Of Cab No.Ka.02/D-5542) 3. Sr R D Palaksha Major, S/O Dhanaguru Shetty No.317/5, Nimishambha Layout Kuvempunagar, Mysuru - 570 001. (Insured Of Cab No.Ka.02/D-5542) ...Respondents (By Sri C S Premkumar, Advocate For R-3 Notice To R-1 & 2 Is Held Sufficient V/O Dated:17/7/2017) This Mfa Is Filed Under Section 173(1) Of Mv Act Against The Judgment And Award Dated 2.1.2014 Passed In Mvc No.3508/2012 On The File Of The Xxi Acmm & Xxiii Ascj, Bengaluru, Awarding Compesnation Of Rs.2,65,408/- With Interest @ 6% P.A From The Date Of Petition Till Deposit. In M.F.A.No.3225/2014: Between: United India Insurance Co., Ltd., Regional Office Krishi Bhavan Building Nrupathunga Road 4 Bengaluru - 560 009 Rep. By Its Mr.Sandeep Kumar Administrative Officer. ...Appellant (By Sri B C Seetharama Rao, Advocate) And: 1. Sri Ramaiah @ Ramanna Aged About 51 Years S/O Gaviappa 2. Smt.Jayamma Aged About 44 Years W/O Sri Ramanna Both Are Residing At No.20/A 6Th Cross Om Shivashakthi Nagar Chunchaghatta Main Raod, Bengaluru - 560 062. ...Respondents (By Sri F S Dabali, Advocate, For R-1 & 2 Sri C S Premkumar, Advocate For R-3) This Mfa Is Filed Under Section 173(1) Of Mv Act Against The Judgment And Award Dated 2.1.2014 Passed In Mvc No.1854/2013 On The File Of The Xxiii Additional Small Causes Judge, Xxi Acmm, Court Of Small Causes, Mact, Bengaluru, Awarding A Compesnation Of Rs.7,03,260/- With Interest @ 6% P.A From The Date Of Petition Till The Date Of Deposit By Respondents In Both The Cases. These MFAs Coming On For Admission This Day, The Court Delivered The Following: Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bengaluru']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['N.K. Sudhindrarao']"", ""LAWYER"": ""['F S Dabali', 'C S Prem Kumar', 'B C Seetharama Rao', 'C S Premkumar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ramaiah @ Ramanna', 'Jayamma', 'United India Insurance Co., Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['R.D.Palaksha', 'Regional Manager United India Insurance Company Limited M.G. Road Bengaluru - 560 001', 'Yashawanth Kumar N', 'Chandraiah Y B', 'R D Palaksha', 'Ramaiah @ Ramanna', 'Jayamma']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Karnataka At Bengaluru']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['N.K. Sudhindrarao']"", 'LAWYER': ""['F S Dabali', 'C S Prem Kumar', 'B C Seetharama Rao', 'C S Premkumar']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ramaiah @ Ramanna', 'Jayamma', 'United India Insurance Co., Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['R.D.Palaksha', 'Regional Manager United India Insurance Company Limited M.G. Road Bengaluru - 560 001', 'Yashawanth Kumar N', 'Chandraiah Y B', 'R D Palaksha', 'Ramaiah @ Ramanna', 'Jayamma']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Karnataka At Bengaluru Dated This The 17Th Day Of July 2017 Before The Hon'Ble Mr. Justice N.K. Sudhindrarao M.F.A.No.5061/2014 C/W M.F.A.No.3224/2014 And M.F.A.No.3225/2014(MV) In M.F.A.No.5061/2014: Between: 1. Ramaiah @ Ramanna S/O Gaviappa Aged About 51 Years 2. Smt.Jayamma W/O Ramanna Aged About 44 Years Both The Appellants Are Residing At No.20/A, 6Th Cross Om Shivashakthi Nagar Chunchaghatta Main Raod, Bengaluru - 560 062. Both Were Previously Resided At No.1354, 8Th Cross Shivashakthi Nagar Chunchaghatta Main Raod, Bengaluru - 560 062. ...Appellants (By Sri. F S Dabali, Advocate) 2 And: 1. R.D.Palaksha S/O Dhanaguru Shetty Age Major, Residing At No.317/5, Nimishambha Layout, Kuvempu Nagar Mysuru - 570 001. 2. The Regional Manager United India Insurance Company Limited M.G. Road Bengaluru - 560 001. ...Respondents (By Sri C S Prem Kumar, Advocate For R-1 Sri B C Seetharama Rao, Advocate For R-2) This Mfa Is Filed Under Section 173(1) Of Mv Act Against The Judgment And Award Dated 2.1.2014 Passed In Mvc No.1854/2013 On The File Of The Xxi Acmm & Xxiii A.S.C.J., Bengaluru, Allowing The Claim Petition For Compensation And Seeking Enhancement Of Compensation. In M.F.A.No.3224/2014: Between: United India Insurance Co., Ltd., Regional Office Krishi Bhavan Building Nrupathunga Road Bengaluru - 560 009 Rep. By Its Mr.Sandeep Kumar Administrative Officer. ...Appellant (By Sri B C Seetharama Rao, Advocate) 3 And: 1. Sri Yashawanth Kumar N S/O Nagaraja M Aged About 22 Years Residing At No.132, Beereshwara Nagar Kuvempu Road Bengaluru - 560 062. 2. Sri Chandraiah Y B Major, No.19, I Cross Cholur Palya, Magadi Road Bengaluru - 560 023. (Previous Rc Owner Of Cab No.Ka.02/D-5542) 3. Sr R D Palaksha Major, S/O Dhanaguru Shetty No.317/5, Nimishambha Layout Kuvempunagar, Mysuru - 570 001. (Insured Of Cab No.Ka.02/D-5542) ...Respondents (By Sri C S Premkumar, Advocate For R-3 Notice To R-1 & 2 Is Held Sufficient V/O Dated:17/7/2017) This Mfa Is Filed Under Section 173(1) Of Mv Act Against The Judgment And Award Dated 2.1.2014 Passed In Mvc No.3508/2012 On The File Of The Xxi Acmm & Xxiii Ascj, Bengaluru, Awarding Compesnation Of Rs.2,65,408/- With Interest @ 6% P.A From The Date Of Petition Till Deposit. In M.F.A.No.3225/2014: Between: United India Insurance Co., Ltd., Regional Office Krishi Bhavan Building Nrupathunga Road 4 Bengaluru - 560 009 Rep. By Its Mr.Sandeep Kumar Administrative Officer. ...Appellant (By Sri B C Seetharama Rao, Advocate) And: 1. Sri Ramaiah @ Ramanna Aged About 51 Years S/O Gaviappa 2. Smt.Jayamma Aged About 44 Years W/O Sri Ramanna Both Are Residing At No.20/A 6Th Cross Om Shivashakthi Nagar Chunchaghatta Main Raod, Bengaluru - 560 062. ...Respondents (By Sri F S Dabali, Advocate, For R-1 & 2 Sri C S Premkumar, Advocate For R-3) This Mfa Is Filed Under Section 173(1) Of Mv Act Against The Judgment And Award Dated 2.1.2014 Passed In Mvc No.1854/2013 On The File Of The Xxiii Additional Small Causes Judge, Xxi Acmm, Court Of Small Causes, Mact, Bengaluru, Awarding A Compesnation Of Rs.7,03,260/- With Interest @ 6% P.A From The Date Of Petition Till The Date Of Deposit By Respondents In Both The Cases. These MFAs Coming On For Admission This Day, The Court Delivered The Following: Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bengaluru']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['N.K. Sudhindrarao']"", ""LAWYER"": ""['F S Dabali', 'C S Prem Kumar', 'B C Seetharama Rao', 'C S Premkumar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ramaiah @ Ramanna', 'Jayamma', 'United India Insurance Co., Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['R.D.Palaksha', 'Regional Manager United India Insurance Company Limited M.G. Road Bengaluru - 560 001', 'Yashawanth Kumar N', 'Chandraiah Y B', 'R D Palaksha', 'Ramaiah @ Ramanna', 'Jayamma']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (civil) 7467 of 1996 Petitioner: K.S. Vidyanadam And Ors. Respondent: Vairavan Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['K.S. Vidyanadam']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Vairavan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['K.S. Vidyanadam']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Vairavan']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 7467 of 1996 Petitioner: K.S. Vidyanadam And Ors. Respondent: Vairavan Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['K.S. Vidyanadam']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Vairavan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"R.K. Garg, R.K. Jain and Guptha Jain for the Respondents.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['R.K. Garg', 'R.K. Jain', 'Guptha Jain']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['R.K. Garg', 'R.K. Jain', 'Guptha Jain']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: R.K. Garg, R.K. Jain and Guptha Jain for the Respondents. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['R.K. Garg', 'R.K. Jain', 'Guptha Jain']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
On this reasoning also we hold that the order of the CIT (Appeals) is correct.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On this reasoning also we hold that the order of the CIT (Appeals) is correct. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"spb/- 1 wp1483-98.sxw In The High Court Of Judicature At Bombay Civil Appellate Side Jurisdiction Writ Petition No. 1483 Of 1998 1) Ramchandra Vasudeo Patankar, | ... Petitioners. Age about 81 yrs.,Occ.Nil,R/o 249, | (Org.Plffs-Landlords) Mangalwar Peth, Bhor, Dist.Pune. | | 2) Prabhakar Vasudeo Patankar, | deceased through his legal heirs : | a) Mr.Dhananjay Prabhakar Patankar, ig | R/at 249 Mangalwar Peth, Bhor, Dist.Pune. | b) Mrs. Jayashri Shripad Mahajani, Ambar | Plaza, Behind Syndicate Bank Bhalerao | Colony, Talegaon, Tal.Maval, Dist.Pune. | c) Mrs. Manjushri Hemant Soman | A 21 Poorva Hsg.Society Panch Pakhadi, | Near Saraswati English School, Thane. | Dist.Thane. | d) Mrs. Maya Prakash Abhyankar, | 356 Madhali Ali, Wai, Tal. Wai. | | 3) Narayan Moreshwar Patankar, | Age about 66 yrs.Occ.Nil. R/o.249, | Mangalwar Peth, Bhor, Dist.Pune. | V/s. Mukund Dattatraya Desai | ... Respondent. Age about 60 yrs., Occ. (Nil as per Pltffs' ) | (Org.Deft-Tenant) Astrology & Cloth Shop (alleged), R/o.249, Mangalwar Peth, Bhor, Tal.Bhor, Dist.Pune. --- Mr. Vijaykumar G. Peshave for the Petitioners. Mr.V.D. Borwankar for the Respondent. ----- spb/- 2 wp1483-98.sxw Coram : D. G. Karnik, J. Date : 05th January, 2011. Oral Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D. G. Karnik']"", ""LAWYER"": ""['Vijaykumar G. Peshave', 'V.D. Borwankar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ramchandra Vasudeo Patankar', 'Prabhakar Vasudeo Patankar', 'Narayan Moreshwar Patankar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Mukund Dattatraya Desai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['D. G. Karnik']"", 'LAWYER': ""['Vijaykumar G. Peshave', 'V.D. Borwankar']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ramchandra Vasudeo Patankar', 'Prabhakar Vasudeo Patankar', 'Narayan Moreshwar Patankar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Mukund Dattatraya Desai']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: spb/- 1 wp1483-98.sxw In The High Court Of Judicature At Bombay Civil Appellate Side Jurisdiction Writ Petition No. 1483 Of 1998 1) Ramchandra Vasudeo Patankar, | ... Petitioners. Age about 81 yrs.,Occ.Nil,R/o 249, | (Org.Plffs-Landlords) Mangalwar Peth, Bhor, Dist.Pune. | | 2) Prabhakar Vasudeo Patankar, | deceased through his legal heirs : | a) Mr.Dhananjay Prabhakar Patankar, ig | R/at 249 Mangalwar Peth, Bhor, Dist.Pune. | b) Mrs. Jayashri Shripad Mahajani, Ambar | Plaza, Behind Syndicate Bank Bhalerao | Colony, Talegaon, Tal.Maval, Dist.Pune. | c) Mrs. Manjushri Hemant Soman | A 21 Poorva Hsg.Society Panch Pakhadi, | Near Saraswati English School, Thane. | Dist.Thane. | d) Mrs. Maya Prakash Abhyankar, | 356 Madhali Ali, Wai, Tal. Wai. | | 3) Narayan Moreshwar Patankar, | Age about 66 yrs.Occ.Nil. R/o.249, | Mangalwar Peth, Bhor, Dist.Pune. | V/s. Mukund Dattatraya Desai | ... Respondent. Age about 60 yrs., Occ. (Nil as per Pltffs' ) | (Org.Deft-Tenant) Astrology & Cloth Shop (alleged), R/o.249, Mangalwar Peth, Bhor, Tal.Bhor, Dist.Pune. --- Mr. Vijaykumar G. Peshave for the Petitioners. Mr.V.D. Borwankar for the Respondent. ----- spb/- 2 wp1483-98.sxw Coram : D. G. Karnik, J. Date : 05th January, 2011. Oral Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D. G. Karnik']"", ""LAWYER"": ""['Vijaykumar G. Peshave', 'V.D. Borwankar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ramchandra Vasudeo Patankar', 'Prabhakar Vasudeo Patankar', 'Narayan Moreshwar Patankar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Mukund Dattatraya Desai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Patna Criminal Revision No.544 of 2010 ====================================================== Arvind Kumar S/O Late Biyogi Lal Choudhary Residing At Present At 402 Tulip Cooperative Society,Mahada Building No.6,Mahada,Adarsh Nagar Andheri,West Mumbai And Permanent R/O Shahpur,P.S.-Tisiyoti, Dist.- Vaishali .... .... Petitioner/s Versus 1. The State Of Bihar 2. M/S Ashok Leyland Finance Through Shri Kashi Nath Rai,Branch Manager, Exhibition Road, P.S.-Gandhi Maidan,Dist.-Patna. .... .... Respondent/s ====================================================== Appearance : For the Petitioner/s : Mr. G.P.Bimal, Advocate For the Respondent/s : Mr. Brajendra Nath Pandey, App. For the Opposite Party No.2 : Mr. Surendra Kishore Thakur, Advocate. ====================================================== Coram: Honourable Mr. Justice Aditya Kumar Trivedi Cav Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Aditya Kumar Trivedi']"", ""LAWYER"": ""['G.P.Bimal', 'Brajendra Nath Pandey', 'Surendra Kishore Thakur']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Arvind Kumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Bihar', 'Ashok Leyland Finance']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Patna']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Aditya Kumar Trivedi']"", 'LAWYER': ""['G.P.Bimal', 'Brajendra Nath Pandey', 'Surendra Kishore Thakur']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Arvind Kumar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Bihar', 'Ashok Leyland Finance']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Patna Criminal Revision No.544 of 2010 ====================================================== Arvind Kumar S/O Late Biyogi Lal Choudhary Residing At Present At 402 Tulip Cooperative Society,Mahada Building No.6,Mahada,Adarsh Nagar Andheri,West Mumbai And Permanent R/O Shahpur,P.S.-Tisiyoti, Dist.- Vaishali .... .... Petitioner/s Versus 1. The State Of Bihar 2. M/S Ashok Leyland Finance Through Shri Kashi Nath Rai,Branch Manager, Exhibition Road, P.S.-Gandhi Maidan,Dist.-Patna. .... .... Respondent/s ====================================================== Appearance : For the Petitioner/s : Mr. G.P.Bimal, Advocate For the Respondent/s : Mr. Brajendra Nath Pandey, App. For the Opposite Party No.2 : Mr. Surendra Kishore Thakur, Advocate. ====================================================== Coram: Honourable Mr. Justice Aditya Kumar Trivedi Cav Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Aditya Kumar Trivedi']"", ""LAWYER"": ""['G.P.Bimal', 'Brajendra Nath Pandey', 'Surendra Kishore Thakur']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Arvind Kumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Bihar', 'Ashok Leyland Finance']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We accordingly reject the arguments of the learned counsel for the appellants.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We accordingly reject the arguments of the learned counsel for the appellants. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
A democratic Constitution is not to be interpreted merely from a lexicographer's angle but with a realisation that it is an embodiment of the living thoughts and aspiration of a free people.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A democratic Constitution is not to be interpreted merely from a lexicographer's angle but with a realisation that it is an embodiment of the living thoughts and aspiration of a free people. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"*** Date of Order ::: 25/02/10 Hon'ble Mr. Justice Ajay Rastogi *** For petitioners - Sarva Shri Rajendra Soni, Shailesh Pra.Sharma NK Maloo, SS Hora, Tanveer Ahmed,Vinod Gupta, Kailash C. Sharma, RD Soni/Kuldeep Aswal, Rampartap Saini, Ripu DS Naruka, HR Kumawat, Praveen Sharma, Rajeev Sogarwal, JK Yogi, Rajesh Kala, SS Mahla, Shiv C.Gupta & TC Sharma.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['25/02/10']"", ""GPE"": ""[]"", ""JUDGE"": ""['Ajay Rastogi']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sarva Shri', 'Rajendra Soni', 'Shailesh Pra.Sharma NK Maloo', 'SS Hora', 'Tanveer Ahmed', 'Vinod Gupta', 'Kailash C. Sharma', 'RD Soni', 'Kuldeep Aswal', 'Rampartap Saini', 'Ripu DS Naruka', 'HR Kumawat', 'Praveen Sharma', 'Rajeev Sogarwal', 'JK Yogi', 'Rajesh Kala', 'SS Mahla', 'Shiv C.Gupta', 'TC Sharma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['25/02/10']"", 'GPE': '[]', 'JUDGE': ""['Ajay Rastogi']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sarva Shri', 'Rajendra Soni', 'Shailesh Pra.Sharma NK Maloo', 'SS Hora', 'Tanveer Ahmed', 'Vinod Gupta', 'Kailash C. Sharma', 'RD Soni', 'Kuldeep Aswal', 'Rampartap Saini', 'Ripu DS Naruka', 'HR Kumawat', 'Praveen Sharma', 'Rajeev Sogarwal', 'JK Yogi', 'Rajesh Kala', 'SS Mahla', 'Shiv C.Gupta', 'TC Sharma']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: *** Date of Order ::: 25/02/10 Hon'ble Mr. Justice Ajay Rastogi *** For petitioners - Sarva Shri Rajendra Soni, Shailesh Pra.Sharma NK Maloo, SS Hora, Tanveer Ahmed,Vinod Gupta, Kailash C. Sharma, RD Soni/Kuldeep Aswal, Rampartap Saini, Ripu DS Naruka, HR Kumawat, Praveen Sharma, Rajeev Sogarwal, JK Yogi, Rajesh Kala, SS Mahla, Shiv C.Gupta & TC Sharma. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['25/02/10']"", ""GPE"": ""[]"", ""JUDGE"": ""['Ajay Rastogi']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sarva Shri', 'Rajendra Soni', 'Shailesh Pra.Sharma NK Maloo', 'SS Hora', 'Tanveer Ahmed', 'Vinod Gupta', 'Kailash C. Sharma', 'RD Soni', 'Kuldeep Aswal', 'Rampartap Saini', 'Ripu DS Naruka', 'HR Kumawat', 'Praveen Sharma', 'Rajeev Sogarwal', 'JK Yogi', 'Rajesh Kala', 'SS Mahla', 'Shiv C.Gupta', 'TC Sharma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"After registering the complaint in crime No.79/2011, the PW-11 has sent the FIR report as per Ex.P.17 to his higher officer and also to the court and further on the same day, he visited the scene of offence and in the presence of panch witnesses namely Smt.Shashirekha-CW-1, CW-15- Chandru, CW-16-Subbanna and he has drawn spot mahazar as per Ex.P.2 and also collected the bloodstained mud and also plain mud.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Shashirekha', 'Chandru', 'Subbanna']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Shashirekha', 'Chandru', 'Subbanna']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: After registering the complaint in crime No.79/2011, the PW-11 has sent the FIR report as per Ex.P.17 to his higher officer and also to the court and further on the same day, he visited the scene of offence and in the presence of panch witnesses namely Smt.Shashirekha-CW-1, CW-15- Chandru, CW-16-Subbanna and he has drawn spot mahazar as per Ex.P.2 and also collected the bloodstained mud and also plain mud. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Shashirekha', 'Chandru', 'Subbanna']""} </s>"
"In support of this contention, strong reliance was placed by the assessee on the decision of the Madhya Pradesh High Court in the case of CIT v. Vippy Solvex Product (P.) Ltd.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madhya Pradesh High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['CIT v. Vippy Solvex Product (P.) Ltd.']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Madhya Pradesh High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['CIT v. Vippy Solvex Product (P.) Ltd.']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In support of this contention, strong reliance was placed by the assessee on the decision of the Madhya Pradesh High Court in the case of CIT v. Vippy Solvex Product (P.) Ltd. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madhya Pradesh High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['CIT v. Vippy Solvex Product (P.) Ltd.']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The daughter-in-law, in these circumstances is entitled to protection from dispossession, though her husband never had any ownership rights in the premises.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The daughter-in-law, in these circumstances is entitled to protection from dispossession, though her husband never had any ownership rights in the premises. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Hence, the Miscellaneous Appeal No.485/2005 is hereby partly allowed.","{""CASE_NUMBER"": ""['Miscellaneous Appeal No.485/2005']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Miscellaneous Appeal No.485/2005']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Hence, the Miscellaneous Appeal No.485/2005 is hereby partly allowed. [/INST]
 {""CASE_NUMBER"": ""['Miscellaneous Appeal No.485/2005']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The absence of any avoiding action makes that vehicle also to blame.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The absence of any avoiding action makes that vehicle also to blame. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The partnership fully carried out the above scheme.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The partnership fully carried out the above scheme. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (crl.) 821 of 2001 Petitioner: Union Of India And Ors. Respondent: Shivendra Bikaram Singh Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Union Of India']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Shivendra Bikaram Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Union Of India']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Shivendra Bikaram Singh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (crl.) 821 of 2001 Petitioner: Union Of India And Ors. Respondent: Shivendra Bikaram Singh Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Union Of India']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Shivendra Bikaram Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"That these respondents, have been arrayed as accused persons in Crime No. 340/12 of Police Station Suatala for the offence under Sections 302, 304 read with Section 34 of I.P.C. on false allegations and present public interest litigation has also been filed on false pretext.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Police Station Suatala']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 302, 304', 'Section 34']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Police Station Suatala']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Sections 302, 304', 'Section 34']"", 'RESPONDENT': '[]', 'STATUTE': ""['I.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: That these respondents, have been arrayed as accused persons in Crime No. 340/12 of Police Station Suatala for the offence under Sections 302, 304 read with Section 34 of I.P.C. on false allegations and present public interest litigation has also been filed on false pretext. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Police Station Suatala']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 302, 304', 'Section 34']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.P.C.']"", ""WITNESS"": ""[]""} </s>"
"1 Fa.1731.10 ndm In The High Court Of Judicature At Bombay Appellate Jurisdiction First Appeal No. 1731 Of 2010 The New India Assurance Company Limited. ... Appellant Versus Sitaram Devidayal Jaiswal and others. ... Respondents ----- Mr. D.S.Joshi for the Appellant. Mr. T.J.Mendon for Respondent No.1. ig ----- Coram : A.S.Oka, J. Date On Which Submissions Are Heard : 20 October, 2011. th Date On Which Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['A.S.Oka']"", ""LAWYER"": ""['D.S.Joshi', 'T.J.Mendon']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['The New India Assurance Company Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sitaram Devidayal Jaiswal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['A.S.Oka']"", 'LAWYER': ""['D.S.Joshi', 'T.J.Mendon']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['The New India Assurance Company Limited']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Sitaram Devidayal Jaiswal']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 Fa.1731.10 ndm In The High Court Of Judicature At Bombay Appellate Jurisdiction First Appeal No. 1731 Of 2010 The New India Assurance Company Limited. ... Appellant Versus Sitaram Devidayal Jaiswal and others. ... Respondents ----- Mr. D.S.Joshi for the Appellant. Mr. T.J.Mendon for Respondent No.1. ig ----- Coram : A.S.Oka, J. Date On Which Submissions Are Heard : 20 October, 2011. th Date On Which Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['A.S.Oka']"", ""LAWYER"": ""['D.S.Joshi', 'T.J.Mendon']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['The New India Assurance Company Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sitaram Devidayal Jaiswal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Even the other items which were forwarded to the F.S.L., which included the bricks containing blood-stains as well as the blood-stained 'zabba' with thirteen cuts and the bloodstained soil which was collected from the 'tali' of Gigabhai's house, were all found to be having human blood of group 'B' as per the chemical analyzers report and the serologist's report Exh. 35.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['F.S.L.,']"", ""OTHER_PERSON"": ""['Gigabhai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['F.S.L.,']"", 'OTHER_PERSON': ""['Gigabhai']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Even the other items which were forwarded to the F.S.L., which included the bricks containing blood-stains as well as the blood-stained 'zabba' with thirteen cuts and the bloodstained soil which was collected from the 'tali' of Gigabhai's house, were all found to be having human blood of group 'B' as per the chemical analyzers report and the serologist's report Exh. 35. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['F.S.L.,']"", ""OTHER_PERSON"": ""['Gigabhai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The question raised was C.M.No.15703 of 2012 In CWP No.14585 of 2011 that ""when a statute confers a power on an authority and imposes a duty on it to be a Judge of its own cause or to decide a dispute in which it has an official bias, the doctrine of bias is qualified to the extent of the statutory authorization"". 40.","{""CASE_NUMBER"": ""['CWP No.14585 of 2011']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['CWP No.14585 of 2011']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The question raised was C.M.No.15703 of 2012 In CWP No.14585 of 2011 that ""when a statute confers a power on an authority and imposes a duty on it to be a Judge of its own cause or to decide a dispute in which it has an official bias, the doctrine of bias is qualified to the extent of the statutory authorization"". 40. [/INST]
 {""CASE_NUMBER"": ""['CWP No.14585 of 2011']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This Criminal Appeal is filed against the judgement of the learned Additional District and Sessions Judge, Vellore District at Vellore (FTC) passed in SC.No.112/1998 dated 17.5.2002, convicting the Appellants for the offences under Section 304(B) of IPC and sentencing them to undergo seven years Rigorous Imprisonment. For Appellant : Mr.K.S.Rajagopalan For Respondent","{""CASE_NUMBER"": ""['SC.No.112/1998']"", ""COURT"": ""['Additional District and Sessions Judge, Vellore District at Vellore (FTC)']"", ""DATE"": ""['17.5.2002']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['K.S.Rajagopalan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 304(B)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['SC.No.112/1998']"", 'COURT': ""['Additional District and Sessions Judge, Vellore District at Vellore (FTC)']"", 'DATE': ""['17.5.2002']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['K.S.Rajagopalan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 304(B)']"", 'RESPONDENT': '[]', 'STATUTE': ""['IPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This Criminal Appeal is filed against the judgement of the learned Additional District and Sessions Judge, Vellore District at Vellore (FTC) passed in SC.No.112/1998 dated 17.5.2002, convicting the Appellants for the offences under Section 304(B) of IPC and sentencing them to undergo seven years Rigorous Imprisonment. For Appellant : Mr.K.S.Rajagopalan For Respondent [/INST]
 {""CASE_NUMBER"": ""['SC.No.112/1998']"", ""COURT"": ""['Additional District and Sessions Judge, Vellore District at Vellore (FTC)']"", ""DATE"": ""['17.5.2002']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['K.S.Rajagopalan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 304(B)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Madras Dated: 22/07/2002 Coram The Honourable Mr.Justice M. Karpagavinayagam Crl.R.C. No.412 of 2001 S.P. Shenbagamoorthy .. Petitioner vs. 1. Mr.Mu.Ka. Stalin 2. The Director, Directorate of Vigilance and Anti-Corruption, Chennai. ..Respondents Criminal Revision Case against the order dated 19.3.2001 passed in unnumbered C.C.S.R.No.1434 of 2001 on the file of the Principal Sessions Judge, Chennai. !For Petitioner : Mr. T.K.Sampath for Mr. I.S. Inbadurai ^For Respondent-1 : Mr. M. Venkataraman for Mr. K. Senthilkumar For Respondent-2 : Mr. E. Raja, Addl. P.P. :O R D E R","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M. Karpagavinayagam']"", ""LAWYER"": ""['T.K.Sampath', 'M. Venkataraman', 'E. Raja']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['S.P. Shenbagamoorthy']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Mu.Ka. Stalin', 'Director, Directorate of Vigilance and Anti-Corruption, Chennai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Madras']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['M. Karpagavinayagam']"", 'LAWYER': ""['T.K.Sampath', 'M. Venkataraman', 'E. Raja']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['S.P. Shenbagamoorthy']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Mu.Ka. Stalin', 'Director, Directorate of Vigilance and Anti-Corruption, Chennai']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Madras Dated: 22/07/2002 Coram The Honourable Mr.Justice M. Karpagavinayagam Crl.R.C. No.412 of 2001 S.P. Shenbagamoorthy .. Petitioner vs. 1. Mr.Mu.Ka. Stalin 2. The Director, Directorate of Vigilance and Anti-Corruption, Chennai. ..Respondents Criminal Revision Case against the order dated 19.3.2001 passed in unnumbered C.C.S.R.No.1434 of 2001 on the file of the Principal Sessions Judge, Chennai. !For Petitioner : Mr. T.K.Sampath for Mr. I.S. Inbadurai ^For Respondent-1 : Mr. M. Venkataraman for Mr. K. Senthilkumar For Respondent-2 : Mr. E. Raja, Addl. P.P. :O R D E R [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M. Karpagavinayagam']"", ""LAWYER"": ""['T.K.Sampath', 'M. Venkataraman', 'E. Raja']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['S.P. Shenbagamoorthy']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Mu.Ka. Stalin', 'Director, Directorate of Vigilance and Anti-Corruption, Chennai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The aforesaid amendment touching Sections 9 and 24 of the Act and thereafter issuing of show cause notice to the assessees regarding the imposition of penalty, inter alia, in terms of Section 50 of the Act, appears to have stirred the hornet's nest which has led to the filing of the amended petitions in this Court.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 9 and 24', 'Section 50']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Sections 9 and 24', 'Section 50']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The aforesaid amendment touching Sections 9 and 24 of the Act and thereafter issuing of show cause notice to the assessees regarding the imposition of penalty, inter alia, in terms of Section 50 of the Act, appears to have stirred the hornet's nest which has led to the filing of the amended petitions in this Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 9 and 24', 'Section 50']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In that ease the only evidence given during the trial to connect the accused with the act of murder with which they were charged, was their own confessions contained in statements voluntarily made by them under Section 164, Cr. P. C., which confessions were retracted before the trial commenced.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 164']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr. P. C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 164']"", 'RESPONDENT': '[]', 'STATUTE': ""['Cr. P. C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In that ease the only evidence given during the trial to connect the accused with the act of murder with which they were charged, was their own confessions contained in statements voluntarily made by them under Section 164, Cr. P. C., which confessions were retracted before the trial commenced. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 164']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr. P. C.']"", ""WITNESS"": ""[]""} </s>"
"As decided by the Supreme Court in Chameli Wati v. Delhi Municipal Corporation 1985 ACJ 645 (SC), this sum will carry interest at 12% p.a. from the date of petition.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Chameli Wati v. Delhi Municipal Corporation 1985 ACJ 645 (SC)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Chameli Wati v. Delhi Municipal Corporation 1985 ACJ 645 (SC)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As decided by the Supreme Court in Chameli Wati v. Delhi Municipal Corporation 1985 ACJ 645 (SC), this sum will carry interest at 12% p.a. from the date of petition. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Chameli Wati v. Delhi Municipal Corporation 1985 ACJ 645 (SC)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Writ Appln. No. 615 of 1952, D/- 4-8-1954 (Raj) (supra).","{""CASE_NUMBER"": ""['Writ Appln. No. 615 of 1952']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Raj']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Writ Appln. No. 615 of 1952']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Raj']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Writ Appln. No. 615 of 1952, D/- 4-8-1954 (Raj) (supra). [/INST]
 {""CASE_NUMBER"": ""['Writ Appln. No. 615 of 1952']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Raj']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"They asserted that the lands in suit appertained to village Basarh belonging to the 'debottar' estate and not to any of the villages of the plaintiff as claimed in the plaint, and the plaintiff had not been in possession of that disputed lands within 12 years of the suit, the possession being the possession of the deity.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Basarh']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Basarh']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: They asserted that the lands in suit appertained to village Basarh belonging to the 'debottar' estate and not to any of the villages of the plaintiff as claimed in the plaint, and the plaintiff had not been in possession of that disputed lands within 12 years of the suit, the possession being the possession of the deity. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Basarh']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Purchase made by M/s. Unitech Limited (South City) in village Salokhra in the surrounding areas are detailed below :(x),"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Salokhra']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['M/s. Unitech Limited']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Salokhra']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['M/s. Unitech Limited']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Purchase made by M/s. Unitech Limited (South City) in village Salokhra in the surrounding areas are detailed below :(x) [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Salokhra']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['M/s. Unitech Limited']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We affirm the death sentence passed by the trial court as also the other sentences passed under Sections 364 and 376 I.P.C. 45.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 364 and 376']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Sections 364 and 376']"", 'RESPONDENT': '[]', 'STATUTE': ""['I.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We affirm the death sentence passed by the trial court as also the other sentences passed under Sections 364 and 376 I.P.C. 45. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 364 and 376']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.P.C.']"", ""WITNESS"": ""[]""} </s>"
"Of these, Sadasheo (P. W. 3) and Haridas (P. W. 5) are Mahars.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Sadasheo', 'Haridas']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Sadasheo', 'Haridas']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Of these, Sadasheo (P. W. 3) and Haridas (P. W. 5) are Mahars. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Sadasheo', 'Haridas']""} </s>"
Petitioner: Bega Begum And Ors. Vs. Respondent: Abdul Ahad Khan And Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bega Begum']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Abdul Ahad Khan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Bega Begum']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Abdul Ahad Khan']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Bega Begum And Ors. Vs. Respondent: Abdul Ahad Khan And Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bega Begum']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Abdul Ahad Khan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It was a shocking occasion for Ram Kishan, PW5 when he came to deliver some customary presents to her sister on the occasion of Karva Chauth, a fast observed by married women for the safety and long life of their husbands, when he found the dead body of his sister Sunita lying at the entrance room and the respondents were making preparations for her cremation.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sunita']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Ram Kishan']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sunita']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Ram Kishan']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was a shocking occasion for Ram Kishan, PW5 when he came to deliver some customary presents to her sister on the occasion of Karva Chauth, a fast observed by married women for the safety and long life of their husbands, when he found the dead body of his sister Sunita lying at the entrance room and the respondents were making preparations for her cremation. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sunita']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Ram Kishan']""} </s>"
Case No.: Appeal (civil) 887 of 1975 Petitioner: Indira Nehru Gandhi Respondent: Shri Raj Narain & Anr. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Indira Nehru Gandhi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Raj Narain']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Indira Nehru Gandhi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Raj Narain']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 887 of 1975 Petitioner: Indira Nehru Gandhi Respondent: Shri Raj Narain & Anr. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Indira Nehru Gandhi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Raj Narain']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
This decision is an authority for the proposition that no one has a fundamental right to be employed as a Government servant.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This decision is an authority for the proposition that no one has a fundamental right to be employed as a Government servant. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Pi-ivy Council affirmed the decision of the Supreme Court of Ceylon, and made the following observa- tions in the course of their judgment, which would suggest that a dying declaration, if found reliable by a jury, may, by itself, sustain a conviction: (1) I.L.R. [1940] Mad. 158,170. (2) A.I.R. 1941 Patna 409. (3) I.L.R. [1945] Nag. 613; A.I.R. 1945 Nag. 153. (4) [I937] A.C. 220, 229.","{""CASE_NUMBER"": ""['I.L.R. [1940] Mad. 158,170', 'A.I.R. 1941 Patna', 'I.L.R. [1945] Nag. 613', 'A.I.R. 1945 Nag. 153. (4) [I937] A.C. 220, 229.']"", ""COURT"": ""['Supreme Court of Ceylon']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['I.L.R. [1940] Mad. 158,170', 'A.I.R. 1941 Patna', 'I.L.R. [1945] Nag. 613', 'A.I.R. 1945 Nag. 153. (4) [I937] A.C. 220, 229.']"", 'COURT': ""['Supreme Court of Ceylon']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Pi-ivy Council affirmed the decision of the Supreme Court of Ceylon, and made the following observa- tions in the course of their judgment, which would suggest that a dying declaration, if found reliable by a jury, may, by itself, sustain a conviction: (1) I.L.R. [1940] Mad. 158,170. (2) A.I.R. 1941 Patna 409. (3) I.L.R. [1945] Nag. 613; A.I.R. 1945 Nag. 153. (4) [I937] A.C. 220, 229. [/INST]
 {""CASE_NUMBER"": ""['I.L.R. [1940] Mad. 158,170', 'A.I.R. 1941 Patna', 'I.L.R. [1945] Nag. 613', 'A.I.R. 1945 Nag. 153. (4) [I937] A.C. 220, 229.']"", ""COURT"": ""['Supreme Court of Ceylon']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"No one was examined as witness on behalf of other respondents, including respondents 2 and Sri Raja Amareshwar Naik.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Raja Amareshwar Naik']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Raja Amareshwar Naik']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: No one was examined as witness on behalf of other respondents, including respondents 2 and Sri Raja Amareshwar Naik. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Raja Amareshwar Naik']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Sir Ameer Ali in his book Mohammedan Law, Tagore Law Lectures IV Edition, Volume I has observed that the Islamic system, from a historical point of view was the most interesting phenomenon of growth.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ameer Ali']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ameer Ali']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Sir Ameer Ali in his book Mohammedan Law, Tagore Law Lectures IV Edition, Volume I has observed that the Islamic system, from a historical point of view was the most interesting phenomenon of growth. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ameer Ali']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
My conclusion therefore is that the misdirection mentioned above has resulted in an erroneous verdict as regards these charges.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: My conclusion therefore is that the misdirection mentioned above has resulted in an erroneous verdict as regards these charges. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"He was primarily examined by the appellant in order to contradict the report of Rajan [P.W.48], wherein it is stated that a Self loading weapon was received from the Court by the Tamil Nadu Forensic Sciences Department.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Tamil Nadu Forensic Sciences Department']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Rajan']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Tamil Nadu Forensic Sciences Department']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Rajan']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He was primarily examined by the appellant in order to contradict the report of Rajan [P.W.48], wherein it is stated that a Self loading weapon was received from the Court by the Tamil Nadu Forensic Sciences Department. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Tamil Nadu Forensic Sciences Department']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Rajan']""} </s>"
We have asked the learned Government Pleader appearing for the respondents to show us whether there is any such finding but he was not able to show such a finding recorded by the respondent No. 1 in case of petitioner Deshpande.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Deshpande']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Deshpande']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We have asked the learned Government Pleader appearing for the respondents to show us whether there is any such finding but he was not able to show such a finding recorded by the respondent No. 1 in case of petitioner Deshpande. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Deshpande']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is submitted that if the impugned judgment is not rectified or set aside, the interests of more than 250 officers would be adversely affected.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is submitted that if the impugned judgment is not rectified or set aside, the interests of more than 250 officers would be adversely affected. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In National Insurance Co. Ltd. v. Baljit Kaur and others (2004) 2 SCC 1 upon considering the effect of amendment carried out in Section 147 of the Act by Motor Vehicles (Amendment) Act, 1994, it was held: ""By reason of the 1994 Amendment what was added is ""including the owner of the goods or his authorized representative carried in the vehicle.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['National Insurance Co. Ltd. v. Baljit Kaur and others (2004) 2 SCC 1']"", ""PROVISION"": ""['Section 147']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Motor Vehicles (Amendment) Act, 1994']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['National Insurance Co. Ltd. v. Baljit Kaur and others (2004) 2 SCC 1']"", 'PROVISION': ""['Section 147']"", 'RESPONDENT': '[]', 'STATUTE': ""['Motor Vehicles (Amendment) Act, 1994']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In National Insurance Co. Ltd. v. Baljit Kaur and others (2004) 2 SCC 1 upon considering the effect of amendment carried out in Section 147 of the Act by Motor Vehicles (Amendment) Act, 1994, it was held: ""By reason of the 1994 Amendment what was added is ""including the owner of the goods or his authorized representative carried in the vehicle."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['National Insurance Co. Ltd. v. Baljit Kaur and others (2004) 2 SCC 1']"", ""PROVISION"": ""['Section 147']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Motor Vehicles (Amendment) Act, 1994']"", ""WITNESS"": ""[]""} </s>"
"Therefore, we conclude that the prosecution has proved the above charges framed against the appellant beyond reasonable doubt and we confirm the conviction and sentence imposed upon the appellant by the trial Court.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore, we conclude that the prosecution has proved the above charges framed against the appellant beyond reasonable doubt and we confirm the conviction and sentence imposed upon the appellant by the trial Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Madras Dated: 31/05/2006 Coram The Hon'Ble Mr. Justice V. Dhanapalan C.M.A.No.535 of 1998 Sahabudeen .. Claimant/Appellant -Vs- 1. V.Haridass 2. R. Selvaraj 3. The New India Assurance Co.Ltd., Main Road, Mettupalayam 641 301... Respondents Appeal filed under Section 173 of the Motor Vehicles Act to set aside the judgment and decree dated 25.03.97 passed in Mcop No.5/95 on the file of the I Additional District Judge-cum-Chief Judicial Magistrate, Coimbatore and pass the award of Rs.3,50,000/- instead of Rs.1,00 ,000/- towards the compensation to the petitioner. !For Petitioner : Mr. K.Sudarsanam for M/s. Surithi Associates ^For Respondents: Mr. Mohd.Fiary Hussain for R1 Mr.S. Jayashankar for R3 :Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V. Dhanapalan']"", ""LAWYER"": ""['K.Sudarsanam', 'Mohd.Fiary Hussain', 'S. Jayashankar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Sahabudeen']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['V.Haridass', 'R. Selvaraj', 'New India Assurance Co.Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Madras']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['V. Dhanapalan']"", 'LAWYER': ""['K.Sudarsanam', 'Mohd.Fiary Hussain', 'S. Jayashankar']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Sahabudeen']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['V.Haridass', 'R. Selvaraj', 'New India Assurance Co.Ltd.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Madras Dated: 31/05/2006 Coram The Hon'Ble Mr. Justice V. Dhanapalan C.M.A.No.535 of 1998 Sahabudeen .. Claimant/Appellant -Vs- 1. V.Haridass 2. R. Selvaraj 3. The New India Assurance Co.Ltd., Main Road, Mettupalayam 641 301... Respondents Appeal filed under Section 173 of the Motor Vehicles Act to set aside the judgment and decree dated 25.03.97 passed in Mcop No.5/95 on the file of the I Additional District Judge-cum-Chief Judicial Magistrate, Coimbatore and pass the award of Rs.3,50,000/- instead of Rs.1,00 ,000/- towards the compensation to the petitioner. !For Petitioner : Mr. K.Sudarsanam for M/s. Surithi Associates ^For Respondents: Mr. Mohd.Fiary Hussain for R1 Mr.S. Jayashankar for R3 :Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['V. Dhanapalan']"", ""LAWYER"": ""['K.Sudarsanam', 'Mohd.Fiary Hussain', 'S. Jayashankar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Sahabudeen']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['V.Haridass', 'R. Selvaraj', 'New India Assurance Co.Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"These appeals by certificate arise from the judgment and decision of the High Court of Bombay dated 10th August, 1971 in Income Tax Reference No. 124 of 1963.","{""CASE_NUMBER"": ""['Income Tax Reference No. 124 of 1963']"", ""COURT"": ""['High Court of Bombay']"", ""DATE"": ""['10th August, 1971']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Income Tax Reference No. 124 of 1963']"", 'COURT': ""['High Court of Bombay']"", 'DATE': ""['10th August, 1971']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: These appeals by certificate arise from the judgment and decision of the High Court of Bombay dated 10th August, 1971 in Income Tax Reference No. 124 of 1963. [/INST]
 {""CASE_NUMBER"": ""['Income Tax Reference No. 124 of 1963']"", ""COURT"": ""['High Court of Bombay']"", ""DATE"": ""['10th August, 1971']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Honourable Dr. Justice B.Siva Sankara Rao C.C.C.A.No. 111 of 2009 And Batch 22-04-2016 T.Pattabhi Rama Rao,...Appellant/Plaintiff Y.Yadava Rao and others.Respondents/defendants !Counsel for the Appellant in both the appeals: Sri S.Agastya Sharma, ^Counsel for respondents in both the appeals:Sri G.Madhusudhan Reddy, Sri C.V.Bhasker Reddy, Sri C.V.Mahesh Raje <Gist : --- >Head Note : --- ? Cases referred: : 2008(5) Ald 200 2 Air 1989 Sc 193 3 Air 1987 Sc 1242 4 Air 1966 Sc 735, 5 Air 1954 Sc 458 6 Air 1953 Sc 235 7 (2008)17 Scc 491 8 Air 1995 Sc 167 9 Air 1988 Sc 719(B) 10 1991 (3) Scc 331 11 Air 1999 Sc 1441 12 Air 2005 Sc 439 = (2005)2 Scc 217 13 Air 2009 Sc 422 14 (2010)10 Scc 512 15 Air 1995 Sc 945 16 2006(7) Supreme 388 17 (1996)4 Scc 593 18 Air 2005 Sc 5303 19 2005(2) Ald 631 20 (2000)6 Scc 420 21 Air 1971 Sc 1238 22 (1999)6 Scc 337 23 (2008)5 Scc 676 24 Civil Appeal No.4841 of 2012, dt.03.07.2012 25 (2012)1 Scc 656 26 (2008)7 Scc 310 27 (2008)1 Scc 45 28 (1996)5 Scc 589 29 2015 Law Suit (Sc) 636 30 (2005)7 Scc 534 31 Air 2008 Sc 1786 32 (2005)6 Scc 243 33 Air 2009 Sc 2157 34 (2011)1 Scc 429 35 (2004)6 Scc 649 36 (2002)5 Scc 481 37 (1995)5 Scc 115 38 Air 1997 Sc 1751 39 (1993)1 Scc 519 40 Air 1968 Sc 1413 41 Laws (Aph)-1970-3-33 42 (2010) 11 Scc 441 43 (2016) 2 Scc 569 44 (2012) 1 Scc 656. 45 (2004)2 Scc-297 46 2008(1)Alt 10(Sc) 47 Air 2000 Sc 573(1) 48 2010(1) Ald 470 49 (1864) 10 Hic 672 50 (1812) 3 Camp. 258 51 Air 1941 Lah.407(FB) 52 Air 1937 Madras 714 53 Air 1917 Madras 880 Honourable Dr. Justice B.Siva Sankara Rao Cccamp No.643 and 644 of 2015 in C.C.C.A.No. 112 of 2009 and C.C.C.A.Nos. 111 And 112 of 2009 Common Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['B.Siva Sankara Rao']"", ""LAWYER"": ""['S.Agastya Sharma', 'G.Madhusudhan Reddy', 'C.V.Bhasker Reddy', 'C.V.Mahesh Raje']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['T.Pattabhi Rama Rao,']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Y.Yadava Rao']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['B.Siva Sankara Rao']"", 'LAWYER': ""['S.Agastya Sharma', 'G.Madhusudhan Reddy', 'C.V.Bhasker Reddy', 'C.V.Mahesh Raje']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['T.Pattabhi Rama Rao,']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Y.Yadava Rao']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Honourable Dr. Justice B.Siva Sankara Rao C.C.C.A.No. 111 of 2009 And Batch 22-04-2016 T.Pattabhi Rama Rao,...Appellant/Plaintiff Y.Yadava Rao and others.Respondents/defendants !Counsel for the Appellant in both the appeals: Sri S.Agastya Sharma, ^Counsel for respondents in both the appeals:Sri G.Madhusudhan Reddy, Sri C.V.Bhasker Reddy, Sri C.V.Mahesh Raje <Gist : --- >Head Note : --- ? Cases referred: : 2008(5) Ald 200 2 Air 1989 Sc 193 3 Air 1987 Sc 1242 4 Air 1966 Sc 735, 5 Air 1954 Sc 458 6 Air 1953 Sc 235 7 (2008)17 Scc 491 8 Air 1995 Sc 167 9 Air 1988 Sc 719(B) 10 1991 (3) Scc 331 11 Air 1999 Sc 1441 12 Air 2005 Sc 439 = (2005)2 Scc 217 13 Air 2009 Sc 422 14 (2010)10 Scc 512 15 Air 1995 Sc 945 16 2006(7) Supreme 388 17 (1996)4 Scc 593 18 Air 2005 Sc 5303 19 2005(2) Ald 631 20 (2000)6 Scc 420 21 Air 1971 Sc 1238 22 (1999)6 Scc 337 23 (2008)5 Scc 676 24 Civil Appeal No.4841 of 2012, dt.03.07.2012 25 (2012)1 Scc 656 26 (2008)7 Scc 310 27 (2008)1 Scc 45 28 (1996)5 Scc 589 29 2015 Law Suit (Sc) 636 30 (2005)7 Scc 534 31 Air 2008 Sc 1786 32 (2005)6 Scc 243 33 Air 2009 Sc 2157 34 (2011)1 Scc 429 35 (2004)6 Scc 649 36 (2002)5 Scc 481 37 (1995)5 Scc 115 38 Air 1997 Sc 1751 39 (1993)1 Scc 519 40 Air 1968 Sc 1413 41 Laws (Aph)-1970-3-33 42 (2010) 11 Scc 441 43 (2016) 2 Scc 569 44 (2012) 1 Scc 656. 45 (2004)2 Scc-297 46 2008(1)Alt 10(Sc) 47 Air 2000 Sc 573(1) 48 2010(1) Ald 470 49 (1864) 10 Hic 672 50 (1812) 3 Camp. 258 51 Air 1941 Lah.407(FB) 52 Air 1937 Madras 714 53 Air 1917 Madras 880 Honourable Dr. Justice B.Siva Sankara Rao Cccamp No.643 and 644 of 2015 in C.C.C.A.No. 112 of 2009 and C.C.C.A.Nos. 111 And 112 of 2009 Common Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['B.Siva Sankara Rao']"", ""LAWYER"": ""['S.Agastya Sharma', 'G.Madhusudhan Reddy', 'C.V.Bhasker Reddy', 'C.V.Mahesh Raje']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['T.Pattabhi Rama Rao,']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Y.Yadava Rao']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Ministry of Defence issued Army Instruction No. 241 of 1950 styled as 'Seniority of civilian employees in lower formations', which provides that in accordance with the orders contained in para 2 of Ministry of Defence O.M.No. 0240/6362/D-12 dated September 1,1949 published as Annexure 'A' to this instruction, seniority of persons employed in a particular grade is to be determined as indicated herein.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['September 1,1949']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Ministry of Defence']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['September 1,1949']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Ministry of Defence']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Ministry of Defence issued Army Instruction No. 241 of 1950 styled as 'Seniority of civilian employees in lower formations', which provides that in accordance with the orders contained in para 2 of Ministry of Defence O.M.No. 0240/6362/D-12 dated September 1,1949 published as Annexure 'A' to this instruction, seniority of persons employed in a particular grade is to be determined as indicated herein. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['September 1,1949']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Ministry of Defence']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Out of the said eight witnesses PW2 HC Vandana, on 8.12.2012 was posted as Sessions Case No. 6/14 Page no. 11 of 32 duty officer at police station Malviya Nagar and in that capacity recorded DD entry no. 16 and FIR no. 510/2012; and she during her examination proved the the said DD entry and FIR, copies of which were admitted in evidence as Ex. PW2/A and Ex. PW2/B respectively.","{""CASE_NUMBER"": ""['Case No. 6/14']"", ""COURT"": ""[]"", ""DATE"": ""['8.12.2012']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['police station Malviya Nagar']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['HC Vandana']""}","{'CASE_NUMBER': ""['Case No. 6/14']"", 'COURT': '[]', 'DATE': ""['8.12.2012']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['police station Malviya Nagar']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['HC Vandana']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Out of the said eight witnesses PW2 HC Vandana, on 8.12.2012 was posted as Sessions Case No. 6/14 Page no. 11 of 32 duty officer at police station Malviya Nagar and in that capacity recorded DD entry no. 16 and FIR no. 510/2012; and she during her examination proved the the said DD entry and FIR, copies of which were admitted in evidence as Ex. PW2/A and Ex. PW2/B respectively. [/INST]
 {""CASE_NUMBER"": ""['Case No. 6/14']"", ""COURT"": ""[]"", ""DATE"": ""['8.12.2012']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['police station Malviya Nagar']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['HC Vandana']""} </s>"
"In Ex. B-2 there is no mention as to the place where the will was executed, though the suggestion that steps were being taken to get the estate duly represented may be suggestive of the will having been executed at Madras.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Madras']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Madras']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Ex. B-2 there is no mention as to the place where the will was executed, though the suggestion that steps were being taken to get the estate duly represented may be suggestive of the will having been executed at Madras. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Madras']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Section 463 of the Code is as under: ""463.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 463']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 463']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Section 463 of the Code is as under: ""463. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 463']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Identification of this accused by some prosecution witnesses and especially prosecution witness Minaxi Patel may have an important effect on the totality of the evidence.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Minaxi Patel']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Minaxi Patel']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Identification of this accused by some prosecution witnesses and especially prosecution witness Minaxi Patel may have an important effect on the totality of the evidence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Minaxi Patel']""} </s>"
These instructions were necessitated by the introduction of the revised Scales of pay recommended by the Third Central Pay Commission.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Third Central Pay Commission']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Third Central Pay Commission']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: These instructions were necessitated by the introduction of the revised Scales of pay recommended by the Third Central Pay Commission. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Third Central Pay Commission']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
favour of the defendant no.1 and against the plaintiff.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: favour of the defendant no.1 and against the plaintiff. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The accused Anuj Chandra filed an application U/s 315 of the Code for producing himself as a defence witness.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Anuj Chandra']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s 315']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Anuj Chandra']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['s 315']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The accused Anuj Chandra filed an application U/s 315 of the Code for producing himself as a defence witness. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Anuj Chandra']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s 315']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Apex Court noted that a tendency has developed for roping in all relations of the in-laws of the wives, which will ultimately weaken the case of the prosecution even against the real accused.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Apex Court noted that a tendency has developed for roping in all relations of the in-laws of the wives, which will ultimately weaken the case of the prosecution even against the real accused. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
v. State of Punjab: (2005) 6 SCC 1 wherein the Court observed as under:-,"{""CASE_NUMBER"": ""['(2005) 6 SCC 1']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Punjab']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['(2005) 6 SCC 1']"", 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Punjab']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: v. State of Punjab: (2005) 6 SCC 1 wherein the Court observed as under:- [/INST]
 {""CASE_NUMBER"": ""['(2005) 6 SCC 1']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Punjab']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We find that the petitioner has already filed a Writ Petition in the Delhi High Court namely CWP No. 952 of 1998 and the same is pending.,"{""CASE_NUMBER"": ""['CWP No. 952 of 1998']"", ""COURT"": ""['Delhi High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['CWP No. 952 of 1998']"", 'COURT': ""['Delhi High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We find that the petitioner has already filed a Writ Petition in the Delhi High Court namely CWP No. 952 of 1998 and the same is pending. [/INST]
 {""CASE_NUMBER"": ""['CWP No. 952 of 1998']"", ""COURT"": ""['Delhi High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The blood-stained clothes of the deceased and the injured persons were also seized and sealed.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The blood-stained clothes of the deceased and the injured persons were also seized and sealed. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Such a provision, in our considered view, cannot be held arbitrary or unreasonable, violative of Article 14 of the Constitution.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 14']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 14']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Such a provision, in our considered view, cannot be held arbitrary or unreasonable, violative of Article 14 of the Constitution. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 14']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"The proviso to clause (2) of Article 254 of the Constitution, relied on by the petitioners reads as follows: ""Provided that nothing in this clause shall prevent Parliament from enacting at any time any law with respect to the same matter including a law adding to, amending, varying or repealing the law so made by the Legislature of the State"".","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Parliament']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['clause (2) of Article 254']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Parliament']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['clause (2) of Article 254']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The proviso to clause (2) of Article 254 of the Constitution, relied on by the petitioners reads as follows: ""Provided that nothing in this clause shall prevent Parliament from enacting at any time any law with respect to the same matter including a law adding to, amending, varying or repealing the law so made by the Legislature of the State"". [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Parliament']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['clause (2) of Article 254']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"On this letter on July 6, 1964, namely, within the period of one month specified as the period of limitation in Section 57 (3), the Wakf Board filed an application under Section 57 (3) of the Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['July 6, 1964']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Wakf Board']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 57 (3)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['July 6, 1964']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Wakf Board']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 57 (3)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On this letter on July 6, 1964, namely, within the period of one month specified as the period of limitation in Section 57 (3), the Wakf Board filed an application under Section 57 (3) of the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['July 6, 1964']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Wakf Board']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 57 (3)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It was further found as a fact established that petitioner Anil Kumar had proved on record that Sh. Ramji Lal, husband of Smt. Lalita Devi was the co-landlord and from Ramji Lal petitioner having purchased property in question, he was to be held entitled to claim rent including arrears from respondent/ appellant.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ramji Lal', 'Lalita Devi']"", ""PETITIONER"": ""['Anil Kumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ramji Lal', 'Lalita Devi']"", 'PETITIONER': ""['Anil Kumar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was further found as a fact established that petitioner Anil Kumar had proved on record that Sh. Ramji Lal, husband of Smt. Lalita Devi was the co-landlord and from Ramji Lal petitioner having purchased property in question, he was to be held entitled to claim rent including arrears from respondent/ appellant. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ramji Lal', 'Lalita Devi']"", ""PETITIONER"": ""['Anil Kumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
A report was submitted holding therein that the appointments made were illegal.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A report was submitted holding therein that the appointments made were illegal. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In C.A. No. of 1993 (arising out of S.L.P. (C) No. 17484 of 1991) Union of India v. Mohammed Naimulla, the respondent was working as an electrical fitter.","{""CASE_NUMBER"": ""['C.A. No. of 1993', 'S.L.P. (C) No. 17484 of 1991']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Union of India v. Mohammed Naimulla']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['C.A. No. of 1993', 'S.L.P. (C) No. 17484 of 1991']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Union of India v. Mohammed Naimulla']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In C.A. No. of 1993 (arising out of S.L.P. (C) No. 17484 of 1991) Union of India v. Mohammed Naimulla, the respondent was working as an electrical fitter. [/INST]
 {""CASE_NUMBER"": ""['C.A. No. of 1993', 'S.L.P. (C) No. 17484 of 1991']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Union of India v. Mohammed Naimulla']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"T. S. Krishnamoorthy Iyer, S. B. Saharya, K. Ram Kumar and V. B. Saharya for the Appellants in C. As. 420 and 442- 445/73. V. A. Sayed Muhamed (In CA 420/73) and K. M. K. Nair for R. I in all appeals and R. 2 in C. As. 442, 443 and 445 of 1973. Miss Lilly Thomas RR. 3-10 and CA 445/73.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['T. S. Krishnamoorthy Iyer', 'S. B. Saharya', 'K. Ram Kumar', 'V. B. Saharya', 'V. A. Sayed Muhamed', 'K. M. K. Nair', 'Lilly Thomas']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['T. S. Krishnamoorthy Iyer', 'S. B. Saharya', 'K. Ram Kumar', 'V. B. Saharya', 'V. A. Sayed Muhamed', 'K. M. K. Nair', 'Lilly Thomas']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: T. S. Krishnamoorthy Iyer, S. B. Saharya, K. Ram Kumar and V. B. Saharya for the Appellants in C. As. 420 and 442- 445/73. V. A. Sayed Muhamed (In CA 420/73) and K. M. K. Nair for R. I in all appeals and R. 2 in C. As. 442, 443 and 445 of 1973. Miss Lilly Thomas RR. 3-10 and CA 445/73. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['T. S. Krishnamoorthy Iyer', 'S. B. Saharya', 'K. Ram Kumar', 'V. B. Saharya', 'V. A. Sayed Muhamed', 'K. M. K. Nair', 'Lilly Thomas']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Bhajju @ Karan Singh v. State of Madhya Pradesh it was held that when the witness turned hostile after making statement under Section 164 CrPC, ""the court will always have to take a very cautious decision while referring to the statements of such witnesses who turn hostile or go back from their earlier statements recorded, particularly, under Section 164 of the CrPC.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Bhajju @ Karan Singh v. State of Madhya Pradesh']"", ""PROVISION"": ""['Section 164']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CrPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Bhajju @ Karan Singh v. State of Madhya Pradesh']"", 'PROVISION': ""['Section 164']"", 'RESPONDENT': '[]', 'STATUTE': ""['CrPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Bhajju @ Karan Singh v. State of Madhya Pradesh it was held that when the witness turned hostile after making statement under Section 164 CrPC, ""the court will always have to take a very cautious decision while referring to the statements of such witnesses who turn hostile or go back from their earlier statements recorded, particularly, under Section 164 of the CrPC. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Bhajju @ Karan Singh v. State of Madhya Pradesh']"", ""PROVISION"": ""['Section 164']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CrPC']"", ""WITNESS"": ""[]""} </s>"
I do not consider it necessary to repeat them here.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: I do not consider it necessary to repeat them here. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In my view, therefore, the observations relied on cannot be read out of context.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In my view, therefore, the observations relied on cannot be read out of context. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Sitaram Motilal Kalal Vs. Respondent: Santanuprasad Jaishankar Bhatt Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Sitaram Motilal Kalal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Santanuprasad Jaishankar Bhatt']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Sitaram Motilal Kalal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Santanuprasad Jaishankar Bhatt']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Sitaram Motilal Kalal Vs. Respondent: Santanuprasad Jaishankar Bhatt Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Sitaram Motilal Kalal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Santanuprasad Jaishankar Bhatt']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Granting bail by the Judge without considering the order of dismissal passed by the other Judge is an impropriety and it is liable to be set- aside.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Granting bail by the Judge without considering the order of dismissal passed by the other Judge is an impropriety and it is liable to be set- aside. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It was further held that the effect of the acquittal of the three co-accused is that they did not co-jointly and with the appellant commit the murder.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was further held that the effect of the acquittal of the three co-accused is that they did not co-jointly and with the appellant commit the murder. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
There were multiple fractures of right sided ribs (R3 to R10).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: There were multiple fractures of right sided ribs (R3 to R10). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"But if the claimants choose to implead the insurer as a party, not being a noticee under section 149(2), the insurer can urge all grounds and not necessarily the limited grounds mentioned in section 149(2)of the Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 149(2)', 'section 149(2)of the']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 149(2)', 'section 149(2)of the']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But if the claimants choose to implead the insurer as a party, not being a noticee under section 149(2), the insurer can urge all grounds and not necessarily the limited grounds mentioned in section 149(2)of the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 149(2)', 'section 149(2)of the']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"By way of the present judgment, I shall decide the complaint case U/s 138 Negotiable Instrument Act 1881 (hereinafter Said as NI Act) filed by the complainant Smt Pushpa against the accused Smt. Bandana Jha W/o Sh. Mihir Kumar Jha. PROLOGUE (COMPLAINANT'S VERSION) 2.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mihir Kumar Jha']"", ""PETITIONER"": ""['Pushpa']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s 138']"", ""RESPONDENT"": ""['Bandana Jha']"", ""STATUTE"": ""['Negotiable Instrument Act 1881', 'NI Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Mihir Kumar Jha']"", 'PETITIONER': ""['Pushpa']"", 'PRECEDENT': '[]', 'PROVISION': ""['s 138']"", 'RESPONDENT': ""['Bandana Jha']"", 'STATUTE': ""['Negotiable Instrument Act 1881', 'NI Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: By way of the present judgment, I shall decide the complaint case U/s 138 Negotiable Instrument Act 1881 (hereinafter Said as NI Act) filed by the complainant Smt Pushpa against the accused Smt. Bandana Jha W/o Sh. Mihir Kumar Jha. PROLOGUE (COMPLAINANT'S VERSION) 2. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mihir Kumar Jha']"", ""PETITIONER"": ""['Pushpa']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s 138']"", ""RESPONDENT"": ""['Bandana Jha']"", ""STATUTE"": ""['Negotiable Instrument Act 1881', 'NI Act']"", ""WITNESS"": ""[]""} </s>"
"and contended that the assertions of the respondent No. 3 that she was having the vehicle No. RJX-554 with her, which was lying idle and was available for plying immediately on the route, was entirely false to her knowledge.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: and contended that the assertions of the respondent No. 3 that she was having the vehicle No. RJX-554 with her, which was lying idle and was available for plying immediately on the route, was entirely false to her knowledge. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The words used are "" in respect of any year"" and not "" in respect of the year "".","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The words used are "" in respect of any year"" and not "" in respect of the year "". [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It has been proved by the person who made it, that is, Headmaster Giriraj Prasad P. W. 7.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Giriraj Prasad']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Giriraj Prasad']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It has been proved by the person who made it, that is, Headmaster Giriraj Prasad P. W. 7. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Giriraj Prasad']""} </s>"
"From the above discussion, it would be clear that the assessee had commenced the development and construction of the housing project after 1st day of October, 1998, and completed the same before the specified date.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['1st day of October, 1998']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['1st day of October, 1998']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: From the above discussion, it would be clear that the assessee had commenced the development and construction of the housing project after 1st day of October, 1998, and completed the same before the specified date. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['1st day of October, 1998']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"There was no information in PS Mussourie, however, on inquiry from local people, it was revealed that in the intervening night of 23/24.05.2003, two SC No. 01/01/11 14/42 cars i.e. one small car and other big car had come and a dead body was thrown out of the car.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['PS Mussourie']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['PS Mussourie']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: There was no information in PS Mussourie, however, on inquiry from local people, it was revealed that in the intervening night of 23/24.05.2003, two SC No. 01/01/11 14/42 cars i.e. one small car and other big car had come and a dead body was thrown out of the car. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['PS Mussourie']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It was also averred in plaint that firm M/s Lakhi Ram Mahi Lal was inducted on 02.09.1970, one other tenant Samman Oil & General Mills was inducted on 20.03.1970 and M/s Indraprastha Finance Company was inducted on 16.09.1970 whereas the sale proclamation of property was ordered on 21.07.1970 and the date of auction was 25.09.1970.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['02.09.1970', '20.03.1970', '16.09.1970', '21.07.1970', '25.09.1970']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Lakhi Ram Mahi Lal', 'Samman Oil & General Mills', 'Indraprastha Finance Company']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['02.09.1970', '20.03.1970', '16.09.1970', '21.07.1970', '25.09.1970']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Lakhi Ram Mahi Lal', 'Samman Oil & General Mills', 'Indraprastha Finance Company']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was also averred in plaint that firm M/s Lakhi Ram Mahi Lal was inducted on 02.09.1970, one other tenant Samman Oil & General Mills was inducted on 20.03.1970 and M/s Indraprastha Finance Company was inducted on 16.09.1970 whereas the sale proclamation of property was ordered on 21.07.1970 and the date of auction was 25.09.1970. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['02.09.1970', '20.03.1970', '16.09.1970', '21.07.1970', '25.09.1970']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Lakhi Ram Mahi Lal', 'Samman Oil & General Mills', 'Indraprastha Finance Company']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The witness Devnarayan Singh (P.W.13) has also stated that he reached the spot after hearing sound of firing but has accepted that the complainant Santosh Singh had informed him that Ajeet Singh @ Babbe Singh had fired from the gun, causing fatal injury to deceased Virendra Singh.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Santosh Singh', 'Ajeet Singh @ Babbe Singh', 'Virendra Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Devnarayan Singh']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Santosh Singh', 'Ajeet Singh @ Babbe Singh', 'Virendra Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Devnarayan Singh']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The witness Devnarayan Singh (P.W.13) has also stated that he reached the spot after hearing sound of firing but has accepted that the complainant Santosh Singh had informed him that Ajeet Singh @ Babbe Singh had fired from the gun, causing fatal injury to deceased Virendra Singh. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Santosh Singh', 'Ajeet Singh @ Babbe Singh', 'Virendra Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Devnarayan Singh']""} </s>"
"The possible obstacle in adopting this interpretation is that while the assessee's appeal gets revived when the Commission rejects an application, the I.T.O.'s appeal is not resuscitated under s. 245M(7).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 245M(7)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['s. 245M(7)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The possible obstacle in adopting this interpretation is that while the assessee's appeal gets revived when the Commission rejects an application, the I.T.O.'s appeal is not resuscitated under s. 245M(7). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 245M(7)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"S. S. Sangwan vs. Rajender Kumar Bansal Cc. No. 3116/12 In The Court Of Ms. Swati Katiyar, Metropolitan Magistrate-05 (Ni Act), Dwarka Courts, Delhi Cc No. 3116/12 Id No. 02405R0227002010 Sh. S. S. Sangwan s/o Sh. P. S. Sangwan R/o H. No. Rzf2/113, Gali No. 5, F2 Block, Nasirpur Road, Mahavir Enclave Ph-I, Palam, New Delhi-110045 ...........Complainant Vs. Sh. Rajender Kumar Bansal s/o Sh. Tulsi Ram Bansal r/o-426, Paschim Puri Sikendra, Agra, Up-282007 ..................Accused Date of Institution : 15.09.2010 Offence Complained of : u/s 138 Negotiable Instruments Act, 1881 Plea of Accused : Not Guilty Date of Reserving order : 18.12.2013 Date of Decision : 04.01.2014 Decision : Acquitted Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Metropolitan Magistrate-05 (Ni Act), Dwarka Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Swati Katiyar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['S. S. Sangwan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Rajender Kumar Bansal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Metropolitan Magistrate-05 (Ni Act), Dwarka Courts, Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Swati Katiyar']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['S. S. Sangwan']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Rajender Kumar Bansal']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: S. S. Sangwan vs. Rajender Kumar Bansal Cc. No. 3116/12 In The Court Of Ms. Swati Katiyar, Metropolitan Magistrate-05 (Ni Act), Dwarka Courts, Delhi Cc No. 3116/12 Id No. 02405R0227002010 Sh. S. S. Sangwan s/o Sh. P. S. Sangwan R/o H. No. Rzf2/113, Gali No. 5, F2 Block, Nasirpur Road, Mahavir Enclave Ph-I, Palam, New Delhi-110045 ...........Complainant Vs. Sh. Rajender Kumar Bansal s/o Sh. Tulsi Ram Bansal r/o-426, Paschim Puri Sikendra, Agra, Up-282007 ..................Accused Date of Institution : 15.09.2010 Offence Complained of : u/s 138 Negotiable Instruments Act, 1881 Plea of Accused : Not Guilty Date of Reserving order : 18.12.2013 Date of Decision : 04.01.2014 Decision : Acquitted Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Metropolitan Magistrate-05 (Ni Act), Dwarka Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Swati Katiyar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['S. S. Sangwan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Rajender Kumar Bansal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In this connection, the taxpayer relied upon three decisions, first on the case of CIT v. Sakthi Charities 244 ITR 226 and on two decisions of ITAT referred to at page 152 of the paper book.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['ITAT']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['CIT v. Sakthi Charities 244 ITR 226']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['ITAT']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['CIT v. Sakthi Charities 244 ITR 226']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this connection, the taxpayer relied upon three decisions, first on the case of CIT v. Sakthi Charities 244 ITR 226 and on two decisions of ITAT referred to at page 152 of the paper book. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['ITAT']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['CIT v. Sakthi Charities 244 ITR 226']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Against the orders imposing penalty, one of the partners of the firm moved the Commissioner of Income-tax, Madras in revision but without success.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Madras']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Madras']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Against the orders imposing penalty, one of the partners of the firm moved the Commissioner of Income-tax, Madras in revision but without success. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Madras']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Madras Dated: 24.01.2012 Coram: The HonBle Mr. Justice T.S.Sivagnanam C.R.P.(NPD)No.2308 of 2005 Central Government Employees Welfare Housing Organization, Rep. by its Chief Executive Officer, 'A' Wing, 6th Floor, Janpath Bhavan Janpath, New Delhi  110 001. .. Petitioner -vs- 1.Consolidated Civil Constructions (I) Ltd., Rep. by its Executive Director, 20, Lakshmi Bhavan, 609, Anna Salai 2.Bharath Overseas Bank, Chennai Main Branch, Rep. by its Manager, Karunai Kudil, 226, Cathedral Road, Chennai  86. .. Respondents Prayer: The above Petition is filed under Section 115 of Civil Procedure Code, against the order dated 22.06.2005, of the learned Vii Assistant Civil Court, Chennai, in O.S.No.1755 of 2004, dismissing the plea of the petitioner to reject the plaint under Order 7, Rule 11, Cpc r/w Section 151 Cpc, due to lack of jurisdiction. For Petitioner : Mr.K.S.V.Prasad For Respondents:M/s.Ajay Kumar Gnanam for R1 No Appearance for R2 O R D E R","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['T.S.Sivagnanam']"", ""LAWYER"": ""['K.S.V.Prasad', 'Ajay Kumar Gnanam']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[\""Central Government Employees Welfare Housing Organization, Rep. by its Chief Executive Officer, 'A' Wing, 6th Floor, Janpath Bhavan Janpath, New Delhi \\x16 110 001\""]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['1.Consolidated Civil Constructions (I) Ltd.', '2.Bharath Overseas Bank']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Madras']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['T.S.Sivagnanam']"", 'LAWYER': ""['K.S.V.Prasad', 'Ajay Kumar Gnanam']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[""Central Government Employees Welfare Housing Organization, Rep. by its Chief Executive Officer, \'A\' Wing, 6th Floor, Janpath Bhavan Janpath, New Delhi \\x16 110 001""]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['1.Consolidated Civil Constructions (I) Ltd.', '2.Bharath Overseas Bank']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Madras Dated: 24.01.2012 Coram: The HonBle Mr. Justice T.S.Sivagnanam C.R.P.(NPD)No.2308 of 2005 Central Government Employees Welfare Housing Organization, Rep. by its Chief Executive Officer, 'A' Wing, 6th Floor, Janpath Bhavan Janpath, New Delhi  110 001. .. Petitioner -vs- 1.Consolidated Civil Constructions (I) Ltd., Rep. by its Executive Director, 20, Lakshmi Bhavan, 609, Anna Salai 2.Bharath Overseas Bank, Chennai Main Branch, Rep. by its Manager, Karunai Kudil, 226, Cathedral Road, Chennai  86. .. Respondents Prayer: The above Petition is filed under Section 115 of Civil Procedure Code, against the order dated 22.06.2005, of the learned Vii Assistant Civil Court, Chennai, in O.S.No.1755 of 2004, dismissing the plea of the petitioner to reject the plaint under Order 7, Rule 11, Cpc r/w Section 151 Cpc, due to lack of jurisdiction. For Petitioner : Mr.K.S.V.Prasad For Respondents:M/s.Ajay Kumar Gnanam for R1 No Appearance for R2 O R D E R [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['T.S.Sivagnanam']"", ""LAWYER"": ""['K.S.V.Prasad', 'Ajay Kumar Gnanam']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[\""Central Government Employees Welfare Housing Organization, Rep. by its Chief Executive Officer, 'A' Wing, 6th Floor, Janpath Bhavan Janpath, New Delhi \\x16 110 001\""]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['1.Consolidated Civil Constructions (I) Ltd.', '2.Bharath Overseas Bank']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"affidavit referred to in the proviso to sub-section (i) of section 83 shall be sworn before a Magistrate of the First Class or a notary or a Commissioner on oaths and shall be in form 25"". 20.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['sub-section (i) of section 83']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['sub-section (i) of section 83']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: affidavit referred to in the proviso to sub-section (i) of section 83 shall be sworn before a Magistrate of the First Class or a notary or a Commissioner on oaths and shall be in form 25"". 20. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['sub-section (i) of section 83']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Furthermore, the Appellant's case during argument that the fact of the foreign principal benefiting had been disclosed in the Form 3CEB and the Transfer Pricing Officer `could' have taken a different view.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Furthermore, the Appellant's case during argument that the fact of the foreign principal benefiting had been disclosed in the Form 3CEB and the Transfer Pricing Officer `could' have taken a different view. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Shri Vinay Saraf, learned counsel for the appellant.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Vinay Saraf']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Vinay Saraf']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Shri Vinay Saraf, learned counsel for the appellant. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Vinay Saraf']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
I have already given my reasons for holding that Nyaya Panchayats are courts which are established by the Panchayat Act for administering justice.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Panchayat Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Panchayat Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: I have already given my reasons for holding that Nyaya Panchayats are courts which are established by the Panchayat Act for administering justice. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Panchayat Act']"", ""WITNESS"": ""[]""} </s>"
Classifying the statutes which may come up for consideration on a question of its validity under Article 14 of the Constitution in this Court observed under the third class of such statutes thus: A statute may not make any classification of the persons or things for the purpose of applying its provisions,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 14']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 14']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Classifying the statutes which may come up for consideration on a question of its validity under Article 14 of the Constitution in this Court observed under the third class of such statutes thus: A statute may not make any classification of the persons or things for the purpose of applying its provisions [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 14']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"While the mere plausibility of an explanation given by the accused in his examination under s. 342, Cr.P.C. may not be enough, the burden on him to negate the presumption may stand discharged, if the effect of the material brought on the record, in its totality, renders the existence of the fact presumed, improbable.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 342']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['s. 342']"", 'RESPONDENT': '[]', 'STATUTE': ""['Cr.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: While the mere plausibility of an explanation given by the accused in his examination under s. 342, Cr.P.C. may not be enough, the burden on him to negate the presumption may stand discharged, if the effect of the material brought on the record, in its totality, renders the existence of the fact presumed, improbable. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 342']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr.P.C.']"", ""WITNESS"": ""[]""} </s>"
"These companies were as follows: ""i. Sterlite Industries (India) Ltd. ii. Hindlaco Industries Ltd. iii. Tranex Holding Inc. iv. Indian Minerals Corporation Plc. v. VAW Aluminium AG, Germany vi. ALCOA, USA vii. Sibirsky, Russia viii. MALCO"" M/s Jardine Fleming, Global Advisor made an analysis of the various bids on the basis of the financial and technical capability, familiarity with India and overall credibility.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Sterlite Industries (India) Ltd.', 'Hindlaco Industries Ltd.', 'Tranex Holding Inc.', 'Sibirsky, Russia']"", ""OTHER_PERSON"": ""['Jardine Fleming']"", ""PETITIONER"": ""['Indian Minerals Corporation Plc', 'VAW Aluminium AG, Germany', 'ALCOA, USA', 'MALCO']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Sterlite Industries (India) Ltd.', 'Hindlaco Industries Ltd.', 'Tranex Holding Inc.', 'Sibirsky, Russia']"", 'OTHER_PERSON': ""['Jardine Fleming']"", 'PETITIONER': ""['Indian Minerals Corporation Plc', 'VAW Aluminium AG, Germany', 'ALCOA, USA', 'MALCO']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: These companies were as follows: ""i. Sterlite Industries (India) Ltd. ii. Hindlaco Industries Ltd. iii. Tranex Holding Inc. iv. Indian Minerals Corporation Plc. v. VAW Aluminium AG, Germany vi. ALCOA, USA vii. Sibirsky, Russia viii. MALCO"" M/s Jardine Fleming, Global Advisor made an analysis of the various bids on the basis of the financial and technical capability, familiarity with India and overall credibility. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Sterlite Industries (India) Ltd.', 'Hindlaco Industries Ltd.', 'Tranex Holding Inc.', 'Sibirsky, Russia']"", ""OTHER_PERSON"": ""['Jardine Fleming']"", ""PETITIONER"": ""['Indian Minerals Corporation Plc', 'VAW Aluminium AG, Germany', 'ALCOA, USA', 'MALCO']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
IN THE HIGH COURT OF PUNJAB AND HARYANA AT CHANDIGARH CWP No.16495 of 2005 (O&M),"{""CASE_NUMBER"": ""['CWP No.16495 of 2005 (O&M)']"", ""COURT"": ""['HIGH COURT OF PUNJAB AND HARYANA AT CHANDIGARH']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['CWP No.16495 of 2005 (O&M)']"", 'COURT': ""['HIGH COURT OF PUNJAB AND HARYANA AT CHANDIGARH']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: IN THE HIGH COURT OF PUNJAB AND HARYANA AT CHANDIGARH CWP No.16495 of 2005 (O&M) [/INST]
 {""CASE_NUMBER"": ""['CWP No.16495 of 2005 (O&M)']"", ""COURT"": ""['HIGH COURT OF PUNJAB AND HARYANA AT CHANDIGARH']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Honourable Dr. Justice B.Siva Sankara Rao Crl. P. No.5324 Of 2015 01-09-2015 Smt. Indu Dalmia, and others . Petitioners State of Andhra Pradesh Rep. by Police Alipiri Through its Public Prosecutor High Court at Hyderabad for the State of Telangana and State of Andhra Pradesh and another . Respondents Counsel for the petitioners: Sri N.Naveen Kumar Counsel for the Respondent No.1: Public Prosecutor Counsel for the Respondent No.2 : K.Vinaya Kumar <Gist : >Head Note: ? Cases referred: 1. (2015) 1 Scc 513 2. (2015) 4 Alt 596 (Db) 3. (2014) 13 Scc 553 4. 1992 Supp (1) Scc 335 5. (2000) 2 Scc 636 6. Air 2008 Sc 1683 7. (2005) 10 Scc 336 8. (2006) 6 Scc 736 9. Air 2008 Sc 251 10. (2013) 6 Scc 740 11. (2009) 7 Scc 495 12. (2008) 14 Scc 1 13. (2013) 3 Scc 330 14. (2014) 10 Scc 663 15. (2013) 9 Scc 293 Honourable Dr. Justice B.Siva Sankara Rao Criminal Petition No.5324 Of 2015 Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['B.Siva Sankara Rao']"", ""LAWYER"": ""['N.Naveen Kumar', 'K.Vinaya Kumar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Indu Dalmia']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Andhra Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['B.Siva Sankara Rao']"", 'LAWYER': ""['N.Naveen Kumar', 'K.Vinaya Kumar']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Indu Dalmia']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Andhra Pradesh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Honourable Dr. Justice B.Siva Sankara Rao Crl. P. No.5324 Of 2015 01-09-2015 Smt. Indu Dalmia, and others . Petitioners State of Andhra Pradesh Rep. by Police Alipiri Through its Public Prosecutor High Court at Hyderabad for the State of Telangana and State of Andhra Pradesh and another . Respondents Counsel for the petitioners: Sri N.Naveen Kumar Counsel for the Respondent No.1: Public Prosecutor Counsel for the Respondent No.2 : K.Vinaya Kumar <Gist : >Head Note: ? Cases referred: 1. (2015) 1 Scc 513 2. (2015) 4 Alt 596 (Db) 3. (2014) 13 Scc 553 4. 1992 Supp (1) Scc 335 5. (2000) 2 Scc 636 6. Air 2008 Sc 1683 7. (2005) 10 Scc 336 8. (2006) 6 Scc 736 9. Air 2008 Sc 251 10. (2013) 6 Scc 740 11. (2009) 7 Scc 495 12. (2008) 14 Scc 1 13. (2013) 3 Scc 330 14. (2014) 10 Scc 663 15. (2013) 9 Scc 293 Honourable Dr. Justice B.Siva Sankara Rao Criminal Petition No.5324 Of 2015 Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['B.Siva Sankara Rao']"", ""LAWYER"": ""['N.Naveen Kumar', 'K.Vinaya Kumar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Indu Dalmia']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Andhra Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Before The Madurai Bench Of Madras High Court Dated: 22/02/2010 Coram The Honourable Mr.Justice D.Hariparanthaman C.M.A(MD)No.745 of 2009 and C.M.P.No. 17270 of 2003 Icici Lambard General Insurance Company Limited,] represented through its Branch Manager, having his office at Second Floor, No.16, North Veli Street, Madurai. ... Appellants/Second respondent Vs 1.M.Rakkathal 2.M.Lakshmi 3.M.Rakku 4.M.Thavamani 5.M.Maruthu ... Respondents/Petitioners Prayer Civil Miscellaneous Appeal filed under Section 173 of the Motor Vehicles Act, 1988, praying to set aside the fair and decretal order made in M.C.O.P.No.231 of 2006, dated 15.11.2008, on the file of the Motor Accident Claims Tribunal(District Judge), Sivagangai. !For Appellant ... Mr.S.Srinivasaraghavan ^For Respondents ... Mr.T.S.Mohammed Mohideen 1 to 5 For Respondent-6 ... Mr.V.Kannan * * * :Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madurai Bench Of Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D.Hariparanthaman']"", ""LAWYER"": ""['S.Srinivasaraghavan', 'T.S.Mohammed Mohideen', 'V.Kannan']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Icici Lambard General Insurance Company Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['1.M.Rakkathal', '2.M.Lakshmi', '3.M.Rakku', '4.M.Thavamani', '5.M.Maruthu']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Madurai Bench Of Madras High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['D.Hariparanthaman']"", 'LAWYER': ""['S.Srinivasaraghavan', 'T.S.Mohammed Mohideen', 'V.Kannan']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Icici Lambard General Insurance Company Limited']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['1.M.Rakkathal', '2.M.Lakshmi', '3.M.Rakku', '4.M.Thavamani', '5.M.Maruthu']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Before The Madurai Bench Of Madras High Court Dated: 22/02/2010 Coram The Honourable Mr.Justice D.Hariparanthaman C.M.A(MD)No.745 of 2009 and C.M.P.No. 17270 of 2003 Icici Lambard General Insurance Company Limited,] represented through its Branch Manager, having his office at Second Floor, No.16, North Veli Street, Madurai. ... Appellants/Second respondent Vs 1.M.Rakkathal 2.M.Lakshmi 3.M.Rakku 4.M.Thavamani 5.M.Maruthu ... Respondents/Petitioners Prayer Civil Miscellaneous Appeal filed under Section 173 of the Motor Vehicles Act, 1988, praying to set aside the fair and decretal order made in M.C.O.P.No.231 of 2006, dated 15.11.2008, on the file of the Motor Accident Claims Tribunal(District Judge), Sivagangai. !For Appellant ... Mr.S.Srinivasaraghavan ^For Respondents ... Mr.T.S.Mohammed Mohideen 1 to 5 For Respondent-6 ... Mr.V.Kannan * * * :Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madurai Bench Of Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D.Hariparanthaman']"", ""LAWYER"": ""['S.Srinivasaraghavan', 'T.S.Mohammed Mohideen', 'V.Kannan']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Icici Lambard General Insurance Company Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['1.M.Rakkathal', '2.M.Lakshmi', '3.M.Rakku', '4.M.Thavamani', '5.M.Maruthu']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The fifth respondent, P.Achuthan Nair, is a founder member of the Committee.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['P.Achuthan Nair']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['P.Achuthan Nair']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The fifth respondent, P.Achuthan Nair, is a founder member of the Committee. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['P.Achuthan Nair']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It was submitted that it is the case of the claimants that the original respondent No.2 - Ajitkumar Dahyabhai Patel who was alleged to be riding the scooter of the opponent No.1 - Somabhai Gandabhai Patel which was insured with the appellant herein, rashly and negligently, knocked down the deceased who was crossing the road in the company of his son.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Somabhai Gandabhai Patel']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ajitkumar Dahyabhai Patel']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Somabhai Gandabhai Patel']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Ajitkumar Dahyabhai Patel']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was submitted that it is the case of the claimants that the original respondent No.2 - Ajitkumar Dahyabhai Patel who was alleged to be riding the scooter of the opponent No.1 - Somabhai Gandabhai Patel which was insured with the appellant herein, rashly and negligently, knocked down the deceased who was crossing the road in the company of his son. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Somabhai Gandabhai Patel']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ajitkumar Dahyabhai Patel']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Mr. Amjad Ali and Mr. Kalyan Bandyopadhyay, learned Counsel appearing for the petitioners.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Amjad Ali', 'Kalyan Bandyopadhyay']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Amjad Ali', 'Kalyan Bandyopadhyay']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mr. Amjad Ali and Mr. Kalyan Bandyopadhyay, learned Counsel appearing for the petitioners. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Amjad Ali', 'Kalyan Bandyopadhyay']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Bidi Supply Co. Vs. Respondent: The Union Of India And Others. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bidi Supply Co.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union Of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Bidi Supply Co.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Union Of India']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Bidi Supply Co. Vs. Respondent: The Union Of India And Others. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bidi Supply Co.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union Of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"To the same effect are also the observations of the Calcutta High Court in Ambica Ranjan v. Manikganj Loan Office Ltd., AIR 1928 Cal 468.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Calcutta High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ambica Ranjan v. Manikganj Loan Office Ltd., AIR 1928 Cal 468']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Calcutta High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Ambica Ranjan v. Manikganj Loan Office Ltd., AIR 1928 Cal 468']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: To the same effect are also the observations of the Calcutta High Court in Ambica Ranjan v. Manikganj Loan Office Ltd., AIR 1928 Cal 468. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Calcutta High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ambica Ranjan v. Manikganj Loan Office Ltd., AIR 1928 Cal 468']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The facts of the case are found by the authorities are that M/s A.W. Pereira and Ors., were the owners of certain plots of land in village Kandivali, Borivali Taluka, Mumbai.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Kandivali', 'Borivali Taluka', 'Mumbai']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['A.W. Pereira']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Kandivali', 'Borivali Taluka', 'Mumbai']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['A.W. Pereira']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The facts of the case are found by the authorities are that M/s A.W. Pereira and Ors., were the owners of certain plots of land in village Kandivali, Borivali Taluka, Mumbai. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Kandivali', 'Borivali Taluka', 'Mumbai']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['A.W. Pereira']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Similarly, in State of Uttar Pradesh v. Raj Kishore Bhargava 1992 Suppl. (2) SCC 92, the Chief Engineer who had given adverse entries against the officer in one year was appointed a member of the Screening Committee for deciding about the compulsory retirement of the officer.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Uttar Pradesh v. Raj Kishore Bhargava 1992 Suppl. (2) SCC 92']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['State of Uttar Pradesh v. Raj Kishore Bhargava 1992 Suppl. (2) SCC 92']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Similarly, in State of Uttar Pradesh v. Raj Kishore Bhargava 1992 Suppl. (2) SCC 92, the Chief Engineer who had given adverse entries against the officer in one year was appointed a member of the Screening Committee for deciding about the compulsory retirement of the officer. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Uttar Pradesh v. Raj Kishore Bhargava 1992 Suppl. (2) SCC 92']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (crl.) 78 of 1992 Petitioner: Abdul Rashid Ibrahim MANSURl Respondent: State Of Gujarat Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Abdul Rashid Ibrahim']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Gujarat']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Abdul Rashid Ibrahim']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Gujarat']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (crl.) 78 of 1992 Petitioner: Abdul Rashid Ibrahim MANSURl Respondent: State Of Gujarat Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Abdul Rashid Ibrahim']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Gujarat']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"According to Sharma, Patel entered his chamber at the Police Station at 8.45 p.m. on 25.9. 1989 in a drunken state, shouting and abusing him, he caught hold of Sharma and slapped him, since he was violent he was arrested, hand- cuffed and sent to Hospital for medical examination.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['25.9. 1989']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sharma', 'Patel']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['25.9. 1989']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sharma', 'Patel']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: According to Sharma, Patel entered his chamber at the Police Station at 8.45 p.m. on 25.9. 1989 in a drunken state, shouting and abusing him, he caught hold of Sharma and slapped him, since he was violent he was arrested, hand- cuffed and sent to Hospital for medical examination. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['25.9. 1989']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sharma', 'Patel']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The rebuttal does not have to be conclusively established but such evidence must be adduced before the court in support of the defence that Court must either believe the defence to exist or consider its existence to be reasonably probable.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The rebuttal does not have to be conclusively established but such evidence must be adduced before the court in support of the defence that Court must either believe the defence to exist or consider its existence to be reasonably probable. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
[259 E; 260 A-D)] Salomon v. Salomon & Co. [1897,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: [259 E; 260 A-D)] Salomon v. Salomon & Co. [1897 [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In W. P. 12261/84, the workmen in Tailoring Industry have also prayed for a direction to revise their wages on the ground that they have not been fixed on relevant basis.","{""CASE_NUMBER"": ""['W. P. 12261/84']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['W. P. 12261/84']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In W. P. 12261/84, the workmen in Tailoring Industry have also prayed for a direction to revise their wages on the ground that they have not been fixed on relevant basis. [/INST]
 {""CASE_NUMBER"": ""['W. P. 12261/84']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"However, the plaintiff was allegedly thrown out of the premises after taking forcible possession thereof without due process of law by the defendant which sent its demolition squad with police force on 7th August, 1976 for t his purpose.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['7th August, 1976']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['7th August, 1976']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: However, the plaintiff was allegedly thrown out of the premises after taking forcible possession thereof without due process of law by the defendant which sent its demolition squad with police force on 7th August, 1976 for t his purpose. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['7th August, 1976']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"While examining this stand, the Apex Court in Paragraph 14, 15 & 16 observed as thus: ""14.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: While examining this stand, the Apex Court in Paragraph 14, 15 & 16 observed as thus: ""14. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
In that case again the provisions of Orissa Mining Areas Development Fund Act were Questioned on the ground that the said Act could not be in force after the coming into force of the Central Act with which we are concerned in this case.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Orissa Mining Areas Development Fund Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Orissa Mining Areas Development Fund Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In that case again the provisions of Orissa Mining Areas Development Fund Act were Questioned on the ground that the said Act could not be in force after the coming into force of the Central Act with which we are concerned in this case. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Orissa Mining Areas Development Fund Act']"", ""WITNESS"": ""[]""} </s>"
"The company was incorporated on the 13th of November, 1980.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['13th of November, 1980']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['13th of November, 1980']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The company was incorporated on the 13th of November, 1980. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['13th of November, 1980']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The following two charges were mentioned in the chargesheet:- ""1. That while you were working as 2nd Additional Sessions Judge, Wardha, Sessions trial No.28/82 and 37/87 were pending before you in which Deepak Trymbakrao Deshmukh was an accused.","{""CASE_NUMBER"": ""['Sessions trial No.28/82 and 37/87']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Deepak Trymbakrao Deshmukh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Sessions trial No.28/82 and 37/87']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Deepak Trymbakrao Deshmukh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The following two charges were mentioned in the chargesheet:- ""1. That while you were working as 2nd Additional Sessions Judge, Wardha, Sessions trial No.28/82 and 37/87 were pending before you in which Deepak Trymbakrao Deshmukh was an accused. [/INST]
 {""CASE_NUMBER"": ""['Sessions trial No.28/82 and 37/87']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Deepak Trymbakrao Deshmukh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"their Lordships reiterated what was said in Ram Sewak Yadav's case, AIR 1964 SC 1249.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ram Sewak Yadav']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['AIR 1964 SC 1249']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ram Sewak Yadav']"", 'PETITIONER': '[]', 'PRECEDENT': ""['AIR 1964 SC 1249']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: their Lordships reiterated what was said in Ram Sewak Yadav's case, AIR 1964 SC 1249. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ram Sewak Yadav']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['AIR 1964 SC 1249']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"A learned Single Judge of the High Court directed, inter alia, absorption of contract labour on the ground that the type of work in which the contract labour was engaged was prohibited in view of the notification issued by the Central Government on February 9, 1980 under Section 10(1) of the CLRA Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['February 9, 1980']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Central Government']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 10(1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CLRA Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['February 9, 1980']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Central Government']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 10(1)']"", 'RESPONDENT': '[]', 'STATUTE': ""['CLRA Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A learned Single Judge of the High Court directed, inter alia, absorption of contract labour on the ground that the type of work in which the contract labour was engaged was prohibited in view of the notification issued by the Central Government on February 9, 1980 under Section 10(1) of the CLRA Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['February 9, 1980']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Central Government']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 10(1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CLRA Act']"", ""WITNESS"": ""[]""} </s>"
He has also relied upon judgment of Hon'ble Supreme Court reported in AIR 2007 SC 637 and AIR 1969 SC 1238.,"{""CASE_NUMBER"": ""['AIR 2007 SC 637', 'AIR 1969 SC 1238']"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['AIR 2007 SC 637', 'AIR 1969 SC 1238']"", 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He has also relied upon judgment of Hon'ble Supreme Court reported in AIR 2007 SC 637 and AIR 1969 SC 1238. [/INST]
 {""CASE_NUMBER"": ""['AIR 2007 SC 637', 'AIR 1969 SC 1238']"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The Honourable Sri Justice C.V. Nagarjuna Reddy And The Honourable Sri Justice M.S.K.Jaiswal Criminal Appeal No.781 of 2010 Dated:06-04-2016 Lanke Mohana Rao ... Appellant Vs. State of Andhra Pradesh ... Respondent Counsel for the appellant: Smt. A. Gayatri Reddy Counsel for Respondent : Public Prosecutor (Ap) <Gist: >Head Note: ?Citations 1. Air 1979 Sc 1382 2. (2002) 8 Scc 45 3. (2006) 10 Scc 681 4. (2016) 1 Scc 550 5. 1999 Scc (1) Supp. 80 6. (2007) 13 Scc 90 7. 1989 Supp (1) Scc 91 8. (1992) 3 Scc 300 9. (1993) 3 Scc 573 10. (1992) 3 Scc 106 11. (1993) 2 Scc 684 Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['C.V. Nagarjuna Reddy', 'M.S.K.Jaiswal']"", ""LAWYER"": ""['A. Gayatri Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Lanke Mohana Rao']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Andhra Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['C.V. Nagarjuna Reddy', 'M.S.K.Jaiswal']"", 'LAWYER': ""['A. Gayatri Reddy']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Lanke Mohana Rao']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Andhra Pradesh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Honourable Sri Justice C.V. Nagarjuna Reddy And The Honourable Sri Justice M.S.K.Jaiswal Criminal Appeal No.781 of 2010 Dated:06-04-2016 Lanke Mohana Rao ... Appellant Vs. State of Andhra Pradesh ... Respondent Counsel for the appellant: Smt. A. Gayatri Reddy Counsel for Respondent : Public Prosecutor (Ap) <Gist: >Head Note: ?Citations 1. Air 1979 Sc 1382 2. (2002) 8 Scc 45 3. (2006) 10 Scc 681 4. (2016) 1 Scc 550 5. 1999 Scc (1) Supp. 80 6. (2007) 13 Scc 90 7. 1989 Supp (1) Scc 91 8. (1992) 3 Scc 300 9. (1993) 3 Scc 573 10. (1992) 3 Scc 106 11. (1993) 2 Scc 684 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['C.V. Nagarjuna Reddy', 'M.S.K.Jaiswal']"", ""LAWYER"": ""['A. Gayatri Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Lanke Mohana Rao']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Andhra Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The submission of the petitioner that the PG Tests were mandatory is also contrary to the minutes of the meetings dated 10.09.1993, 13.09.1993 and 28.09.1993, in which the petitioner had agreed that in case of non-conductance of PG Tests it would accept a rebate.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['10.09.1993', '13.09.1993', '28.09.1993']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['10.09.1993', '13.09.1993', '28.09.1993']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The submission of the petitioner that the PG Tests were mandatory is also contrary to the minutes of the meetings dated 10.09.1993, 13.09.1993 and 28.09.1993, in which the petitioner had agreed that in case of non-conductance of PG Tests it would accept a rebate. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['10.09.1993', '13.09.1993', '28.09.1993']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the circumstances, when LW11, Y. Sultana, is acting against the interests of the deceased just prior to the date of offence and is under the influence of her father, her non examination by the prosecution is not going to advance the defence any further.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Y. Sultana']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Y. Sultana']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the circumstances, when LW11, Y. Sultana, is acting against the interests of the deceased just prior to the date of offence and is under the influence of her father, her non examination by the prosecution is not going to advance the defence any further. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Y. Sultana']""} </s>"
I do not find substance in the last argument of learned counsel for the plaintiff that issues No.3 and 4 were decided by the Ld.Trial Court in favour of defendants without considering the material on record.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: I do not find substance in the last argument of learned counsel for the plaintiff that issues No.3 and 4 were decided by the Ld.Trial Court in favour of defendants without considering the material on record. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Reportable In The Supreme Court Of India Criminal Appellate Jurisdiction Criminal Appeal No. 1243 Of 2007 Abdul Sayeed ... Appellant Vs. State of Madhya Pradesh ...Respondent With Criminal Appeal No. 1399 Of 2008 Rafique ... Appellant Vs. State of Madhya Pradesh ...Respondent And Criminal Appeal Nos.1363-1365 Of 2010 Rais @ Toun & Ors. ...Appellants Vs. State of Madhya Pradesh ....Respondent Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court Of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Abdul Sayeed', 'Rafique', 'Rais @ Toun']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Madhya Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court Of India']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Abdul Sayeed', 'Rafique', 'Rais @ Toun']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Madhya Pradesh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Reportable In The Supreme Court Of India Criminal Appellate Jurisdiction Criminal Appeal No. 1243 Of 2007 Abdul Sayeed ... Appellant Vs. State of Madhya Pradesh ...Respondent With Criminal Appeal No. 1399 Of 2008 Rafique ... Appellant Vs. State of Madhya Pradesh ...Respondent And Criminal Appeal Nos.1363-1365 Of 2010 Rais @ Toun & Ors. ...Appellants Vs. State of Madhya Pradesh ....Respondent Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court Of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Abdul Sayeed', 'Rafique', 'Rais @ Toun']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Madhya Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In this regard, what the Apex Court held in N.K.V.Bros. (P.) Ltd. (supra) needs to be cited:- ""3.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['N.K.V.Bros. (P.) Ltd.']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['N.K.V.Bros. (P.) Ltd.']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this regard, what the Apex Court held in N.K.V.Bros. (P.) Ltd. (supra) needs to be cited:- ""3. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['N.K.V.Bros. (P.) Ltd.']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
These appeals are preferred against the judgment and award passed by the learned Member of MACT as stated above.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['MACT']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['MACT']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: These appeals are preferred against the judgment and award passed by the learned Member of MACT as stated above. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['MACT']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It appears that wisdom has dawned of late upon the Corporation and by its Resolution dated 29.06.2011, it has now decided to undo the injustice that it has perpetrated upon the petitioners all through and is now seeking to promote them/ appoint them afresh as Senior Marketing Officers by creating supernumerary posts.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['29.06.2011']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['29.06.2011']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It appears that wisdom has dawned of late upon the Corporation and by its Resolution dated 29.06.2011, it has now decided to undo the injustice that it has perpetrated upon the petitioners all through and is now seeking to promote them/ appoint them afresh as Senior Marketing Officers by creating supernumerary posts. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['29.06.2011']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Patna High Court CWJC No.8698 of 2017 dt.21-11-2017 27.,"{""CASE_NUMBER"": ""['CWJC No.8698 of 2017']"", ""COURT"": ""['Patna High Court']"", ""DATE"": ""['dt.21-11-2017']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['CWJC No.8698 of 2017']"", 'COURT': ""['Patna High Court']"", 'DATE': ""['dt.21-11-2017']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Patna High Court CWJC No.8698 of 2017 dt.21-11-2017 27. [/INST]
 {""CASE_NUMBER"": ""['CWJC No.8698 of 2017']"", ""COURT"": ""['Patna High Court']"", ""DATE"": ""['dt.21-11-2017']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Ext. H: Ext. H is the notice dated 6-3-1943, which was sent to the plaintiffs' firm by Mr. Hassan Mohiuddin (D. w. 1), who was then the Price Control Officer, informing the plaintiff's firm that the District Magistrate had suspended the licence of the plaintiffs' firm for the present due tg his conviction.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['6-3-1943']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Hassan Mohiuddin']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['6-3-1943']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Hassan Mohiuddin']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Ext. H: Ext. H is the notice dated 6-3-1943, which was sent to the plaintiffs' firm by Mr. Hassan Mohiuddin (D. w. 1), who was then the Price Control Officer, informing the plaintiff's firm that the District Magistrate had suspended the licence of the plaintiffs' firm for the present due tg his conviction. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['6-3-1943']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Hassan Mohiuddin']""} </s>"
Case No.: Tax Reference Case 9-10 of 1986 Petitioner: Commissioner Of Income-Tax Bombay Etc. Respondent: Podar Cement Pvt. Ltd. Etc. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Commissioner Of Income-Tax Bombay Etc']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Podar Cement Pvt. Ltd. Etc']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Commissioner Of Income-Tax Bombay Etc']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Podar Cement Pvt. Ltd. Etc']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Tax Reference Case 9-10 of 1986 Petitioner: Commissioner Of Income-Tax Bombay Etc. Respondent: Podar Cement Pvt. Ltd. Etc. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Commissioner Of Income-Tax Bombay Etc']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Podar Cement Pvt. Ltd. Etc']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
":1: vss In The High Court Of Judicature At Bombay Civil Appellate Jurisdiction First Appeal No.8 Of 1995 Managing Director, Mazgaon Docks Ltd., Dockyard Road Bombay-400010 ... Appellant V/s. Vinodbhai Mohanlal Patel ... Respondent Mr.S.R. Singh for Appellant Mr.R.S. Darandale i/b R.S. Datar for Respondent Coram: Smt.Nishita Mhatre, J. Dated: September 22, 2009 Oral Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Nishita Mhatre']"", ""LAWYER"": ""['S.R. Singh', 'Darandale']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Managing Director, Mazgaon Docks Ltd., Dockyard Road Bombay-400010']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Vinodbhai Mohanlal Patel']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Nishita Mhatre']"", 'LAWYER': ""['S.R. Singh', 'Darandale']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Managing Director, Mazgaon Docks Ltd., Dockyard Road Bombay-400010']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Vinodbhai Mohanlal Patel']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: :1: vss In The High Court Of Judicature At Bombay Civil Appellate Jurisdiction First Appeal No.8 Of 1995 Managing Director, Mazgaon Docks Ltd., Dockyard Road Bombay-400010 ... Appellant V/s. Vinodbhai Mohanlal Patel ... Respondent Mr.S.R. Singh for Appellant Mr.R.S. Darandale i/b R.S. Datar for Respondent Coram: Smt.Nishita Mhatre, J. Dated: September 22, 2009 Oral Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Nishita Mhatre']"", ""LAWYER"": ""['S.R. Singh', 'Darandale']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Managing Director, Mazgaon Docks Ltd., Dockyard Road Bombay-400010']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Vinodbhai Mohanlal Patel']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Navnit Lal C. Javeri V. K. K. Sen, Appellate Asstt. Commissioner, Bombay, 56 I.T.R. 198, applied. JUDGMENT: CIVIL APPELLATE JURISDICTION:Civil Appeals Nos. 2459 and 2460 of 1968 and 1161 and 1162 of 1971. Appeals by certificate/special leave from the judgment and order dated April 1, 1968 of the Calcutta High Court in Income-tax Reference No. 163 of 1964.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Calcutta High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['CIVIL APPELLATE JURISDICTION']"", ""PRECEDENT"": ""['Navnit Lal C. Javeri V. K. K. Sen']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Calcutta High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['CIVIL APPELLATE JURISDICTION']"", 'PRECEDENT': ""['Navnit Lal C. Javeri V. K. K. Sen']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Navnit Lal C. Javeri V. K. K. Sen, Appellate Asstt. Commissioner, Bombay, 56 I.T.R. 198, applied. JUDGMENT: CIVIL APPELLATE JURISDICTION:Civil Appeals Nos. 2459 and 2460 of 1968 and 1161 and 1162 of 1971. Appeals by certificate/special leave from the judgment and order dated April 1, 1968 of the Calcutta High Court in Income-tax Reference No. 163 of 1964. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Calcutta High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['CIVIL APPELLATE JURISDICTION']"", ""PRECEDENT"": ""['Navnit Lal C. Javeri V. K. K. Sen']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 WPlodg1718-12 In The High Court Of Judicature At Bombay Ordinary Original Civil Jurisdiction Writ Petition (Lodging) No.1718 Of 2012 Susme Builders Private Limited a company incorporated under the provisions of the Companies Act, 1956, and having its registered office at Unit No.F-1 1st floor, Shanti Nagar Industrial Estate Ltd., Vakola, Santacruz (East), Mumbai 400 055 ... Petitioner Versus 1. Chief Executive Officer Slum Rehabilitation Authority having his office at Anant Kanekar Marg, Bandra East, Mumbai 400 050. 2. High Power Committee having its office at Anant Kanekar Marg, Bandra East, Mumbai 400 050. 3. Om Namo Sujalam Sufalam Co-operative Housing Society, a Society registered under the provisions of the Maharashtra Co-operative Societies Act, 1960, Having its registered office at Shivaji Nagar Shree Chhatrapati Shivaji Maharaj Marg, Vakola Bridge, Santacruz (E) Mumbai 400 055. ... Respondents 2 WPlodg1718-12 Mr.Aspi Chinoy, Senior advocate with Mr.Pradeep Sancheti, Senior advocate, Mr Aniruddha Joshi, Mr.Rohan Cama, Mr. H.A.Thakore i/by M/s Thakore Jariwala Asso., for petitioner Mr.Ravi Kadam, Senior advocate with Mr.G.D.Uttangale and Mr.B.V.Phadnis i/b Uttangale & Co., for respondents No.1 & 2. Mr.P.K.Samdani, Senior advocate with Snehal Shah, Mr.Naushad Engineer & Ms Dipti Panda i/by Narayan & Narayan, for respondent No.3. Mr.V.R.Dhond, Senior advocate i/b. Rakesh Agarwal, for the Intervenors. Coram : Mohit S. Shah, C.J. & N.M. Jamdar J. Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay', 'High Power Committee having its office at Anant Kanekar Marg, Bandra East, Mumbai 400 050']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Mohit S. Shah', 'N.M. Jamdar']"", ""LAWYER"": ""['Aspi Chinoy', 'Pradeep Sancheti', 'Aniruddha Joshi', 'Rohan Cama', 'H.A.Thakore', 'Ravi Kadam', 'G.D.Uttangale', 'B.V.Phadnis', 'P.K.Samdani', 'Naushad Engineer', 'Dipti Panda', 'V.R.Dhond', 'Rakesh Agarwal']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Susme Builders Private Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Chief Executive Officer Slum Rehabilitation Authority having his office at Anant Kanekar Marg, Bandra East, Mumbai 400 050', 'Om Namo Sujalam Sufalam Co-operative Housing Society']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay', 'High Power Committee having its office at Anant Kanekar Marg, Bandra East, Mumbai 400 050']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Mohit S. Shah', 'N.M. Jamdar']"", 'LAWYER': ""['Aspi Chinoy', 'Pradeep Sancheti', 'Aniruddha Joshi', 'Rohan Cama', 'H.A.Thakore', 'Ravi Kadam', 'G.D.Uttangale', 'B.V.Phadnis', 'P.K.Samdani', 'Naushad Engineer', 'Dipti Panda', 'V.R.Dhond', 'Rakesh Agarwal']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Susme Builders Private Limited']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Chief Executive Officer Slum Rehabilitation Authority having his office at Anant Kanekar Marg, Bandra East, Mumbai 400 050', 'Om Namo Sujalam Sufalam Co-operative Housing Society']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 WPlodg1718-12 In The High Court Of Judicature At Bombay Ordinary Original Civil Jurisdiction Writ Petition (Lodging) No.1718 Of 2012 Susme Builders Private Limited a company incorporated under the provisions of the Companies Act, 1956, and having its registered office at Unit No.F-1 1st floor, Shanti Nagar Industrial Estate Ltd., Vakola, Santacruz (East), Mumbai 400 055 ... Petitioner Versus 1. Chief Executive Officer Slum Rehabilitation Authority having his office at Anant Kanekar Marg, Bandra East, Mumbai 400 050. 2. High Power Committee having its office at Anant Kanekar Marg, Bandra East, Mumbai 400 050. 3. Om Namo Sujalam Sufalam Co-operative Housing Society, a Society registered under the provisions of the Maharashtra Co-operative Societies Act, 1960, Having its registered office at Shivaji Nagar Shree Chhatrapati Shivaji Maharaj Marg, Vakola Bridge, Santacruz (E) Mumbai 400 055. ... Respondents 2 WPlodg1718-12 Mr.Aspi Chinoy, Senior advocate with Mr.Pradeep Sancheti, Senior advocate, Mr Aniruddha Joshi, Mr.Rohan Cama, Mr. H.A.Thakore i/by M/s Thakore Jariwala Asso., for petitioner Mr.Ravi Kadam, Senior advocate with Mr.G.D.Uttangale and Mr.B.V.Phadnis i/b Uttangale & Co., for respondents No.1 & 2. Mr.P.K.Samdani, Senior advocate with Snehal Shah, Mr.Naushad Engineer & Ms Dipti Panda i/by Narayan & Narayan, for respondent No.3. Mr.V.R.Dhond, Senior advocate i/b. Rakesh Agarwal, for the Intervenors. Coram : Mohit S. Shah, C.J. & N.M. Jamdar J. Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay', 'High Power Committee having its office at Anant Kanekar Marg, Bandra East, Mumbai 400 050']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Mohit S. Shah', 'N.M. Jamdar']"", ""LAWYER"": ""['Aspi Chinoy', 'Pradeep Sancheti', 'Aniruddha Joshi', 'Rohan Cama', 'H.A.Thakore', 'Ravi Kadam', 'G.D.Uttangale', 'B.V.Phadnis', 'P.K.Samdani', 'Naushad Engineer', 'Dipti Panda', 'V.R.Dhond', 'Rakesh Agarwal']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Susme Builders Private Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Chief Executive Officer Slum Rehabilitation Authority having his office at Anant Kanekar Marg, Bandra East, Mumbai 400 050', 'Om Namo Sujalam Sufalam Co-operative Housing Society']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"A learned Single Judge of this Court in Ashok Kumar Gupta Vs. M/s. Metal Goods Pvt. Ltd., reported in Allahabad Rent Cases, 1992 (1) 508,","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ashok Kumar Gupta Vs. M/s. Metal Goods Pvt. Ltd., reported in Allahabad Rent Cases, 1992 (1) 508']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Ashok Kumar Gupta Vs. M/s. Metal Goods Pvt. Ltd., reported in Allahabad Rent Cases, 1992 (1) 508']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A learned Single Judge of this Court in Ashok Kumar Gupta Vs. M/s. Metal Goods Pvt. Ltd., reported in Allahabad Rent Cases, 1992 (1) 508, [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ashok Kumar Gupta Vs. M/s. Metal Goods Pvt. Ltd., reported in Allahabad Rent Cases, 1992 (1) 508']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It is for the Union of India to raise objection to the filing of the agreement and to give reasons for not going to arbitration.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Union of India']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Union of India']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is for the Union of India to raise objection to the filing of the agreement and to give reasons for not going to arbitration. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Union of India']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The petitioner shall approach the State Bank of India, Tis Hazari Branch for opening the account.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['State Bank of India']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['State Bank of India']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioner shall approach the State Bank of India, Tis Hazari Branch for opening the account. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['State Bank of India']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam Tr.P(Crl.).No. 50 of 2003(A) 1. M.S. Santhoshkumar, S/O. Soman, ... Petitioner Vs 1. K.G. Mohanan, Kadavunkal House, ... Respondent 2. State Of Kerala, Rep. By Public For Petitioner :Sri.Grashious Kuriakose For Respondent :Sri.P.R.Ramachandra Menon The Hon'ble Mr. Justice R.Basant Dated :10/07/2008 O R D E R R.Basant, J ------------------------------------ Tr.P.(Crl.). No.50 of 2003 ------------------------------------- Dated this the 11th day of July, 2008 Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['R.Basant']"", ""LAWYER"": ""['Grashious Kuriakose', 'P.R.Ramachandra Menon']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M.S. Santhoshkumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['K.G. Mohanan', 'State Of Kerala']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['R.Basant']"", 'LAWYER': ""['Grashious Kuriakose', 'P.R.Ramachandra Menon']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['M.S. Santhoshkumar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['K.G. Mohanan', 'State Of Kerala']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam Tr.P(Crl.).No. 50 of 2003(A) 1. M.S. Santhoshkumar, S/O. Soman, ... Petitioner Vs 1. K.G. Mohanan, Kadavunkal House, ... Respondent 2. State Of Kerala, Rep. By Public For Petitioner :Sri.Grashious Kuriakose For Respondent :Sri.P.R.Ramachandra Menon The Hon'ble Mr. Justice R.Basant Dated :10/07/2008 O R D E R R.Basant, J ------------------------------------ Tr.P.(Crl.). No.50 of 2003 ------------------------------------- Dated this the 11th day of July, 2008 Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['R.Basant']"", ""LAWYER"": ""['Grashious Kuriakose', 'P.R.Ramachandra Menon']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M.S. Santhoshkumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['K.G. Mohanan', 'State Of Kerala']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Bombay Gas Co. Ltd Vs. Respondent: Gopal Bhiva & Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bombay Gas Co. Ltd']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Gopal Bhiva']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Bombay Gas Co. Ltd']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Gopal Bhiva']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Bombay Gas Co. Ltd Vs. Respondent: Gopal Bhiva & Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bombay Gas Co. Ltd']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Gopal Bhiva']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
A conductor was asked to possess Conductor's licence as well as driving licence without amendment in the Regulations as per Section 45 of the State Road Transport Corporation Act.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 45']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['State Road Transport Corporation Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 45']"", 'RESPONDENT': '[]', 'STATUTE': ""['State Road Transport Corporation Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A conductor was asked to possess Conductor's licence as well as driving licence without amendment in the Regulations as per Section 45 of the State Road Transport Corporation Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 45']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['State Road Transport Corporation Act']"", ""WITNESS"": ""[]""} </s>"
The aforesaid decision of the Supreme Court was relied on by the Supreme Court in Sharad v. State of Maharashtra .,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sharad v. State of Maharashtra']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Sharad v. State of Maharashtra']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The aforesaid decision of the Supreme Court was relied on by the Supreme Court in Sharad v. State of Maharashtra . [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sharad v. State of Maharashtra']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Vbc 1/41 wp313.10 In The High Court Of Judicature At Bombay Appellate Side Writ Petition No.313 Of 2010 With Civil Application No.2227 Of 2012 With Writ Petition Nos.7925/12, 8431/09, 10637/09 With C.A.2472/10, W.P.Nos.3909/10, 5821/10, 2889/11 And 2890 of 2011 With Original Side Writ Petition Nos.1618/11 & 1445 Of 2010 W.P.313/2010 : M/s.Jindal Poly Films Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. W.P.7925/2012 : .... M/s.Schreiber Dynamix Dairies Ltd. & Ors. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... W.P.8431/2009 : Eurotex Industries and Exports Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... W.P.10637/2009 : M/s.Pee Vee Textiles Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... W.P.3909/2010 : M/s.Bajaj Auto Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... W.P.5821/2010 : Sunflag Iron & Steel Co.Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... Vbc 2/41 wp313.10 W.P.2889/2011 : M/s.Vamsi Labs Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... W.P.2890/2011 : Smruthi Organics Ltd. & Ors. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... O.S. W.P.1618/2011 : Mirc Electronics Limited & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. O.S. W.P.1445/2010 : .... Nrb Bearing Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... Mr.V.Sridharan, Senior Advocate with Mr.C.B.Thakkar, Mr.M.M.Vaidya for the Petitioners in W.Ps. 7925/12, 313/10. 3909/10, 2889/11 and 2990/11 and for the Applicants in Caw No. 2227/12. Mr.Haresh Jagtiani, Senior Advocate with Mr.Anil D'Souza, Mr.Suprash Jain, Ms.Meenu Daryanani i/b. Haresh Jagtiani & Associates for the Petitioners in W.P. 8431/09. Mr.M.S.Bhandari i/b Smt. Pranjali Bhandari for the Petitioners in W.P.10637/09 and for the Applicants in Caw 2472/10. Mr. Aspi Chinoy, Senior Advocate with Ms. Chandana Salgaonkar, Ms. Aarti Sathe and Mr. Kalpesh Turalkar for the Petitioners in W.P. 5821/10. Mr.D.J.Khambata, Advocate General with Mr.V.A.Sonpal and Mr.B.B.Sharma, Agp for the State. ..... Coram : Dr.D.Y.Chandrachud And A.A.Sayed, Jj. June 10, 2013. Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D.Y.Chandrachud', 'A.A.Sayed']"", ""LAWYER"": ""['V.Sridharan', 'C.B.Thakkar', 'M.M.Vaidya', 'Haresh Jagtiani', \""Anil D'Souza\"", 'Suprash Jain', 'Meenu Daryanani', 'M.S.Bhandari', 'Aspi Chinoy', 'Chandana Salgaonkar', 'Aarti Sathe', 'Kalpesh Turalkar', 'D.J.Khambata', 'V.A.Sonpal', 'B.B.Sharma']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Jindal Poly Films', 'Schreiber Dynamix Dairies Ltd.', 'Eurotex Industries and Exports Ltd.', 'Pee Vee Textiles Ltd.', 'Bajaj Auto Ltd.', 'Sunflag Iron & Steel Co.', 'Vamsi Labs Ltd.', 'Smruthi Organics Ltd.', 'Mirc Electronics Limited', 'Nrb Bearing Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Maharashtra']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['D.Y.Chandrachud', 'A.A.Sayed']"", 'LAWYER': '[\'V.Sridharan\', \'C.B.Thakkar\', \'M.M.Vaidya\', \'Haresh Jagtiani\', ""Anil D\'Souza"", \'Suprash Jain\', \'Meenu Daryanani\', \'M.S.Bhandari\', \'Aspi Chinoy\', \'Chandana Salgaonkar\', \'Aarti Sathe\', \'Kalpesh Turalkar\', \'D.J.Khambata\', \'V.A.Sonpal\', \'B.B.Sharma\']', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Jindal Poly Films', 'Schreiber Dynamix Dairies Ltd.', 'Eurotex Industries and Exports Ltd.', 'Pee Vee Textiles Ltd.', 'Bajaj Auto Ltd.', 'Sunflag Iron & Steel Co.', 'Vamsi Labs Ltd.', 'Smruthi Organics Ltd.', 'Mirc Electronics Limited', 'Nrb Bearing Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Maharashtra']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Vbc 1/41 wp313.10 In The High Court Of Judicature At Bombay Appellate Side Writ Petition No.313 Of 2010 With Civil Application No.2227 Of 2012 With Writ Petition Nos.7925/12, 8431/09, 10637/09 With C.A.2472/10, W.P.Nos.3909/10, 5821/10, 2889/11 And 2890 of 2011 With Original Side Writ Petition Nos.1618/11 & 1445 Of 2010 W.P.313/2010 : M/s.Jindal Poly Films Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. W.P.7925/2012 : .... M/s.Schreiber Dynamix Dairies Ltd. & Ors. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... W.P.8431/2009 : Eurotex Industries and Exports Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... W.P.10637/2009 : M/s.Pee Vee Textiles Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... W.P.3909/2010 : M/s.Bajaj Auto Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... W.P.5821/2010 : Sunflag Iron & Steel Co.Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... Vbc 2/41 wp313.10 W.P.2889/2011 : M/s.Vamsi Labs Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... W.P.2890/2011 : Smruthi Organics Ltd. & Ors. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... O.S. W.P.1618/2011 : Mirc Electronics Limited & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. O.S. W.P.1445/2010 : .... Nrb Bearing Ltd. & Anr. ...Petitioners. Vs. The State of Maharashtra & Ors. ...Respondents. .... Mr.V.Sridharan, Senior Advocate with Mr.C.B.Thakkar, Mr.M.M.Vaidya for the Petitioners in W.Ps. 7925/12, 313/10. 3909/10, 2889/11 and 2990/11 and for the Applicants in Caw No. 2227/12. Mr.Haresh Jagtiani, Senior Advocate with Mr.Anil D'Souza, Mr.Suprash Jain, Ms.Meenu Daryanani i/b. Haresh Jagtiani & Associates for the Petitioners in W.P. 8431/09. Mr.M.S.Bhandari i/b Smt. Pranjali Bhandari for the Petitioners in W.P.10637/09 and for the Applicants in Caw 2472/10. Mr. Aspi Chinoy, Senior Advocate with Ms. Chandana Salgaonkar, Ms. Aarti Sathe and Mr. Kalpesh Turalkar for the Petitioners in W.P. 5821/10. Mr.D.J.Khambata, Advocate General with Mr.V.A.Sonpal and Mr.B.B.Sharma, Agp for the State. ..... Coram : Dr.D.Y.Chandrachud And A.A.Sayed, Jj. June 10, 2013. Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D.Y.Chandrachud', 'A.A.Sayed']"", ""LAWYER"": ""['V.Sridharan', 'C.B.Thakkar', 'M.M.Vaidya', 'Haresh Jagtiani', \""Anil D'Souza\"", 'Suprash Jain', 'Meenu Daryanani', 'M.S.Bhandari', 'Aspi Chinoy', 'Chandana Salgaonkar', 'Aarti Sathe', 'Kalpesh Turalkar', 'D.J.Khambata', 'V.A.Sonpal', 'B.B.Sharma']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Jindal Poly Films', 'Schreiber Dynamix Dairies Ltd.', 'Eurotex Industries and Exports Ltd.', 'Pee Vee Textiles Ltd.', 'Bajaj Auto Ltd.', 'Sunflag Iron & Steel Co.', 'Vamsi Labs Ltd.', 'Smruthi Organics Ltd.', 'Mirc Electronics Limited', 'Nrb Bearing Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Maharashtra']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"(ii) The unfortunate Incident of alleged falling of a lamp post was caused by which proximate reason, could hardly be ascertained and there was no positive evidence of any lack of proper maintenance on the part of the respondent authority and in the absence of which, it would be very difficult to adjudicate the matter for fixing the liability for such an incident.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (ii) The unfortunate Incident of alleged falling of a lamp post was caused by which proximate reason, could hardly be ascertained and there was no positive evidence of any lack of proper maintenance on the part of the respondent authority and in the absence of which, it would be very difficult to adjudicate the matter for fixing the liability for such an incident. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"6 *In The High Court Of Delhi At New Delhi + MAC.APP.No.13/2007 Date of Decision: 14th July, 2009 % National Insurance Co.Ltd. ..... Appellant Through : Mr. Amit Kumar Pandey, Adv. versus Farzana Ors. ..... Respondents Through : Mr. Arun Srivastava and Ms. Anupama Srivastava, Advs. for R - 1 & 2. Coram :- The Hon'Ble Mr. Justice J.R. Midha 1. Whether Reporters of Local papers may Yes be allowed to see the Judgment? 2. To be referred to the Reporter or not? Yes 3. Whether the judgment should be Yes reported in the Digest? Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Delhi At New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['J.R. Midha']"", ""LAWYER"": ""['Amit Kumar Pandey', 'Arun Srivastava', 'Anupama Srivastava']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['National Insurance Co.Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Farzana']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Delhi At New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['J.R. Midha']"", 'LAWYER': ""['Amit Kumar Pandey', 'Arun Srivastava', 'Anupama Srivastava']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['National Insurance Co.Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Farzana']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 6 *In The High Court Of Delhi At New Delhi + MAC.APP.No.13/2007 Date of Decision: 14th July, 2009 % National Insurance Co.Ltd. ..... Appellant Through : Mr. Amit Kumar Pandey, Adv. versus Farzana Ors. ..... Respondents Through : Mr. Arun Srivastava and Ms. Anupama Srivastava, Advs. for R - 1 & 2. Coram :- The Hon'Ble Mr. Justice J.R. Midha 1. Whether Reporters of Local papers may Yes be allowed to see the Judgment? 2. To be referred to the Reporter or not? Yes 3. Whether the judgment should be Yes reported in the Digest? Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Delhi At New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['J.R. Midha']"", ""LAWYER"": ""['Amit Kumar Pandey', 'Arun Srivastava', 'Anupama Srivastava']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['National Insurance Co.Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Farzana']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"2. Petitioner joined service of the Company as Sales Assistant on October 23, 1967.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['October 23, 1967']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['October 23, 1967']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 2. Petitioner joined service of the Company as Sales Assistant on October 23, 1967. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['October 23, 1967']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"O. P. No. 1211 was filed on 24-4-1967 to quash the said order; and the petitioner in that case obtained from this Court on 25-4-1967 an interim order, staying the operation of the said order.","{""CASE_NUMBER"": ""['O. P. No. 1211']"", ""COURT"": ""[]"", ""DATE"": ""['24-4-1967', '25-4-1967']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['O. P. No. 1211']"", 'COURT': '[]', 'DATE': ""['24-4-1967', '25-4-1967']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: O. P. No. 1211 was filed on 24-4-1967 to quash the said order; and the petitioner in that case obtained from this Court on 25-4-1967 an interim order, staying the operation of the said order. [/INST]
 {""CASE_NUMBER"": ""['O. P. No. 1211']"", ""COURT"": ""[]"", ""DATE"": ""['24-4-1967', '25-4-1967']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The section salesmen, propagandists, local travelling salesmen, local salesmen and drivers did not belong to the depot establishment.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The section salesmen, propagandists, local travelling salesmen, local salesmen and drivers did not belong to the depot establishment. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is evident that the Legislature did not intend to provide for applicability of the provisions of the Limitation Act, and did not intend enlargement of time to file the election petition.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Limitation Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Limitation Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is evident that the Legislature did not intend to provide for applicability of the provisions of the Limitation Act, and did not intend enlargement of time to file the election petition. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Limitation Act']"", ""WITNESS"": ""[]""} </s>"
"Rca No.114/2014: ""Vijay Kr. Sharma & Ors. V/s Jagdishwar Dayal Gupta & Ors."" Dod: 16.09.2014 In The Court Of Vinod Yadav: Addl. District Judge­I: South­West District: Dwarka Courts: New Delhi Regular Civil Appeal No.114/2014 In the matter of: 1. Shri Vijay Kumar Sharma, S/o Shri Umrai Singh Sharma, R/o E­55, Gali No.16, Sadh Nagar, Palam Colony, New Delhi. 2. Shri Sultan Singh Negi, S/o Shri Kirth Singh Negi, R/o E­54, Gali No.16, Sadh Nagar, Palam Colony, New Delhi. .....Appellants (Through Shri P.K Bhardwaj, Advocate) Versus 1. Shri Jagdishwar Dayal Gupta, S/o Late Shri Ishwar Dayal, R/o 68, New Rajdhani Enclave, Vikas Marg, New Delhi­92. 2. Municipal Corporation of Delhi, Town Hall, Chandni Chowk, New Delhi­06. (Through its Commissioner) 3. The Executive Engineer (Works), Mcd, Najafgarh Zone, Delhi Gate, Najafgarh, New Delhi­45. 4. Delhi Development Authority, Vikas Sadan, Ina Market, New Delhi. (Through its Vice­Chairman) .....Respondents (R­1 Through Shri R.K Gupta, Advocate) (R­2 & R­3 Nemo) (R­4 Through Shri Arvind Gupta, Advocate) Date of Institution of Appeal : 22.05.2010 Date of transfer to this court : 31.01.2014 Date of reserving judgment : 03.09.2014 Date of pronouncement : 16.09.2014 Rca U/s 96 Cpc: ""Rca Dismissed"" Page 1 of 22 Rca No.114/2014: ""Vijay Kr. Sharma & Ors. V/s Jagdishwar Dayal Gupta & Ors."" Dod: 16.09.2014 Appeal U/s 96 Cpc Against The Order Dated 12.04.2010 Passed In Civil Suit No.22/09/05 By Shri Vikas Dhull, Ld.ASCJ (S/W), Dwarka, New Delhi 16.09.2014 J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Addl. District Judge\\xadI: South\\xadWest District: Dwarka Courts: New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Vinod Yadav']"", ""LAWYER"": ""['P.K Bhardwaj', 'R.K Gupta', 'Arvind Gupta']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Vijay Kr. Sharma', 'Vijay Kumar Sharma', 'Sultan Singh Negi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Jagdishwar Dayal Gupta', 'Municipal Corporation of Delhi', 'Executive Engineer (Works), Mcd, Najafgarh Zone, Delhi Gate, Najafgarh, New Delhi\\xad45', 'Delhi Development Authority']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Addl. District Judge\\xadI: South\\xadWest District: Dwarka Courts: New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Vinod Yadav']"", 'LAWYER': ""['P.K Bhardwaj', 'R.K Gupta', 'Arvind Gupta']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Vijay Kr. Sharma', 'Vijay Kumar Sharma', 'Sultan Singh Negi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Jagdishwar Dayal Gupta', 'Municipal Corporation of Delhi', 'Executive Engineer (Works), Mcd, Najafgarh Zone, Delhi Gate, Najafgarh, New Delhi\\xad45', 'Delhi Development Authority']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Rca No.114/2014: ""Vijay Kr. Sharma & Ors. V/s Jagdishwar Dayal Gupta & Ors."" Dod: 16.09.2014 In The Court Of Vinod Yadav: Addl. District Judge­I: South­West District: Dwarka Courts: New Delhi Regular Civil Appeal No.114/2014 In the matter of: 1. Shri Vijay Kumar Sharma, S/o Shri Umrai Singh Sharma, R/o E­55, Gali No.16, Sadh Nagar, Palam Colony, New Delhi. 2. Shri Sultan Singh Negi, S/o Shri Kirth Singh Negi, R/o E­54, Gali No.16, Sadh Nagar, Palam Colony, New Delhi. .....Appellants (Through Shri P.K Bhardwaj, Advocate) Versus 1. Shri Jagdishwar Dayal Gupta, S/o Late Shri Ishwar Dayal, R/o 68, New Rajdhani Enclave, Vikas Marg, New Delhi­92. 2. Municipal Corporation of Delhi, Town Hall, Chandni Chowk, New Delhi­06. (Through its Commissioner) 3. The Executive Engineer (Works), Mcd, Najafgarh Zone, Delhi Gate, Najafgarh, New Delhi­45. 4. Delhi Development Authority, Vikas Sadan, Ina Market, New Delhi. (Through its Vice­Chairman) .....Respondents (R­1 Through Shri R.K Gupta, Advocate) (R­2 & R­3 Nemo) (R­4 Through Shri Arvind Gupta, Advocate) Date of Institution of Appeal : 22.05.2010 Date of transfer to this court : 31.01.2014 Date of reserving judgment : 03.09.2014 Date of pronouncement : 16.09.2014 Rca U/s 96 Cpc: ""Rca Dismissed"" Page 1 of 22 Rca No.114/2014: ""Vijay Kr. Sharma & Ors. V/s Jagdishwar Dayal Gupta & Ors."" Dod: 16.09.2014 Appeal U/s 96 Cpc Against The Order Dated 12.04.2010 Passed In Civil Suit No.22/09/05 By Shri Vikas Dhull, Ld.ASCJ (S/W), Dwarka, New Delhi 16.09.2014 J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Addl. District Judge\\xadI: South\\xadWest District: Dwarka Courts: New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Vinod Yadav']"", ""LAWYER"": ""['P.K Bhardwaj', 'R.K Gupta', 'Arvind Gupta']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Vijay Kr. Sharma', 'Vijay Kumar Sharma', 'Sultan Singh Negi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Jagdishwar Dayal Gupta', 'Municipal Corporation of Delhi', 'Executive Engineer (Works), Mcd, Najafgarh Zone, Delhi Gate, Najafgarh, New Delhi\\xad45', 'Delhi Development Authority']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Even though the company did not commence as a quasi-partnership, in all probability, the petitioner joined the company with an understanding with NVR that the petitioner will be entitled to participate in the management and would be properly remunerated.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['NVR']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['NVR']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Even though the company did not commence as a quasi-partnership, in all probability, the petitioner joined the company with an understanding with NVR that the petitioner will be entitled to participate in the management and would be properly remunerated. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['NVR']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"whether there is lurking behind it no minority at all and in any case, no minority institution.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: whether there is lurking behind it no minority at all and in any case, no minority institution. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam CRL.A.No. 485 of 2007() 1. P.V. Joseph, Purackal House, ... Petitioner Vs 1. State Of Kerala, Represented By ... Respondent 2. Biju Joseph, Puthenparampil, For Petitioner :Sri.Philip T.Varghese For Respondent : No Appearance The Hon'ble Mrs. Justice K.Hema Dated :03/09/2010 O R D E R C.R. K. Hema, J. ------------------------------------------------- Crl.Appeal No.485 of 2007 ------------------------------------------------- Dated this the 3rd September, 2010 J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K.Hema', 'K. Hema']"", ""LAWYER"": ""['Philip T.Varghese']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['P.V. Joseph']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala', 'Biju Joseph']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['K.Hema', 'K. Hema']"", 'LAWYER': ""['Philip T.Varghese']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['P.V. Joseph']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Kerala', 'Biju Joseph']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam CRL.A.No. 485 of 2007() 1. P.V. Joseph, Purackal House, ... Petitioner Vs 1. State Of Kerala, Represented By ... Respondent 2. Biju Joseph, Puthenparampil, For Petitioner :Sri.Philip T.Varghese For Respondent : No Appearance The Hon'ble Mrs. Justice K.Hema Dated :03/09/2010 O R D E R C.R. K. Hema, J. ------------------------------------------------- Crl.Appeal No.485 of 2007 ------------------------------------------------- Dated this the 3rd September, 2010 J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K.Hema', 'K. Hema']"", ""LAWYER"": ""['Philip T.Varghese']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['P.V. Joseph']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala', 'Biju Joseph']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"He expressly took notice of the fact that all the three petitioners had been specifically named in the first information report and further Zamiruddin, petitioner, had been so named by four other eye witnesses in their statements under Section 161 whilst Latfur Rahman and Belel, petitioners, had been similarly named by six eye witnesses.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Zamiruddin', 'Latfur Rahman', 'Belel']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 161']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Zamiruddin', 'Latfur Rahman', 'Belel']"", 'PRECEDENT': '[]', 'PROVISION': ""['Section 161']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He expressly took notice of the fact that all the three petitioners had been specifically named in the first information report and further Zamiruddin, petitioner, had been so named by four other eye witnesses in their statements under Section 161 whilst Latfur Rahman and Belel, petitioners, had been similarly named by six eye witnesses. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Zamiruddin', 'Latfur Rahman', 'Belel']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 161']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Out of this amount, the auditors allowed a sum of Rs. 58,621/4/3 while the Court allowed Rs. 52,521/5/6.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Out of this amount, the auditors allowed a sum of Rs. 58,621/4/3 while the Court allowed Rs. 52,521/5/6. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 Kambli In The High Court Of Judicature At Bombay Civil Appellate Jurisdiction Writ Petition No.6403 Of 2010 ... Smt.Shireen Sami Gadiali and another ...Petitioners v/s. Spenta Co.op.Hsg.Soc.Ltd. and others ...Respondents With Writ Petition No.7293 Of 2010 ... Shri Vasantrao Madhavrao Deshmane and ors. ...Petitioners v/s. The Asst.Registrar, co.operative Societies, Chandwad and others ...Respondents ... Mr.D.S.Joshi for Petitioners in Wp No.6403 of 2010. Mr.R.M.Haridas i/bMr.P.N.Joshi for Petitioners in Wp No.7293 of 2010. Mr.S.R.Nargolkar, Addl.G.P. for Respondents. Coram: D.K.Deshmukh , Anoop V. Mohta, & Ranjit More, Jjj. Dated: 21st April, 2011 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D.K.Deshmukh', 'Anoop V. Mohta', 'Ranjit More']"", ""LAWYER"": ""['D.S.Joshi', 'R.M.Haridas', 'P.N.Joshi', 'S.R.Nargolkar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Shireen Sami Gadiali', 'Vasantrao Madhavrao Deshmane']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Spenta Co.op.Hsg.Soc.Ltd.', 'Asst.Registrar, co.operative Societies, Chandwad']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['D.K.Deshmukh', 'Anoop V. Mohta', 'Ranjit More']"", 'LAWYER': ""['D.S.Joshi', 'R.M.Haridas', 'P.N.Joshi', 'S.R.Nargolkar']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Shireen Sami Gadiali', 'Vasantrao Madhavrao Deshmane']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Spenta Co.op.Hsg.Soc.Ltd.', 'Asst.Registrar, co.operative Societies, Chandwad']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 Kambli In The High Court Of Judicature At Bombay Civil Appellate Jurisdiction Writ Petition No.6403 Of 2010 ... Smt.Shireen Sami Gadiali and another ...Petitioners v/s. Spenta Co.op.Hsg.Soc.Ltd. and others ...Respondents With Writ Petition No.7293 Of 2010 ... Shri Vasantrao Madhavrao Deshmane and ors. ...Petitioners v/s. The Asst.Registrar, co.operative Societies, Chandwad and others ...Respondents ... Mr.D.S.Joshi for Petitioners in Wp No.6403 of 2010. Mr.R.M.Haridas i/bMr.P.N.Joshi for Petitioners in Wp No.7293 of 2010. Mr.S.R.Nargolkar, Addl.G.P. for Respondents. Coram: D.K.Deshmukh , Anoop V. Mohta, & Ranjit More, Jjj. Dated: 21st April, 2011 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D.K.Deshmukh', 'Anoop V. Mohta', 'Ranjit More']"", ""LAWYER"": ""['D.S.Joshi', 'R.M.Haridas', 'P.N.Joshi', 'S.R.Nargolkar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Shireen Sami Gadiali', 'Vasantrao Madhavrao Deshmane']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Spenta Co.op.Hsg.Soc.Ltd.', 'Asst.Registrar, co.operative Societies, Chandwad']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Lastly, it is submitted that the Lower Appellate Court has failed to comply with the provisions of Rules 11, 14, 15 and 31 of Order 41 of the Code as well as Para No. 414 of the Bombay Civil Manual.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rules 11, 14, 15 and 31 of Order 41']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Bombay Civil Manual']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Rules 11, 14, 15 and 31 of Order 41']"", 'RESPONDENT': '[]', 'STATUTE': ""['Bombay Civil Manual']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Lastly, it is submitted that the Lower Appellate Court has failed to comply with the provisions of Rules 11, 14, 15 and 31 of Order 41 of the Code as well as Para No. 414 of the Bombay Civil Manual. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rules 11, 14, 15 and 31 of Order 41']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Bombay Civil Manual']"", ""WITNESS"": ""[]""} </s>"
"On 24 February 1989, the State Government passed two separate orders of detention under Section 3(1)(iv) of the Act, directing the detention of K.M. Abdulla Kunhi, the common petitioner in W.P. (Crl.) No. 508 of 1989 and SLP (crl.) 2009 of 1989, and B.L. Mohammed Ali, the common petitioner in W.P. (Crl.) No. 542 of 1989 and SLP (Crl) No 2117 of 1989.","{""CASE_NUMBER"": ""['W.P. (Crl.) No. 508 of 1989', 'SLP (crl.) 2009 of 1989', 'W.P. (Crl.) No. 542 of 1989', 'SLP (Crl) No 2117 of 1989']"", ""COURT"": ""[]"", ""DATE"": ""['24 February 1989', 'B.L. Mohammed Ali']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['K.M. Abdulla Kunhi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 3(1)(iv)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['W.P. (Crl.) No. 508 of 1989', 'SLP (crl.) 2009 of 1989', 'W.P. (Crl.) No. 542 of 1989', 'SLP (Crl) No 2117 of 1989']"", 'COURT': '[]', 'DATE': ""['24 February 1989', 'B.L. Mohammed Ali']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['K.M. Abdulla Kunhi']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 3(1)(iv)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On 24 February 1989, the State Government passed two separate orders of detention under Section 3(1)(iv) of the Act, directing the detention of K.M. Abdulla Kunhi, the common petitioner in W.P. (Crl.) No. 508 of 1989 and SLP (crl.) 2009 of 1989, and B.L. Mohammed Ali, the common petitioner in W.P. (Crl.) No. 542 of 1989 and SLP (Crl) No 2117 of 1989. [/INST]
 {""CASE_NUMBER"": ""['W.P. (Crl.) No. 508 of 1989', 'SLP (crl.) 2009 of 1989', 'W.P. (Crl.) No. 542 of 1989', 'SLP (Crl) No 2117 of 1989']"", ""COURT"": ""[]"", ""DATE"": ""['24 February 1989', 'B.L. Mohammed Ali']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['K.M. Abdulla Kunhi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 3(1)(iv)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Mr. Mookherjee relied on a decision of the Supreme Court in Indian Chemical Products Ltd. v. State of Orissa [1966] 36 Comp Cas 592 (SC).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mookherjee']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Indian Chemical Products Ltd. v. State of Orissa [1966] 36 Comp Cas 592 (SC)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Mookherjee']"", 'PETITIONER': '[]', 'PRECEDENT': ""['Indian Chemical Products Ltd. v. State of Orissa [1966] 36 Comp Cas 592 (SC)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mr. Mookherjee relied on a decision of the Supreme Court in Indian Chemical Products Ltd. v. State of Orissa [1966] 36 Comp Cas 592 (SC). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mookherjee']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Indian Chemical Products Ltd. v. State of Orissa [1966] 36 Comp Cas 592 (SC)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In this context, the Apex Court had inter alia held as under: ""It will thus appear that this Court has consistently taken the view that in Rent Control Legislations if the tenant wishes to take advantage of the beneficial provisions of the Act, he must strictly comply with the requirements of the Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this context, the Apex Court had inter alia held as under: ""It will thus appear that this Court has consistently taken the view that in Rent Control Legislations if the tenant wishes to take advantage of the beneficial provisions of the Act, he must strictly comply with the requirements of the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Both the accused were present in the <span class=""hidden_text"" id=""span_15""> Crl. Appeal No. 416-DB of 2004. 16</span> house with Raghubir Singh when accused made extra judicial confession before them.","{""CASE_NUMBER"": ""['Crl. Appeal No. 416-DB of 2004']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Raghubir Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Crl. Appeal No. 416-DB of 2004']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Raghubir Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Both the accused were present in the <span class=""hidden_text"" id=""span_15""> Crl. Appeal No. 416-DB of 2004. 16</span> house with Raghubir Singh when accused made extra judicial confession before them. [/INST]
 {""CASE_NUMBER"": ""['Crl. Appeal No. 416-DB of 2004']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Raghubir Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Petitioner: The Commissioner Of Income-Tax, Bombay City Ii Vs. Respondent: Shri Sitaldas Tirathdas Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Commissioner Of Income-Tax, Bombay']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sitaldas Tirathdas']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Commissioner Of Income-Tax, Bombay']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Sitaldas Tirathdas']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: The Commissioner Of Income-Tax, Bombay City Ii Vs. Respondent: Shri Sitaldas Tirathdas Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Commissioner Of Income-Tax, Bombay']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sitaldas Tirathdas']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Even as the guilt of an accused may be proved by the testimony of a single witness, the innocence of the accused person may be established on the testimony of the single witness, even though a considerable number of witnesses may be forthcoming to testify to the truth of the case for the prosecution.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Even as the guilt of an accused may be proved by the testimony of a single witness, the innocence of the accused person may be established on the testimony of the single witness, even though a considerable number of witnesses may be forthcoming to testify to the truth of the case for the prosecution. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Reportabl E In The Supreme Court Of India Civil Appellate Jurisdiction Civil Appeal NOs. Of 2010 (Arising out of Slp (C) Nos.25043-25045 of 2008) Kalabharati Advertising ...Appellant Versus Hemant Vimalnath Narichania and Ors. ...Respondents Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court Of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Kalabharati Advertising']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Hemant Vimalnath Narichania']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court Of India']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Kalabharati Advertising']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Hemant Vimalnath Narichania']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Reportabl E In The Supreme Court Of India Civil Appellate Jurisdiction Civil Appeal NOs. Of 2010 (Arising out of Slp (C) Nos.25043-25045 of 2008) Kalabharati Advertising ...Appellant Versus Hemant Vimalnath Narichania and Ors. ...Respondents Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court Of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Kalabharati Advertising']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Hemant Vimalnath Narichania']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"No doubt the recommendation of a Court is not binding on the State Government/State Legislature but still it should be seriously considered, and not simply ignored.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: No doubt the recommendation of a Court is not binding on the State Government/State Legislature but still it should be seriously considered, and not simply ignored. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1. Whether Reporters of Local Newspapers may be allowed to see the judgment? 2. To be referred to the Reporters or not? 3. Whether the judgment should be reported in Digest? --- VINOD K. SHARMA,J.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['VINOD K. SHARMA']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['VINOD K. SHARMA']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1. Whether Reporters of Local Newspapers may be allowed to see the judgment? 2. To be referred to the Reporters or not? 3. Whether the judgment should be reported in Digest? --- VINOD K. SHARMA,J. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['VINOD K. SHARMA']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In our opinion that on the basis of the aforesaid facts, the learned Advocate General has rightly submitted that the learned Single Judge has erroneously held that the Scheme had been initiated at the behest of the Bengal Peerless or that it has not complied with the provisions of the 1972 Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In our opinion that on the basis of the aforesaid facts, the learned Advocate General has rightly submitted that the learned Single Judge has erroneously held that the Scheme had been initiated at the behest of the Bengal Peerless or that it has not complied with the provisions of the 1972 Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Petitioner: Messrs. R. C. Mitter & Sons Vs. Respondent: The Commissioner Of Income-Tax,West Bengal, Calcutta Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['R. C. Mitter & Sons']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Commissioner Of Income-Tax,West Bengal, Calcutta']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['R. C. Mitter & Sons']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Commissioner Of Income-Tax,West Bengal, Calcutta']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Messrs. R. C. Mitter & Sons Vs. Respondent: The Commissioner Of Income-Tax,West Bengal, Calcutta Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['R. C. Mitter & Sons']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Commissioner Of Income-Tax,West Bengal, Calcutta']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On the other hand, the Ld.Addl.PP has relied upon the judgment reported as, ""(2007) 2 SCC 170"", titled as, ""Ramdas & Ors. Vs. State of Maharashtra,"", wherein the Hon'ble Supreme Court has been pleased to hold as under:­ xxxxx ""24. ...........","{""CASE_NUMBER"": ""['\""(2007) 2 SCC 170']"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ramdas & Ors. Vs. State of Maharashtra']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[\'""(2007) 2 SCC 170\']', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Ramdas & Ors. Vs. State of Maharashtra']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On the other hand, the Ld.Addl.PP has relied upon the judgment reported as, ""(2007) 2 SCC 170"", titled as, ""Ramdas & Ors. Vs. State of Maharashtra,"", wherein the Hon'ble Supreme Court has been pleased to hold as under:­ xxxxx ""24. ........... [/INST]
 {""CASE_NUMBER"": ""['\""(2007) 2 SCC 170']"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Ramdas & Ors. Vs. State of Maharashtra']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"According to Mr. Lahiri, the election could be challenged by any candidate at the election or any elector i. e. any member of the Council of Shebaits.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Lahiri']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Lahiri']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: According to Mr. Lahiri, the election could be challenged by any candidate at the election or any elector i. e. any member of the Council of Shebaits. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Lahiri']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"provisions in section 317 are also supplementary to the provisions of section 231 and emphasise the position of the secured creditor as one outside the winding up, the secured creditor being, in regard to the exercise of those rights and privileges, in the same position as he would be under the Bankruptcy Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 317', 'section 231']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Bankruptcy Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 317', 'section 231']"", 'RESPONDENT': '[]', 'STATUTE': ""['Bankruptcy Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: provisions in section 317 are also supplementary to the provisions of section 231 and emphasise the position of the secured creditor as one outside the winding up, the secured creditor being, in regard to the exercise of those rights and privileges, in the same position as he would be under the Bankruptcy Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 317', 'section 231']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Bankruptcy Act']"", ""WITNESS"": ""[]""} </s>"
"Before us a purported minute of the meeting dated 27.10.1993 has been placed which is in the following terms: ""It was decided that objection/ submission are to be given before the Krishnaunni Commission appointed by the Hon'ble High Court of Kerala and it may be filed jointly or severally by the members of the Managing Committee after consulting with Devaswom Advocate Shri K.P. Dandapani of Ernakulam.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court of Kerala']"", ""DATE"": ""['27.10.1993']"", ""GPE"": ""['Ernakulam']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Krishnaunni Commission']"", ""OTHER_PERSON"": ""['Devaswom', 'K.P. Dandapani']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court of Kerala']"", 'DATE': ""['27.10.1993']"", 'GPE': ""['Ernakulam']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Krishnaunni Commission']"", 'OTHER_PERSON': ""['Devaswom', 'K.P. Dandapani']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Before us a purported minute of the meeting dated 27.10.1993 has been placed which is in the following terms: ""It was decided that objection/ submission are to be given before the Krishnaunni Commission appointed by the Hon'ble High Court of Kerala and it may be filed jointly or severally by the members of the Managing Committee after consulting with Devaswom Advocate Shri K.P. Dandapani of Ernakulam. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court of Kerala']"", ""DATE"": ""['27.10.1993']"", ""GPE"": ""['Ernakulam']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Krishnaunni Commission']"", ""OTHER_PERSON"": ""['Devaswom', 'K.P. Dandapani']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The 8th Respondent claimed that the Policy was only an Act Policy (Third Party Policy) and, therefore, it did not cover liability towards passengers.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The 8th Respondent claimed that the Policy was only an Act Policy (Third Party Policy) and, therefore, it did not cover liability towards passengers. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The fact also remains that in Gurdas Singh's case there were other adverse remarks also even after the earlier promotion, regarding dishonesty though they were not communicated.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Gurdas Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Gurdas Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The fact also remains that in Gurdas Singh's case there were other adverse remarks also even after the earlier promotion, regarding dishonesty though they were not communicated. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Gurdas Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Merely by showing that the first condition is satisfied, the Revenue cannot ask the Court to presume that the second condition too is fulfilled, because even in case where the first condition of 15% difference is satisfied, the transaction may be a perfectly honest and bonafide transaction and there may be no understatement of the consideration.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Merely by showing that the first condition is satisfied, the Revenue cannot ask the Court to presume that the second condition too is fulfilled, because even in case where the first condition of 15% difference is satisfied, the transaction may be a perfectly honest and bonafide transaction and there may be no understatement of the consideration. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
(9) ILR 41 Mad 743 : (AIR 1919 Mad1944) (FB) is the Full Bench decision.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['ILR 41 Mad 743 : (AIR 1919 Mad1944) (FB)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['ILR 41 Mad 743 : (AIR 1919 Mad1944) (FB)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (9) ILR 41 Mad 743 : (AIR 1919 Mad1944) (FB) is the Full Bench decision. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['ILR 41 Mad 743 : (AIR 1919 Mad1944) (FB)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We are of the opinion that a harmonious interpretation is necessary in this matter.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We are of the opinion that a harmonious interpretation is necessary in this matter. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Before considering the validity of the regulation on the ground of unreasonable restriction, it is profitable to refer to an instructive approach adopted by a Division Bench of the Bombay High Court consisting of Chagla, C. J. and Gajendragadkar, J. (as he then was) in State of Bombay v. Heman Santlal, observed (at p. 18): ""... .... ...","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Bombay High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Chagla', 'Gajendragadkar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Bombay v. Heman Santlal']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Bombay High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Chagla', 'Gajendragadkar']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['State of Bombay v. Heman Santlal']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Before considering the validity of the regulation on the ground of unreasonable restriction, it is profitable to refer to an instructive approach adopted by a Division Bench of the Bombay High Court consisting of Chagla, C. J. and Gajendragadkar, J. (as he then was) in State of Bombay v. Heman Santlal, observed (at p. 18): ""... .... ... [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Bombay High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Chagla', 'Gajendragadkar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Bombay v. Heman Santlal']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"l) The petitioners shall furnish all the relevant documents for opening of the saving bank account and Fixed Deposit to Senior Manager of UCO Bank, Patiala House Court, New Delhi.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Patiala House Court, New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['UCO Bank']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Patiala House Court, New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['UCO Bank']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: l) The petitioners shall furnish all the relevant documents for opening of the saving bank account and Fixed Deposit to Senior Manager of UCO Bank, Patiala House Court, New Delhi. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Patiala House Court, New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['UCO Bank']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The concerned Doctor advised PW-1 to carry him to another hospital.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The concerned Doctor advised PW-1 to carry him to another hospital. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It is proved on record by PW22 Inspector Banwari Lal Meena who is neither the author of the recovery memo nor a witness to the same.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Banwari Lal Meena']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Banwari Lal Meena']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is proved on record by PW22 Inspector Banwari Lal Meena who is neither the author of the recovery memo nor a witness to the same. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Banwari Lal Meena']""} </s>"
"In The Court Of Sh Ajay Kumar Jain, Presiding Officer: Motor Accident Claims Tribunal: South East District/Saket Courts Complex/New Delhi Suit no. 238/13 Fir No. 204/13 Ps. H.N.Din Narender Singh & Ors Vs Lalji & Ors Fatal Case 1. Sh. Narinder Singh S/o Sh. Harnam Singh (father of deceased) 2. Smt. Sawinder Kaur W/o Sh. Narinder Singh (mother of deceased) 3. Kumari Gurjeet Kaur D/o Sh. Narinder Singh (Sister of deceased) All are R/o ­House no. 561, Sector­28, Faridabad, Haryana .............Petitioners/claimants Versus 1. Sh. Lalji S/o Late Sh. Kalku (driver) R/o House no. 224­C, G­Block, Lal Kaun, New Delhi 2. Sh. Sanjeev Kumar S/o Sh. Bishamber Das (owner) R/o House no. J­1/78, 2nd Floor, Khirki Extension, Malviya Nagar, New Delhi also at Village Pali, District Faridabad, Haryana 3. Hdfc Ergo General Insurance Company Limited Suit No­238/13 , Narender Singh & Ors Vs Lalji &Ors , page no. 1 /20 Pitampura , New Delhi. Corporate office­6th Floor, Leela Business Park, Andheri Kurla Road, Andheri (E), Mumbai also registered office at Ramon House, H.T.Parekh Marg, 169, Backbay Reclamation, Mumbai­400020 ......................Respondents Date of Institution : 02.09.2013 Date of reserving judgment/order : 18.09.2014 Date of Pronouncement : 18.09.2014 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Presiding Officer: Motor Accident Claims Tribunal: South East District/Saket Courts Complex/New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ajay Kumar Jain']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['H.N.Din Narender Singh', 'Narinder Singh', 'Sawinder Kaur', 'Narender Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Lalji', 'Kumari Gurjeet Kaur', 'Sanjeev Kumar', 'Hdfc Ergo General Insurance Company Limited']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Presiding Officer: Motor Accident Claims Tribunal: South East District/Saket Courts Complex/New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ajay Kumar Jain']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['H.N.Din Narender Singh', 'Narinder Singh', 'Sawinder Kaur', 'Narender Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Lalji', 'Kumari Gurjeet Kaur', 'Sanjeev Kumar', 'Hdfc Ergo General Insurance Company Limited']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Sh Ajay Kumar Jain, Presiding Officer: Motor Accident Claims Tribunal: South East District/Saket Courts Complex/New Delhi Suit no. 238/13 Fir No. 204/13 Ps. H.N.Din Narender Singh & Ors Vs Lalji & Ors Fatal Case 1. Sh. Narinder Singh S/o Sh. Harnam Singh (father of deceased) 2. Smt. Sawinder Kaur W/o Sh. Narinder Singh (mother of deceased) 3. Kumari Gurjeet Kaur D/o Sh. Narinder Singh (Sister of deceased) All are R/o ­House no. 561, Sector­28, Faridabad, Haryana .............Petitioners/claimants Versus 1. Sh. Lalji S/o Late Sh. Kalku (driver) R/o House no. 224­C, G­Block, Lal Kaun, New Delhi 2. Sh. Sanjeev Kumar S/o Sh. Bishamber Das (owner) R/o House no. J­1/78, 2nd Floor, Khirki Extension, Malviya Nagar, New Delhi also at Village Pali, District Faridabad, Haryana 3. Hdfc Ergo General Insurance Company Limited Suit No­238/13 , Narender Singh & Ors Vs Lalji &Ors , page no. 1 /20 Pitampura , New Delhi. Corporate office­6th Floor, Leela Business Park, Andheri Kurla Road, Andheri (E), Mumbai also registered office at Ramon House, H.T.Parekh Marg, 169, Backbay Reclamation, Mumbai­400020 ......................Respondents Date of Institution : 02.09.2013 Date of reserving judgment/order : 18.09.2014 Date of Pronouncement : 18.09.2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Presiding Officer: Motor Accident Claims Tribunal: South East District/Saket Courts Complex/New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ajay Kumar Jain']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['H.N.Din Narender Singh', 'Narinder Singh', 'Sawinder Kaur', 'Narender Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Lalji', 'Kumari Gurjeet Kaur', 'Sanjeev Kumar', 'Hdfc Ergo General Insurance Company Limited']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Even according to the complainant and prosecution witness.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Even according to the complainant and prosecution witness. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
If I don't receive any response to this letter within a period of 7 days I may file a writ petition against the Universities and medical and engineering colleges in Karnataka before the High Court of Karnataka to stop this sale of seats.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court of Karnataka']"", ""DATE"": ""[]"", ""GPE"": ""['Karnataka']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court of Karnataka']"", 'DATE': '[]', 'GPE': ""['Karnataka']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: If I don't receive any response to this letter within a period of 7 days I may file a writ petition against the Universities and medical and engineering colleges in Karnataka before the High Court of Karnataka to stop this sale of seats. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court of Karnataka']"", ""DATE"": ""[]"", ""GPE"": ""['Karnataka']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Appeals from the judgments and orders dated August 7, 1956, of the Allahabad High Court in Special Appeals Nos. 151 and 152 of 1955.","{""CASE_NUMBER"": ""['Special Appeals Nos. 151 and 152 of 1955']"", ""COURT"": ""['Allahabad High Court']"", ""DATE"": ""['August 7, 1956']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Special Appeals Nos. 151 and 152 of 1955']"", 'COURT': ""['Allahabad High Court']"", 'DATE': ""['August 7, 1956']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Appeals from the judgments and orders dated August 7, 1956, of the Allahabad High Court in Special Appeals Nos. 151 and 152 of 1955. [/INST]
 {""CASE_NUMBER"": ""['Special Appeals Nos. 151 and 152 of 1955']"", ""COURT"": ""['Allahabad High Court']"", ""DATE"": ""['August 7, 1956']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Per contra, Mr. Sakya Sen, learned counsel appearing for the plaintiff/opposite party also referred to a decision in case of Mayar (H.K.) Ltd. & Ors. vs. Owners & Parties, Vessel M.V. Fortune Express & Ors. reported in (2006) 3 Supreme Court Cases 100 and invited my attention to head note 5.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sakya Sen']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Mayar (H.K.) Ltd. & Ors. vs. Owners & Parties, Vessel M.V. Fortune Express & Ors. reported in (2006) 3 Supreme Court Cases 100']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sakya Sen']"", 'PETITIONER': '[]', 'PRECEDENT': ""['Mayar (H.K.) Ltd. & Ors. vs. Owners & Parties, Vessel M.V. Fortune Express & Ors. reported in (2006) 3 Supreme Court Cases 100']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Per contra, Mr. Sakya Sen, learned counsel appearing for the plaintiff/opposite party also referred to a decision in case of Mayar (H.K.) Ltd. & Ors. vs. Owners & Parties, Vessel M.V. Fortune Express & Ors. reported in (2006) 3 Supreme Court Cases 100 and invited my attention to head note 5. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sakya Sen']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Mayar (H.K.) Ltd. & Ors. vs. Owners & Parties, Vessel M.V. Fortune Express & Ors. reported in (2006) 3 Supreme Court Cases 100']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"That way, he attempted to commit suicide.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: That way, he attempted to commit suicide. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Reportable In The Supreme Court Of India Criminal Appellate Jurisdiction Criminal Appeal No. 148 of 2003 1 2 Dharam Pal & Ors. … Appellants Vs. 2 State Of Haryana & Anr. … Respondents With Criminal Appeal Nos. 865 of 2004, 1334 of 2005 and 537 of 2006 J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court Of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Dharam Pal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Haryana']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court Of India']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Dharam Pal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Haryana']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Reportable In The Supreme Court Of India Criminal Appellate Jurisdiction Criminal Appeal No. 148 of 2003 1 2 Dharam Pal & Ors. … Appellants Vs. 2 State Of Haryana & Anr. … Respondents With Criminal Appeal Nos. 865 of 2004, 1334 of 2005 and 537 of 2006 J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court Of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Dharam Pal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Haryana']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The words of Article 226 of the Constitution are wide enough to cover an order of that description, Reference may be made to the observations of Bind Basni Prasad J. in -- 'Sm. Prabhabati Devi v. District Magistrate of Allahabad', AIR 1952 All 836 at p. 838 (A).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Bind Basni Prasad J.']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[\""Sm. Prabhabati Devi v. District Magistrate of Allahabad', AIR 1952 All 836 at p. 838 (A)\""]"", ""PROVISION"": ""['Article 226']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Bind Basni Prasad J.']"", 'PETITIONER': '[]', 'PRECEDENT': '[""Sm. Prabhabati Devi v. District Magistrate of Allahabad\', AIR 1952 All 836 at p. 838 (A)""]', 'PROVISION': ""['Article 226']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The words of Article 226 of the Constitution are wide enough to cover an order of that description, Reference may be made to the observations of Bind Basni Prasad J. in -- 'Sm. Prabhabati Devi v. District Magistrate of Allahabad', AIR 1952 All 836 at p. 838 (A). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Bind Basni Prasad J.']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[\""Sm. Prabhabati Devi v. District Magistrate of Allahabad', AIR 1952 All 836 at p. 838 (A)\""]"", ""PROVISION"": ""['Article 226']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"This again is contrary to the holding of the Supreme Court in Kcrala State Electricity Board v. T. P. K., 1976 Ker LT 810 : (AIR 1977 SC 282) that Article 137 applies only to petitions or applications under whatever statute made to a Civil Court.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Kcrala State Electricity Board v. T. P. K., 1976 Ker LT 810 : (AIR 1977 SC 282)']"", ""PROVISION"": ""['Article 137']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Kcrala State Electricity Board v. T. P. K., 1976 Ker LT 810 : (AIR 1977 SC 282)']"", 'PROVISION': ""['Article 137']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This again is contrary to the holding of the Supreme Court in Kcrala State Electricity Board v. T. P. K., 1976 Ker LT 810 : (AIR 1977 SC 282) that Article 137 applies only to petitions or applications under whatever statute made to a Civil Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Kcrala State Electricity Board v. T. P. K., 1976 Ker LT 810 : (AIR 1977 SC 282)']"", ""PROVISION"": ""['Article 137']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Both the parties led their evidence, respectively producing the witnesses and the documents relied upon by them.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Both the parties led their evidence, respectively producing the witnesses and the documents relied upon by them. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
This means that recording of the complaint must have started at about 7-00 a.m.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This means that recording of the complaint must have started at about 7-00 a.m. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Babu Lal SI (PW-13) took Chhote Lal complainant with him and as also Sudesh and official members of the parties and reached Uhlawas `pahar'.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Uhlawas']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Chhote Lal', 'Sudesh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Babu Lal']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Uhlawas']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Chhote Lal', 'Sudesh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Babu Lal']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Babu Lal SI (PW-13) took Chhote Lal complainant with him and as also Sudesh and official members of the parties and reached Uhlawas `pahar'. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Uhlawas']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Chhote Lal', 'Sudesh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Babu Lal']""} </s>"
"However, when P.W.2 Rajesh Kumar Srivastava was examined in court, he has not stated a word about receipt of any secret information by him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Rajesh Kumar Srivastava']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Rajesh Kumar Srivastava']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: However, when P.W.2 Rajesh Kumar Srivastava was examined in court, he has not stated a word about receipt of any secret information by him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Rajesh Kumar Srivastava']""} </s>"
I also do not appreciate the submission of the Revenue that incongruous results would follow by restricting section 45(7) only to section 45(1).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 45(7)', 'section 45(1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 45(7)', 'section 45(1)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: I also do not appreciate the submission of the Revenue that incongruous results would follow by restricting section 45(7) only to section 45(1). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 45(7)', 'section 45(1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The said Rule 157 does not lay down any particular form or any formality to to be complied with by the General Manager when making rules in exercise of the power under that rule.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rule 157']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Rule 157']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The said Rule 157 does not lay down any particular form or any formality to to be complied with by the General Manager when making rules in exercise of the power under that rule. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rule 157']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 ® In The High Court Of Karnataka At Bangalore Dated This The 22Nd Day Of March 2013 Before: The Hon'Ble Mr. Justice Anand Byrareddy Criminal Petition No.8943 Of 2010 Between: M/s. Mesh Trans Gears Private Limited, No.884, Kamakshipalya Extension, Magadi Road, Bangalore - 560 079, Represented by its Managing Director, Rajiv S.Hundekar, No.52, 1st Floor, Vinayaka Layout, Magadi Road, Bangalore. ...Petitioner (By Shri. S.M. Chandrashekar, Senior Advocate for Shri R.J. Bhusare, Advocate) And: Dr. R. Parvathreddy, Son of R. Hampanna, Major, Occupation: Medical Practitioner, resident of C/o. Kasturi Memorial Clinic, Jamunal Medical Teen Khandil, Ashok Road, Raichur. ...Respondent 2 (By Shri. Prashant S. Kumman, Advocate for Shri. Veeresh B. Patil, Advocate ) ***** This Criminal Petition is filed under Section 482 Code of Criminal Procedure, 1973 , by the advocate for the petitioner praying that this Hon'ble Court may be pleased to, quash the proceedings initiated by the respondent under Section 138 of Negotiable Instruments Act and Section 420 of the Indian Penal Code in C.C.No.420/2007 on the file of the Ii Judicial Magistrate First Class, Raichur. This petition, having been heard and reserved on 26.02.2013 Circuit Bench at Gulbarga and coming on for Pronouncement of Orders this day, the Court delivered the following:- Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Anand Byrareddy']"", ""LAWYER"": ""['S.M. Chandrashekar', 'R.J. Bhusare', 'Prashant S. Kumman', 'Veeresh B. Patil']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Mesh Trans Gears Private Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['R. Parvathreddy']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Karnataka At Bangalore']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Anand Byrareddy']"", 'LAWYER': ""['S.M. Chandrashekar', 'R.J. Bhusare', 'Prashant S. Kumman', 'Veeresh B. Patil']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Mesh Trans Gears Private Limited']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['R. Parvathreddy']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 ® In The High Court Of Karnataka At Bangalore Dated This The 22Nd Day Of March 2013 Before: The Hon'Ble Mr. Justice Anand Byrareddy Criminal Petition No.8943 Of 2010 Between: M/s. Mesh Trans Gears Private Limited, No.884, Kamakshipalya Extension, Magadi Road, Bangalore - 560 079, Represented by its Managing Director, Rajiv S.Hundekar, No.52, 1st Floor, Vinayaka Layout, Magadi Road, Bangalore. ...Petitioner (By Shri. S.M. Chandrashekar, Senior Advocate for Shri R.J. Bhusare, Advocate) And: Dr. R. Parvathreddy, Son of R. Hampanna, Major, Occupation: Medical Practitioner, resident of C/o. Kasturi Memorial Clinic, Jamunal Medical Teen Khandil, Ashok Road, Raichur. ...Respondent 2 (By Shri. Prashant S. Kumman, Advocate for Shri. Veeresh B. Patil, Advocate ) ***** This Criminal Petition is filed under Section 482 Code of Criminal Procedure, 1973 , by the advocate for the petitioner praying that this Hon'ble Court may be pleased to, quash the proceedings initiated by the respondent under Section 138 of Negotiable Instruments Act and Section 420 of the Indian Penal Code in C.C.No.420/2007 on the file of the Ii Judicial Magistrate First Class, Raichur. This petition, having been heard and reserved on 26.02.2013 Circuit Bench at Gulbarga and coming on for Pronouncement of Orders this day, the Court delivered the following:- Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Anand Byrareddy']"", ""LAWYER"": ""['S.M. Chandrashekar', 'R.J. Bhusare', 'Prashant S. Kumman', 'Veeresh B. Patil']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Mesh Trans Gears Private Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['R. Parvathreddy']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Sub-clause 4 of Regulation 8 reads as follows : ""Reg. 8(4) The Bureau RC shall invite comments/recommendations on the applications referred to in sub-regulation (3) from the follow-ing, namely : (i) the State Government concerned ; (ii) the affiliating University/State Board of Technical Education; (iii) Bureaus MPCD; (iv) Bureau BOS; (v) Bureau RA; (vi) the Regional Office.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sub-clause 4 of Regulation 8']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Sub-clause 4 of Regulation 8']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Sub-clause 4 of Regulation 8 reads as follows : ""Reg. 8(4) The Bureau RC shall invite comments/recommendations on the applications referred to in sub-regulation (3) from the follow-ing, namely : (i) the State Government concerned ; (ii) the affiliating University/State Board of Technical Education; (iii) Bureaus MPCD; (iv) Bureau BOS; (v) Bureau RA; (vi) the Regional Office."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sub-clause 4 of Regulation 8']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is further submitted that the plaintiff filed a suit for permanent injunction in the court of Sh. M.K. Gupta, and the same was dismissed as withdrawn because no declaration was sought in that suit, hence the plaintiff withdrew the suit.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.K. Gupta']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['M.K. Gupta']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is further submitted that the plaintiff filed a suit for permanent injunction in the court of Sh. M.K. Gupta, and the same was dismissed as withdrawn because no declaration was sought in that suit, hence the plaintiff withdrew the suit. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.K. Gupta']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In support of this contention which is a general proposition I have referred to Sec.27 of the Sale of Goods Act, a commentary on Pollock and Mulla, Roman Maxim ""Nemo Dat Quod Non Habet"" which has been explained by Benjamin's Sale of Goods, which has also been explained in Broom's Legal Maxims.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Pollock', 'Mulla', 'Roman Maxim', 'Benjamin', 'Broom']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sec.27 of']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Sale of Goods Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Pollock', 'Mulla', 'Roman Maxim', 'Benjamin', 'Broom']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Sec.27 of']"", 'RESPONDENT': '[]', 'STATUTE': ""['Sale of Goods Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In support of this contention which is a general proposition I have referred to Sec.27 of the Sale of Goods Act, a commentary on Pollock and Mulla, Roman Maxim ""Nemo Dat Quod Non Habet"" which has been explained by Benjamin's Sale of Goods, which has also been explained in Broom's Legal Maxims. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Pollock', 'Mulla', 'Roman Maxim', 'Benjamin', 'Broom']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sec.27 of']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Sale of Goods Act']"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Madras Dated: 25.03.2010 Coram: The Honourable Ms.Justice R.Mala Crl.A.Nos.1033 to 1048 of 2002 1. G.Nagarajan 2. K.Srinivasan .. Appellants in Crl.A.No.1033 of 2002 Vs. State rep. by Deputy Supdt. Of Police, Vigilance & Anti-Corruption Special Cell, Salem. .. Respondent in Crl.A.No.1033 of 2002 Criminal Appeal No.1033 of 2002 against the judgment dated 30.5.2002 in C.C.No.3 of 1996 on the file of the First Additional District and Sessions Judge-cum-Chief Judicial Magistrate, Dharmapuri at Krishnagiri. For appellants in Crl.A.No.1033 of 2002 : Mr.R.Sankarasubbu For respondent in Crl.A.No.1033 of 2002: Mr.I.Paul Noble Devakumar, Govt. Advocate (Crl. Side). Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['R.Mala']"", ""LAWYER"": ""['R.Sankarasubbu']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['G.Nagarajan', 'K.Srinivasan', 'I.Paul Noble Devakumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Madras']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['R.Mala']"", 'LAWYER': ""['R.Sankarasubbu']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['G.Nagarajan', 'K.Srinivasan', 'I.Paul Noble Devakumar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Madras Dated: 25.03.2010 Coram: The Honourable Ms.Justice R.Mala Crl.A.Nos.1033 to 1048 of 2002 1. G.Nagarajan 2. K.Srinivasan .. Appellants in Crl.A.No.1033 of 2002 Vs. State rep. by Deputy Supdt. Of Police, Vigilance & Anti-Corruption Special Cell, Salem. .. Respondent in Crl.A.No.1033 of 2002 Criminal Appeal No.1033 of 2002 against the judgment dated 30.5.2002 in C.C.No.3 of 1996 on the file of the First Additional District and Sessions Judge-cum-Chief Judicial Magistrate, Dharmapuri at Krishnagiri. For appellants in Crl.A.No.1033 of 2002 : Mr.R.Sankarasubbu For respondent in Crl.A.No.1033 of 2002: Mr.I.Paul Noble Devakumar, Govt. Advocate (Crl. Side). Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['R.Mala']"", ""LAWYER"": ""['R.Sankarasubbu']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['G.Nagarajan', 'K.Srinivasan', 'I.Paul Noble Devakumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"D.W.1 deposed in his evidence that as specified in Ex.B.13, he complied with the payment of Rs. 54,400/- to Mr. Mahesh Sanghi and for the said payment made by him, the plaintiff had given adjustment by issuing receipt Ex.B.6, dated 21-1-1985.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['21-1-1985']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mahesh Sanghi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['21-1-1985']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Mahesh Sanghi']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: D.W.1 deposed in his evidence that as specified in Ex.B.13, he complied with the payment of Rs. 54,400/- to Mr. Mahesh Sanghi and for the said payment made by him, the plaintiff had given adjustment by issuing receipt Ex.B.6, dated 21-1-1985. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['21-1-1985']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mahesh Sanghi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"19.In the case of State of Bihar Vs. Ramesh Singh, AIR 1977 SC 2018 Hon'ble Supreme Court observed as under : ""It is not obligatory for the judge at that stage of the trial to consider in any detail and weigh in a sensitive balance whether the facts, if proved, would be incompatible with the innocence of the accused or not.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Bihar Vs. Ramesh Singh, AIR 1977 SC 2018']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['State of Bihar Vs. Ramesh Singh, AIR 1977 SC 2018']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 19.In the case of State of Bihar Vs. Ramesh Singh, AIR 1977 SC 2018 Hon'ble Supreme Court observed as under : ""It is not obligatory for the judge at that stage of the trial to consider in any detail and weigh in a sensitive balance whether the facts, if proved, would be incompatible with the innocence of the accused or not. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Bihar Vs. Ramesh Singh, AIR 1977 SC 2018']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
There is a real though subtle difference between 'suitability' and 'arbitrability' in the context of subject matter of disputes.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: There is a real though subtle difference between 'suitability' and 'arbitrability' in the context of subject matter of disputes. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The law laid down in the above noted cases has been further approved by the Hon'ble Supreme Court in the following cases :- (1) Karnel Singh v. State of M.P. (9) (2) State of Punjab v. Gurmit Singh (10) 33.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Karnel Singh v. State of M.P. (9) (2) State of Punjab v. Gurmit Singh (10)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Karnel Singh v. State of M.P. (9) (2) State of Punjab v. Gurmit Singh (10)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The law laid down in the above noted cases has been further approved by the Hon'ble Supreme Court in the following cases :- (1) Karnel Singh v. State of M.P. (9) (2) State of Punjab v. Gurmit Singh (10) 33. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Karnel Singh v. State of M.P. (9) (2) State of Punjab v. Gurmit Singh (10)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: A.K. Roy & Anr. Vs. Respondent: State Of Punjab & Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['A.K. Roy']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Punjab']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['A.K. Roy']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Punjab']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: A.K. Roy & Anr. Vs. Respondent: State Of Punjab & Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['A.K. Roy']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Punjab']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam Present: The Honourable Mr.Justice Pius C.Kuriakose & The Hon'Ble Mr. Justice Babu Mathew P.Joseph Thursday, The 20Th Day Of December 2012/29Th Agrahayana 1934 WP(Crl.).No. 520 of 2012 (S) ---------------------------- Petitioner(S): ------------- Abidha Beevi, Tc 39/1883, Karimadam Colony, Manacaud Thiruvananthapuram. By Advs.Sri.Blaze K.Jose Smt.N.Deepa Smt.Dayana David Respondent(S): -------------- 1. State Of Kerala Represented By Its Secretary To Home Department Secretriat, Thiruvananthapuram-695001 2. The District Magistrate/District Collector (N/C) Thiruvananthapuram-695001 3. The Deputy Commissioner Of Police (L & O) Thiruvananthapuram-695001 By Addl. State Prosecutor Sri.K.I. Abdul Rasheed This Writ Petition (Criminal) Having Been Finally Heard On 17-12-2012, The Court On 20-12-2012 Delivered The Following: WP(Crl.).No. 520 of 2012 (S) Appendix Petitioner(S) Exhibits: P1: True Copy Of The Order Of Declaration Issued By The 2Nd Respondent No.S.13-55987/2012 Dated 23.06.2012 Served On 29.06.2012 P2: True Copy Of The Report Of The 3Rd Respondent No.94/Camp/Dcp(L&O)Tvpm/2012 Dated 30.05.2012 P3: True Copy Of The Judgment In C.C.No.351/2008 Of The Jfcm V, Tvpm In Crime No.198/2008 Of Fort Police Station Dated 4/6/2012 P4: True Copy Of The Order In C.Cno.395/2007 Of Jfcm-Ii, Tvpm In Crime No. 418/2009 Of Fort Police Station Dated 7-8-2012 P5: True Copy Of The Order NO.G.O.(Rt) No.2633/2012/Home Dated 05/9/2012. Respondents' Exhibits : Nil //True Copy// P.A. To Judge. dlk C.R. Pius C. Kuriakose & Babu Mathew P. Joseph, Jj. ------------------------------------------------------------ W.P.(Crl.) No. 520 of 2012 ------------------------------------------------------------- Dated this the 20th day of December, 2012 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Pius C.Kuriakose', 'Babu Mathew P.Joseph', 'Pius C. Kuriakose', 'Babu Mathew P. Joseph']"", ""LAWYER"": ""['Blaze K.Jose', 'N.Deepa', 'Dayana David', 'K.I. Abdul Rasheed']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Abidha Beevi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala', 'District Magistrate/District Collector (N/C) Thiruvananthapuram-695001', 'Deputy Commissioner Of Police (L & O) Thiruvananthapuram-695001']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Pius C.Kuriakose', 'Babu Mathew P.Joseph', 'Pius C. Kuriakose', 'Babu Mathew P. Joseph']"", 'LAWYER': ""['Blaze K.Jose', 'N.Deepa', 'Dayana David', 'K.I. Abdul Rasheed']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Abidha Beevi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Kerala', 'District Magistrate/District Collector (N/C) Thiruvananthapuram-695001', 'Deputy Commissioner Of Police (L & O) Thiruvananthapuram-695001']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam Present: The Honourable Mr.Justice Pius C.Kuriakose & The Hon'Ble Mr. Justice Babu Mathew P.Joseph Thursday, The 20Th Day Of December 2012/29Th Agrahayana 1934 WP(Crl.).No. 520 of 2012 (S) ---------------------------- Petitioner(S): ------------- Abidha Beevi, Tc 39/1883, Karimadam Colony, Manacaud Thiruvananthapuram. By Advs.Sri.Blaze K.Jose Smt.N.Deepa Smt.Dayana David Respondent(S): -------------- 1. State Of Kerala Represented By Its Secretary To Home Department Secretriat, Thiruvananthapuram-695001 2. The District Magistrate/District Collector (N/C) Thiruvananthapuram-695001 3. The Deputy Commissioner Of Police (L & O) Thiruvananthapuram-695001 By Addl. State Prosecutor Sri.K.I. Abdul Rasheed This Writ Petition (Criminal) Having Been Finally Heard On 17-12-2012, The Court On 20-12-2012 Delivered The Following: WP(Crl.).No. 520 of 2012 (S) Appendix Petitioner(S) Exhibits: P1: True Copy Of The Order Of Declaration Issued By The 2Nd Respondent No.S.13-55987/2012 Dated 23.06.2012 Served On 29.06.2012 P2: True Copy Of The Report Of The 3Rd Respondent No.94/Camp/Dcp(L&O)Tvpm/2012 Dated 30.05.2012 P3: True Copy Of The Judgment In C.C.No.351/2008 Of The Jfcm V, Tvpm In Crime No.198/2008 Of Fort Police Station Dated 4/6/2012 P4: True Copy Of The Order In C.Cno.395/2007 Of Jfcm-Ii, Tvpm In Crime No. 418/2009 Of Fort Police Station Dated 7-8-2012 P5: True Copy Of The Order NO.G.O.(Rt) No.2633/2012/Home Dated 05/9/2012. Respondents' Exhibits : Nil //True Copy// P.A. To Judge. dlk C.R. Pius C. Kuriakose & Babu Mathew P. Joseph, Jj. ------------------------------------------------------------ W.P.(Crl.) No. 520 of 2012 ------------------------------------------------------------- Dated this the 20th day of December, 2012 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Pius C.Kuriakose', 'Babu Mathew P.Joseph', 'Pius C. Kuriakose', 'Babu Mathew P. Joseph']"", ""LAWYER"": ""['Blaze K.Jose', 'N.Deepa', 'Dayana David', 'K.I. Abdul Rasheed']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Abidha Beevi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala', 'District Magistrate/District Collector (N/C) Thiruvananthapuram-695001', 'Deputy Commissioner Of Police (L & O) Thiruvananthapuram-695001']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Unquestionably such transfer may cause some inconvenience or hardship to the transferred Judge, but by no stretch of imagination it can be said to cast either a slur or that the order was passed with a view to punishing him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Unquestionably such transfer may cause some inconvenience or hardship to the transferred Judge, but by no stretch of imagination it can be said to cast either a slur or that the order was passed with a view to punishing him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Respondent No.2, (in the claim petitions) the Insurance Company objected to the maintainability of the claim petition and locus standi of the claimants to file it.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Respondent No.2, (in the claim petitions) the Insurance Company objected to the maintainability of the claim petition and locus standi of the claimants to file it. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In this reference the facts are that on the 5th January, 1965, Title Suit No. 83 of 1959 in the Subordinate Judge's Court at Alipore for the recovery of money due on a mortgage bond was decreed.","{""CASE_NUMBER"": ""['Title Suit No. 83 of 1959']"", ""COURT"": ""[\""Subordinate Judge's Court at Alipore\""]"", ""DATE"": ""['5th January, 1965']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Title Suit No. 83 of 1959']"", 'COURT': '[""Subordinate Judge\'s Court at Alipore""]', 'DATE': ""['5th January, 1965']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this reference the facts are that on the 5th January, 1965, Title Suit No. 83 of 1959 in the Subordinate Judge's Court at Alipore for the recovery of money due on a mortgage bond was decreed. [/INST]
 {""CASE_NUMBER"": ""['Title Suit No. 83 of 1959']"", ""COURT"": ""[\""Subordinate Judge's Court at Alipore\""]"", ""DATE"": ""['5th January, 1965']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On 22.01.2014 only one witness C.W.No.1 Priyanka Kumari, Project Manager-cum-District Woman Rights Protection Officer was examined and on request of O.P. No. 2 evidence was closed and the matter was posted for ex-parte hearing.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22.01.2014']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Priyanka Kumari']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['22.01.2014']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Priyanka Kumari']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On 22.01.2014 only one witness C.W.No.1 Priyanka Kumari, Project Manager-cum-District Woman Rights Protection Officer was examined and on request of O.P. No. 2 evidence was closed and the matter was posted for ex-parte hearing. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22.01.2014']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Priyanka Kumari']""} </s>"
"In The High Court Of Judicature At Patna Miscellaneous Jurisdiction Case No. 4423 of 2014 In Civil Writ Jurisdiction Case No. 11263 of 2007 =========================================================== Parmanand Rai, aged about 67 years, Son of Late Deyali Rai, resident of Biscomaun Colony, Police Station-Alamganj (Patnacity), District-Patna. .... .... Petitioner Versus 1. The State of Bihar through Registrar Cooperative Societies, Bihar, Patna namely Sri Hukum Singh Meena. 2. The Bihar State Cooperative Marketing Union Ltd, West Lawn, Patna through its Managing Director namely Sri Satrughan Kumar Choudhary. 3. The Managing Director, Bihar State Cooperative Marketing Union Ltd West lawn, Patna namely Sri Satrughan Kumar Choudhary. .... .... Opposite Parties with =========================================================== Civil Review No. 391 of 2016 In Civil Writ Jurisdiction Case No. 11263 of 2007 =========================================================== 1. The Bihar State Co- Operative Marketing Union Ltd., West Gandhi Maidan, Patna through its Managing Director 2. The Managing Director, Bihar State Co-operative Marketing Union Ltd, West Gandhi Maidan, Patna 3. The In-charge, Finance Controller, Bihar State Co-operative Marketing Union Ltd., Patna 4. The Special Officer (Administration) Bihar State Co-operative Marketing Union Ltd, West Gandhi Maidan, Patna .... .... Petitioners Versus 1. The State of Bihar through Registrar, Co-operative Societies, Bihar, Patna 2. The Regional Provident Fund Commissioner, Assistant Provident Fund Commissioner (Pension), R Block, Road No.- 6 Patna 3. Parmanand Rai S/o Late Depali Rai R/O Biscomaun Colony, P.S. Alamganj, Patna City, Town & District- Patna .... .... Opposite Parties =========================================================== Appearance : (In Mjc No.4423 of 2014) For the Petitioner/s : Mr. Anil Singh, Adv. For the Respondent/s : Mr. Anjani Kumar, Adv. (In C. Rev. No.391 of 2016) For the Petitioner/s : Mr. Y.V. Giri, Sr. Adv. Mr. Ishwari Singh, Adv. Patna High Court Mjc No.4423 of 2014 Mr. Ashish Giri, Adv. For the Writ Petitioner : Mr. Anil Singh, Adv. =========================================================== Coram: Honourable Mr. Justice Hemant Kumar Srivastava C.A.V. Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Hemant Kumar Srivastava']"", ""LAWYER"": ""['Anil Singh', 'Anjani Kumar', 'Y.V. Giri', 'Ishwari Singh', 'Ashish Giri']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Parmanand Rai', 'Bihar State Co- Operative Marketing Union Ltd., West Gandhi Maidan, Patna', 'Managing Director, Bihar State Co-operative Marketing Union Ltd, West Gandhi Maidan, Patna', 'In-charge, Finance Controller, Bihar State Co-operative Marketing Union Ltd., Patna', 'Special Officer (Administration) Bihar State Co-operative Marketing Union Ltd, West Gandhi Maidan,']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Bihar', 'Bihar State Cooperative Marketing Union Ltd', 'Managing Director, Bihar State Cooperative Marketing Union Ltd West lawn, Patna namely Sri Satrughan Kumar Choudhary', 'Regional Provident Fund Commissioner, Assistant Provident Fund Commissioner (Pension), R Block, Road No.- 6 Patna', 'Parmanand Rai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Patna']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Hemant Kumar Srivastava']"", 'LAWYER': ""['Anil Singh', 'Anjani Kumar', 'Y.V. Giri', 'Ishwari Singh', 'Ashish Giri']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Parmanand Rai', 'Bihar State Co- Operative Marketing Union Ltd., West Gandhi Maidan, Patna', 'Managing Director, Bihar State Co-operative Marketing Union Ltd, West Gandhi Maidan, Patna', 'In-charge, Finance Controller, Bihar State Co-operative Marketing Union Ltd., Patna', 'Special Officer (Administration) Bihar State Co-operative Marketing Union Ltd, West Gandhi Maidan,']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Bihar', 'Bihar State Cooperative Marketing Union Ltd', 'Managing Director, Bihar State Cooperative Marketing Union Ltd West lawn, Patna namely Sri Satrughan Kumar Choudhary', 'Regional Provident Fund Commissioner, Assistant Provident Fund Commissioner (Pension), R Block, Road No.- 6 Patna', 'Parmanand Rai']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Patna Miscellaneous Jurisdiction Case No. 4423 of 2014 In Civil Writ Jurisdiction Case No. 11263 of 2007 =========================================================== Parmanand Rai, aged about 67 years, Son of Late Deyali Rai, resident of Biscomaun Colony, Police Station-Alamganj (Patnacity), District-Patna. .... .... Petitioner Versus 1. The State of Bihar through Registrar Cooperative Societies, Bihar, Patna namely Sri Hukum Singh Meena. 2. The Bihar State Cooperative Marketing Union Ltd, West Lawn, Patna through its Managing Director namely Sri Satrughan Kumar Choudhary. 3. The Managing Director, Bihar State Cooperative Marketing Union Ltd West lawn, Patna namely Sri Satrughan Kumar Choudhary. .... .... Opposite Parties with =========================================================== Civil Review No. 391 of 2016 In Civil Writ Jurisdiction Case No. 11263 of 2007 =========================================================== 1. The Bihar State Co- Operative Marketing Union Ltd., West Gandhi Maidan, Patna through its Managing Director 2. The Managing Director, Bihar State Co-operative Marketing Union Ltd, West Gandhi Maidan, Patna 3. The In-charge, Finance Controller, Bihar State Co-operative Marketing Union Ltd., Patna 4. The Special Officer (Administration) Bihar State Co-operative Marketing Union Ltd, West Gandhi Maidan, Patna .... .... Petitioners Versus 1. The State of Bihar through Registrar, Co-operative Societies, Bihar, Patna 2. The Regional Provident Fund Commissioner, Assistant Provident Fund Commissioner (Pension), R Block, Road No.- 6 Patna 3. Parmanand Rai S/o Late Depali Rai R/O Biscomaun Colony, P.S. Alamganj, Patna City, Town & District- Patna .... .... Opposite Parties =========================================================== Appearance : (In Mjc No.4423 of 2014) For the Petitioner/s : Mr. Anil Singh, Adv. For the Respondent/s : Mr. Anjani Kumar, Adv. (In C. Rev. No.391 of 2016) For the Petitioner/s : Mr. Y.V. Giri, Sr. Adv. Mr. Ishwari Singh, Adv. Patna High Court Mjc No.4423 of 2014 Mr. Ashish Giri, Adv. For the Writ Petitioner : Mr. Anil Singh, Adv. =========================================================== Coram: Honourable Mr. Justice Hemant Kumar Srivastava C.A.V. Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Hemant Kumar Srivastava']"", ""LAWYER"": ""['Anil Singh', 'Anjani Kumar', 'Y.V. Giri', 'Ishwari Singh', 'Ashish Giri']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Parmanand Rai', 'Bihar State Co- Operative Marketing Union Ltd., West Gandhi Maidan, Patna', 'Managing Director, Bihar State Co-operative Marketing Union Ltd, West Gandhi Maidan, Patna', 'In-charge, Finance Controller, Bihar State Co-operative Marketing Union Ltd., Patna', 'Special Officer (Administration) Bihar State Co-operative Marketing Union Ltd, West Gandhi Maidan,']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Bihar', 'Bihar State Cooperative Marketing Union Ltd', 'Managing Director, Bihar State Cooperative Marketing Union Ltd West lawn, Patna namely Sri Satrughan Kumar Choudhary', 'Regional Provident Fund Commissioner, Assistant Provident Fund Commissioner (Pension), R Block, Road No.- 6 Patna', 'Parmanand Rai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Amit Kumar (PW-2) deposed about the involvement of the Appellant in the murder of D-1.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Amit Kumar']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Amit Kumar']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Amit Kumar (PW-2) deposed about the involvement of the Appellant in the murder of D-1. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Amit Kumar']""} </s>"
"Whether as regards the question posed for consideration viz., regarding the maintainability of the former appeal by the insurer challenging the quantum of compensation even after contesting the claim petition without obtaining permission under Section 170 of the M.V.Act, can be answered in the light of the decisions either on point No.(i) or point No.(ii) in Shila Datta's case, is now to be considered.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shila Datta']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 170']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['M.V.Act,']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Shila Datta']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 170']"", 'RESPONDENT': '[]', 'STATUTE': ""['M.V.Act,']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Whether as regards the question posed for consideration viz., regarding the maintainability of the former appeal by the insurer challenging the quantum of compensation even after contesting the claim petition without obtaining permission under Section 170 of the M.V.Act, can be answered in the light of the decisions either on point No.(i) or point No.(ii) in Shila Datta's case, is now to be considered. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shila Datta']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 170']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['M.V.Act,']"", ""WITNESS"": ""[]""} </s>"
"It was found that the appellant Baijnath is brother of the witness Laxmi Prasad but, nothing could be brought in the evidence of Kotwar Sukrata Bai as to why she turned hostile.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Baijnath', 'Kotwar Sukrata Bai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Laxmi Prasad']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Baijnath', 'Kotwar Sukrata Bai']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Laxmi Prasad']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was found that the appellant Baijnath is brother of the witness Laxmi Prasad but, nothing could be brought in the evidence of Kotwar Sukrata Bai as to why she turned hostile. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Baijnath', 'Kotwar Sukrata Bai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Laxmi Prasad']""} </s>"
"* In The High Court Of Delhi At New Delhi Judgment reserved on: 22.05.2012 % Judgment delivered on: 01.06.2012 + W.P.(C) 11271/2009 Registrar Of Companies & Ors ..... Petitioners Through: Mr. Pankaj Batra, Advocate. versus Dharmendra Kumar Garg & Anr ..... Respondents Through: Mr. Rajeshwar Kumar Gupta and Ms. Shikha Soni, Advocates. Coram: Hon'Ble Mr. Justice Vipin Sanghi Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Delhi At New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Vipin Sanghi']"", ""LAWYER"": ""['Pankaj Batra', 'Rajeshwar Kumar Gupta', 'Shikha Soni']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Registrar Of Companies']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Dharmendra Kumar Garg']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Delhi At New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Vipin Sanghi']"", 'LAWYER': ""['Pankaj Batra', 'Rajeshwar Kumar Gupta', 'Shikha Soni']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Registrar Of Companies']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Dharmendra Kumar Garg']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: * In The High Court Of Delhi At New Delhi Judgment reserved on: 22.05.2012 % Judgment delivered on: 01.06.2012 + W.P.(C) 11271/2009 Registrar Of Companies & Ors ..... Petitioners Through: Mr. Pankaj Batra, Advocate. versus Dharmendra Kumar Garg & Anr ..... Respondents Through: Mr. Rajeshwar Kumar Gupta and Ms. Shikha Soni, Advocates. Coram: Hon'Ble Mr. Justice Vipin Sanghi Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Delhi At New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Vipin Sanghi']"", ""LAWYER"": ""['Pankaj Batra', 'Rajeshwar Kumar Gupta', 'Shikha Soni']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Registrar Of Companies']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Dharmendra Kumar Garg']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Therefore, immediately MoEF returned the application to the project proponent asking it to submit applications for site clearance as well as for project clearance.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['MoEF']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['MoEF']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore, immediately MoEF returned the application to the project proponent asking it to submit applications for site clearance as well as for project clearance. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['MoEF']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Dr. PS MALIK Addl. Sessions Judge N/E Karkardooma Courts, Delhi","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Karkardooma Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['PS MALIK']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Karkardooma Courts, Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['PS MALIK']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Dr. PS MALIK Addl. Sessions Judge N/E Karkardooma Courts, Delhi [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Karkardooma Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['PS MALIK']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam Present: The Honourable Mr.Justice A.M.Shaffique Friday, The 2Nd Dayof December 2016/11Th Agrahayana, 1938 WP(C).No. 11712 of 2016 (L) ---------------------------- Petitioner(S): ---------------------- K. Prasannakumar, Kandenkavil House, Marathakkara. P.O., Thrissur, Represented By Power Of Attorney Holder A.A. Johar, S/O. Anto, Ainikal House, Marathakkara. P.O., Ollur, Thrissur. By Adv. Sri.I.Dinesh Menon. Respondent(S): ------------------------- 1. The Transport Commissioner, Thiruvananthapuram - 695 001. 2. The Regional Transport Officer/ Taxation Officer, Ernakulam - 682 035. By Govt. Pleader Sri.V.K. Shamsudheen. This Writ Petition (Civil) Having Been Finally Heard On 11-11-2016, Along With Wp(C). No. 21207 Of 2016 And Wp(C).No.34656 Of 2016, The Court On 02/12/2016 Delivered The Following: rs. WP(C).No. 11712 of 2016 (L) Appendix Petitioner'S Exhibits:- Exhibit-P1: True Copy Of The Judgment In Wp(C).No.6922 Of 2015. Exhibit-P2: True Copy Of The Order Dated 24.03.2015. Exhibit-P3: True Copy Of The Judgment In Wp(C).No.11371 Of 2015. Exhibit-P4: True Copy Of The Order Dated 02.05.2015. Exhibit-P5: True Copy Of The Order Dated 25.06.2015 In Wp(C).No. 19132 Of 2015. Exhibit-P6: True Copy Of The Statutory Revision Filed Under Section 24 Of The Taxation Act. Exhibit-P7: True Copy Of The Decision Of The R.T.A. Dated 26.05.2015. Exhibit-P8: True Copy Of The Judgment In Wp(C).No. 22210 Of 2015 Dated 30.07.2015. Exhibit-P9: True Copy Of The Judgment In Wp(C).No.32836 Of 2010 Dated 21.10.2014. Exhibit-P10: True Copy Of The Order No.B1/18270/Tc/2015 Dated 17.02.2016 Passed By The First Respondent. Respondent'S Exhibits:- Nil. //True Copy// P.S.To Judge rs. A.M.Shaffique, J * * * * * * * * * * * * W.P.C.Nos.11712, 21207 & 34656 of 2016 ---------------------------------------- Dated this the 2nd day of December 2016 J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['A.M.Shaffique']"", ""LAWYER"": ""['I.Dinesh Menon', 'V.K. Shamsudheen']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['K. Prasannakumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Transport Commissioner, Thiruvananthapuram - 695 001', 'Regional Transport Officer/ Taxation Officer, Ernakulam - 682 035.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['A.M.Shaffique']"", 'LAWYER': ""['I.Dinesh Menon', 'V.K. Shamsudheen']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['K. Prasannakumar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Transport Commissioner, Thiruvananthapuram - 695 001', 'Regional Transport Officer/ Taxation Officer, Ernakulam - 682 035.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam Present: The Honourable Mr.Justice A.M.Shaffique Friday, The 2Nd Dayof December 2016/11Th Agrahayana, 1938 WP(C).No. 11712 of 2016 (L) ---------------------------- Petitioner(S): ---------------------- K. Prasannakumar, Kandenkavil House, Marathakkara. P.O., Thrissur, Represented By Power Of Attorney Holder A.A. Johar, S/O. Anto, Ainikal House, Marathakkara. P.O., Ollur, Thrissur. By Adv. Sri.I.Dinesh Menon. Respondent(S): ------------------------- 1. The Transport Commissioner, Thiruvananthapuram - 695 001. 2. The Regional Transport Officer/ Taxation Officer, Ernakulam - 682 035. By Govt. Pleader Sri.V.K. Shamsudheen. This Writ Petition (Civil) Having Been Finally Heard On 11-11-2016, Along With Wp(C). No. 21207 Of 2016 And Wp(C).No.34656 Of 2016, The Court On 02/12/2016 Delivered The Following: rs. WP(C).No. 11712 of 2016 (L) Appendix Petitioner'S Exhibits:- Exhibit-P1: True Copy Of The Judgment In Wp(C).No.6922 Of 2015. Exhibit-P2: True Copy Of The Order Dated 24.03.2015. Exhibit-P3: True Copy Of The Judgment In Wp(C).No.11371 Of 2015. Exhibit-P4: True Copy Of The Order Dated 02.05.2015. Exhibit-P5: True Copy Of The Order Dated 25.06.2015 In Wp(C).No. 19132 Of 2015. Exhibit-P6: True Copy Of The Statutory Revision Filed Under Section 24 Of The Taxation Act. Exhibit-P7: True Copy Of The Decision Of The R.T.A. Dated 26.05.2015. Exhibit-P8: True Copy Of The Judgment In Wp(C).No. 22210 Of 2015 Dated 30.07.2015. Exhibit-P9: True Copy Of The Judgment In Wp(C).No.32836 Of 2010 Dated 21.10.2014. Exhibit-P10: True Copy Of The Order No.B1/18270/Tc/2015 Dated 17.02.2016 Passed By The First Respondent. Respondent'S Exhibits:- Nil. //True Copy// P.S.To Judge rs. A.M.Shaffique, J * * * * * * * * * * * * W.P.C.Nos.11712, 21207 & 34656 of 2016 ---------------------------------------- Dated this the 2nd day of December 2016 J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['A.M.Shaffique']"", ""LAWYER"": ""['I.Dinesh Menon', 'V.K. Shamsudheen']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['K. Prasannakumar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Transport Commissioner, Thiruvananthapuram - 695 001', 'Regional Transport Officer/ Taxation Officer, Ernakulam - 682 035.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
CW2 Sultan Singh @Ravi has stated about solemnization of marriage between appellant and complainant and that sufficient amount was spent in marriage.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Sultan Singh @Ravi']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Sultan Singh @Ravi']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: CW2 Sultan Singh @Ravi has stated about solemnization of marriage between appellant and complainant and that sufficient amount was spent in marriage. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Sultan Singh @Ravi']""} </s>"
"This is the true, attested copy of the computerized policy."" PW-1 Babu Lal in his examination-in-chief has admitted that he was one of the traveller of the offending tempo bearing no. DL-1LB-1175.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Babu Lal']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Babu Lal']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This is the true, attested copy of the computerized policy."" PW-1 Babu Lal in his examination-in-chief has admitted that he was one of the traveller of the offending tempo bearing no. DL-1LB-1175. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Babu Lal']""} </s>"
The petitioners also contend that S. 63 (3-A) empowers the concerned States under the agreement only to fix the number of permits which are permitted to be granted or countersigned in respect of a particular route.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['S. 63 (3-A)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['S. 63 (3-A)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioners also contend that S. 63 (3-A) empowers the concerned States under the agreement only to fix the number of permits which are permitted to be granted or countersigned in respect of a particular route. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['S. 63 (3-A)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Order Sheet Sheet No... A.P. No. 346 of 2005 In The High Court At Calcutta Ordinary Original Civil Jurisdiction Original Side In the matter of: State Of West Bengal Vs. Afcons Pauling (India) Limited Before: The Hon'ble Justice Indira Banerjee. Date: 10.09.2013 Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court At Calcutta']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Indira Banerjee']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State Of West Bengal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Afcons Pauling (India) Limited']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court At Calcutta']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Indira Banerjee']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['State Of West Bengal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Afcons Pauling (India) Limited']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Order Sheet Sheet No... A.P. No. 346 of 2005 In The High Court At Calcutta Ordinary Original Civil Jurisdiction Original Side In the matter of: State Of West Bengal Vs. Afcons Pauling (India) Limited Before: The Hon'ble Justice Indira Banerjee. Date: 10.09.2013 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court At Calcutta']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Indira Banerjee']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State Of West Bengal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Afcons Pauling (India) Limited']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Against the refusal by a company to register the transfer or transmission of a right to the shares, an appeal lies to the Central Government.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Central Government']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Central Government']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Against the refusal by a company to register the transfer or transmission of a right to the shares, an appeal lies to the Central Government. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Central Government']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In A. Govindarajulu Mudaliar v CIT, (1958) 34 ITR 807, this argument advanced by the assessee was rejected by the Supreme Court.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['A. Govindarajulu Mudaliar v CIT, (1958) 34 ITR 807']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['A. Govindarajulu Mudaliar v CIT, (1958) 34 ITR 807']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In A. Govindarajulu Mudaliar v CIT, (1958) 34 ITR 807, this argument advanced by the assessee was rejected by the Supreme Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['A. Govindarajulu Mudaliar v CIT, (1958) 34 ITR 807']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We have hereinabove summarized the findings of facts recorded by the three forums.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We have hereinabove summarized the findings of facts recorded by the three forums. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It was submitted that the decision in State Govt. of NCT of Delhi v. Sunil & Anr., 2000 (1) SCC 748 is an authority on the point that there is no requirement either under Section 27 of the Evidence Act or under Section 161 of the Cr. P.C., to obtain signature of independent witnesses on the record in which statement of an accused was written.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State Govt. of NCT of Delhi v. Sunil & Anr., 2000 (1) SCC 748']"", ""PROVISION"": ""['Section 27', 'Section 161']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act', 'Cr. P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['State Govt. of NCT of Delhi v. Sunil & Anr., 2000 (1) SCC 748']"", 'PROVISION': ""['Section 27', 'Section 161']"", 'RESPONDENT': '[]', 'STATUTE': ""['Evidence Act', 'Cr. P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was submitted that the decision in State Govt. of NCT of Delhi v. Sunil & Anr., 2000 (1) SCC 748 is an authority on the point that there is no requirement either under Section 27 of the Evidence Act or under Section 161 of the Cr. P.C., to obtain signature of independent witnesses on the record in which statement of an accused was written. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State Govt. of NCT of Delhi v. Sunil & Anr., 2000 (1) SCC 748']"", ""PROVISION"": ""['Section 27', 'Section 161']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act', 'Cr. P.C.']"", ""WITNESS"": ""[]""} </s>"
"Petitioner: Income Tax Officer, I Ward, Dist, Vi, Calcutta & Ors. Vs. Respondent: Lakhmani Mewal Das Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Income Tax Officer, I Ward, Dist, Vi, Calcutta']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Lakhmani Mewal Das']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Income Tax Officer, I Ward, Dist, Vi, Calcutta']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Lakhmani Mewal Das']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Income Tax Officer, I Ward, Dist, Vi, Calcutta & Ors. Vs. Respondent: Lakhmani Mewal Das Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Income Tax Officer, I Ward, Dist, Vi, Calcutta']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Lakhmani Mewal Das']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The respondent Chhotubhai who was the origin. 1 plaintiff had filed the suit to recover Rs. 52,720/-with costs and running interest at 6 per cent from defendant No. 1 personally and from the joint Hindu family properties and other properties of defendants Nos. 3 to 5.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Chhotubhai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Chhotubhai']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The respondent Chhotubhai who was the origin. 1 plaintiff had filed the suit to recover Rs. 52,720/-with costs and running interest at 6 per cent from defendant No. 1 personally and from the joint Hindu family properties and other properties of defendants Nos. 3 to 5. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Chhotubhai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It is vehemently stated that the plaintiff had discontinued the sale of goods after 1986­87 where­after the goods were sold through M/s Khushi Ram Behari Lal (Export Division) and on 01.04.1996 said division transferred all their rights in the name of M/s Khushi Ram Behari Lal Ltd.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['01.04.1996']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Khushi Ram Behari Lal', 'Khushi Ram Behari Lal Ltd.']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['01.04.1996']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Khushi Ram Behari Lal', 'Khushi Ram Behari Lal Ltd.']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is vehemently stated that the plaintiff had discontinued the sale of goods after 1986­87 where­after the goods were sold through M/s Khushi Ram Behari Lal (Export Division) and on 01.04.1996 said division transferred all their rights in the name of M/s Khushi Ram Behari Lal Ltd. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['01.04.1996']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Khushi Ram Behari Lal', 'Khushi Ram Behari Lal Ltd.']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
In the case of Mobarik Ali Ahmad v. State of Bombay it has been held that a document could be proved by internal evidence afforded by the contents of the documents.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Mobarik Ali Ahmad v. State of Bombay']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Mobarik Ali Ahmad v. State of Bombay']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the case of Mobarik Ali Ahmad v. State of Bombay it has been held that a document could be proved by internal evidence afforded by the contents of the documents. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Mobarik Ali Ahmad v. State of Bombay']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
They cannot survive without public funds or private aid.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: They cannot survive without public funds or private aid. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The statement of the law was quoted with approval (1) (1867) L.R. 2 C.P. 651. (2) (1866) 6W.R. 228. by the Privy Council in Beni Ram v. Kundan Lall (1) and in Narayan Das Khettry v. Jatindranath (2).,"{""CASE_NUMBER"": ""['(1) (1867) L.R. 2 C.P. 651']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Beni Ram v. Kundan Lall', 'Narayan Das Khettry v. Jatindranath']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['(1) (1867) L.R. 2 C.P. 651']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Beni Ram v. Kundan Lall', 'Narayan Das Khettry v. Jatindranath']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The statement of the law was quoted with approval (1) (1867) L.R. 2 C.P. 651. (2) (1866) 6W.R. 228. by the Privy Council in Beni Ram v. Kundan Lall (1) and in Narayan Das Khettry v. Jatindranath (2). [/INST]
 {""CASE_NUMBER"": ""['(1) (1867) L.R. 2 C.P. 651']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Beni Ram v. Kundan Lall', 'Narayan Das Khettry v. Jatindranath']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Therefore, simply because the service Rules have not been amended, that would not be enough to say that the concept of graded promotion is still in existence.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore, simply because the service Rules have not been amended, that would not be enough to say that the concept of graded promotion is still in existence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In so far as Writ Petition No. 789 of 2003 is concerned, as stated above, the same is in connection with CTS Nos. 325, 430, 405, 330, 429, 331, 419, 329, 326 and 425 totally admeasuring about 4905.03 sq.mtrs. located at village Chakala, Tal. Andheri.","{""CASE_NUMBER"": ""['Writ Petition No. 789 of 2003', 'CTS Nos. 325, 430, 405, 330, 429, 331, 419, 329, 326 and 425']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Chakala', 'Andheri']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Writ Petition No. 789 of 2003', 'CTS Nos. 325, 430, 405, 330, 429, 331, 419, 329, 326 and 425']"", 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Chakala', 'Andheri']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In so far as Writ Petition No. 789 of 2003 is concerned, as stated above, the same is in connection with CTS Nos. 325, 430, 405, 330, 429, 331, 419, 329, 326 and 425 totally admeasuring about 4905.03 sq.mtrs. located at village Chakala, Tal. Andheri. [/INST]
 {""CASE_NUMBER"": ""['Writ Petition No. 789 of 2003', 'CTS Nos. 325, 430, 405, 330, 429, 331, 419, 329, 326 and 425']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Chakala', 'Andheri']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (civil) 3392 of 2002 Petitioner: Cholan Roadways Limited Respondent: G. Thirugnanasambandam Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Cholan Roadways Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['G. Thirugnanasambandam']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Cholan Roadways Limited']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['G. Thirugnanasambandam']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 3392 of 2002 Petitioner: Cholan Roadways Limited Respondent: G. Thirugnanasambandam Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Cholan Roadways Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['G. Thirugnanasambandam']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In OM PRAKASH v. AMAR SINGH AND ANR., , the Supreme Court considering the case of the tenant under the provisions of Section 14(c) of the U.P. Cantonments (Control of Rent and eviction) Act 10 of 1952 has held as follows:- ""6.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['OM PRAKASH v. AMAR SINGH']"", ""PROVISION"": ""['Section 14(c)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['U.P. Cantonments (Control of Rent and eviction) Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['OM PRAKASH v. AMAR SINGH']"", 'PROVISION': ""['Section 14(c)']"", 'RESPONDENT': '[]', 'STATUTE': ""['U.P. Cantonments (Control of Rent and eviction) Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In OM PRAKASH v. AMAR SINGH AND ANR., , the Supreme Court considering the case of the tenant under the provisions of Section 14(c) of the U.P. Cantonments (Control of Rent and eviction) Act 10 of 1952 has held as follows:- ""6. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['OM PRAKASH v. AMAR SINGH']"", ""PROVISION"": ""['Section 14(c)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['U.P. Cantonments (Control of Rent and eviction) Act']"", ""WITNESS"": ""[]""} </s>"
"This Court in Matadin v. State of M.P. 1980 Cri LJ 186, has pointed out that so far as possession is concerned, corpus without animus is ineffective, but if animus is established it does not matter whether the possession is actual or constructive.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Matadin v. State of M.P. 1980 Cri LJ 186']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Matadin v. State of M.P. 1980 Cri LJ 186']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This Court in Matadin v. State of M.P. 1980 Cri LJ 186, has pointed out that so far as possession is concerned, corpus without animus is ineffective, but if animus is established it does not matter whether the possession is actual or constructive. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Matadin v. State of M.P. 1980 Cri LJ 186']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the case of Jagatnarayansingh Swarupsingh Chithere and others Versus Swarupsingh Education Society 24 Ori.Sms.2029.11 and another, reported in 1980 Mh.L.J. 372 this Court held that the extent of jurisdiction under Section 22 of the Act is not limited to the only factum of change but it extends its legality and validity as well.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Jagatnarayansingh Swarupsingh Chithere and others Versus Swarupsingh Education Society 24 Ori.Sms.2029.11 and another']"", ""PROVISION"": ""['Section 22']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Jagatnarayansingh Swarupsingh Chithere and others Versus Swarupsingh Education Society 24 Ori.Sms.2029.11 and another']"", 'PROVISION': ""['Section 22']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the case of Jagatnarayansingh Swarupsingh Chithere and others Versus Swarupsingh Education Society 24 Ori.Sms.2029.11 and another, reported in 1980 Mh.L.J. 372 this Court held that the extent of jurisdiction under Section 22 of the Act is not limited to the only factum of change but it extends its legality and validity as well."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Jagatnarayansingh Swarupsingh Chithere and others Versus Swarupsingh Education Society 24 Ori.Sms.2029.11 and another']"", ""PROVISION"": ""['Section 22']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"arbp778-12 vai In The High Court Of Judicature At Bombay Ordinary Original Civil Jurisdiction Arbitration Petition No.778 Of 2012 National Insurance Company Limited, a Company duly incorporated under the provisions of Companies Act, 1956, and a Government of India Undertaking having its Registered Office at 3, Middletown Street, Kolkatta - 700 001 and inter-lia its Unit No.260201 (Dab-Ii) at 1st Floor, Sterling Cinema Building, 65, Marzbhan Street, Fort, Mumbai - 400 001. ...Petitioners ..Versus.. Opera Clothing, a Partnership Firm constituted under the provisions of Indian Partnership Act, 1932, having its Office at A/2, Shah & Nahar Industrial Estate, Lower Parel (West), Mumbai - 400 013. ...Respondents Mr.A.M. Vernekar with Mr.Samarth Pai i/b Narichania & Narichania for the Petitioners. Mr.Chetan Kapadia with Ms.Rachita Romani i/b India law for the Respondents. Coram : R.D. Dhanuka, J. Reserved On : 6Th February, 2015 Pronounced On : 13Th March, 2015 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['R.D. Dhanuka']"", ""LAWYER"": ""['A.M. Vernekar', 'Samarth Pai', 'Chetan Kapadia', 'Rachita Romani']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['National Insurance Company Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Opera Clothing']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['R.D. Dhanuka']"", 'LAWYER': ""['A.M. Vernekar', 'Samarth Pai', 'Chetan Kapadia', 'Rachita Romani']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['National Insurance Company Limited']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Opera Clothing']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: arbp778-12 vai In The High Court Of Judicature At Bombay Ordinary Original Civil Jurisdiction Arbitration Petition No.778 Of 2012 National Insurance Company Limited, a Company duly incorporated under the provisions of Companies Act, 1956, and a Government of India Undertaking having its Registered Office at 3, Middletown Street, Kolkatta - 700 001 and inter-lia its Unit No.260201 (Dab-Ii) at 1st Floor, Sterling Cinema Building, 65, Marzbhan Street, Fort, Mumbai - 400 001. ...Petitioners ..Versus.. Opera Clothing, a Partnership Firm constituted under the provisions of Indian Partnership Act, 1932, having its Office at A/2, Shah & Nahar Industrial Estate, Lower Parel (West), Mumbai - 400 013. ...Respondents Mr.A.M. Vernekar with Mr.Samarth Pai i/b Narichania & Narichania for the Petitioners. Mr.Chetan Kapadia with Ms.Rachita Romani i/b India law for the Respondents. Coram : R.D. Dhanuka, J. Reserved On : 6Th February, 2015 Pronounced On : 13Th March, 2015 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['R.D. Dhanuka']"", ""LAWYER"": ""['A.M. Vernekar', 'Samarth Pai', 'Chetan Kapadia', 'Rachita Romani']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['National Insurance Company Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Opera Clothing']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
That the interpretation put to that effect on this provision by Mr. Justice Urs was correct and called for no interference.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Urs']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Urs']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: That the interpretation put to that effect on this provision by Mr. Justice Urs was correct and called for no interference. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Urs']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"ULP Complaint No. 185 of 1988 was filed by the respondent No. 2, in Letters Patent Appeal No. 212 of 2002.","{""CASE_NUMBER"": ""['ULP Complaint No. 185 of 1988']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['ULP Complaint No. 185 of 1988']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: ULP Complaint No. 185 of 1988 was filed by the respondent No. 2, in Letters Patent Appeal No. 212 of 2002. [/INST]
 {""CASE_NUMBER"": ""['ULP Complaint No. 185 of 1988']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It appears that on the date when the Union of India made the application to the collector for use of powers under the Code of Civil Procedure, appeals were pending against the different assessments.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Union of India']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Civil Procedure']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Union of India']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Code of Civil Procedure']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It appears that on the date when the Union of India made the application to the collector for use of powers under the Code of Civil Procedure, appeals were pending against the different assessments. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Union of India']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Civil Procedure']"", ""WITNESS"": ""[]""} </s>"
Civil Writ Petition No. 870/2011 Dr Prateek Dargar Vs State of Rajasthan & ors,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Civil Writ Petition No. 870/2011 Dr Prateek Dargar Vs State of Rajasthan & ors']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Civil Writ Petition No. 870/2011 Dr Prateek Dargar Vs State of Rajasthan & ors']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Civil Writ Petition No. 870/2011 Dr Prateek Dargar Vs State of Rajasthan & ors [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Civil Writ Petition No. 870/2011 Dr Prateek Dargar Vs State of Rajasthan & ors']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On a reading of the said provision, there can be no trace of doubt that the owner of the vehicle is statutorily obliged to obtain an insurance for the vehicle to cover the third party risk, apart from the exceptions which have been carved out in the said provision.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On a reading of the said provision, there can be no trace of doubt that the owner of the vehicle is statutorily obliged to obtain an insurance for the vehicle to cover the third party risk, apart from the exceptions which have been carved out in the said provision. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"You are hereby asked not to carry out any construction work of the said building hereafter since the agreement has been terminated"".","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: You are hereby asked not to carry out any construction work of the said building hereafter since the agreement has been terminated"". [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"We now consider the 'seat matrix prepared for 'non-State-wide seats' and the 'State-wide seats', from the 'seat matrix' compilation furnished by the Health University (2005-2006).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We now consider the 'seat matrix prepared for 'non-State-wide seats' and the 'State-wide seats', from the 'seat matrix' compilation furnished by the Health University (2005-2006). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We expressed no opinion whatsoever regarding those aspects.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We expressed no opinion whatsoever regarding those aspects. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On this aspect, I ignored him and I crossed him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On this aspect, I ignored him and I crossed him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the above view of the matter, this Court could well entertain the present petition under Article 227 of the Constitution as a revision petition under the proviso to Section 25 B (8) of the DRCA.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['DRCA']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 227', 'Section 25 B (8)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['DRCA']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 227', 'Section 25 B (8)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the above view of the matter, this Court could well entertain the present petition under Article 227 of the Constitution as a revision petition under the proviso to Section 25 B (8) of the DRCA. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['DRCA']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 227', 'Section 25 B (8)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
He was ultimately released on 06.06.2012 and the case is now pending trial vide S.C.No.606 of 2013.,"{""CASE_NUMBER"": ""['S.C.No.606 of 2013']"", ""COURT"": ""[]"", ""DATE"": ""['06.06.2012']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['S.C.No.606 of 2013']"", 'COURT': '[]', 'DATE': ""['06.06.2012']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He was ultimately released on 06.06.2012 and the case is now pending trial vide S.C.No.606 of 2013. [/INST]
 {""CASE_NUMBER"": ""['S.C.No.606 of 2013']"", ""COURT"": ""[]"", ""DATE"": ""['06.06.2012']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Hon'Ble Sri Justice Sanjay Kumar W.P. No.7764 Of 2006 Dated 19-02-2013 K.B.Jagan Mohan, son of K.Sunder Rao,A.P.State Agro Industries Development Corporation Ltd.,Eluru, WGDt and others....Petitioners The State of A.P. rep.by its Secretary, Agriculture and Co-operation Dept., Secretariat,Hydbad and another..Respondents Counsel for Petitioner:Sri K.R.Prabhakar and Sri T.P.Acharya Counsel for Respondents : Sri MaHERCHAND Nori; G.P.for Co-operation and G.P.for Agriculture. <Gist: >Head Note: ?Cases Referred: 1)2006 (2) Ald 210 2)2007 (6) Supreme 97 = Air 2007 Sc 3100 1 2006 (2) Ald 210 2 2007 (6) Supreme 97 = Air 2007 Sc 3100 wp.7764,7765,19505,and 20387 of 2006 Common Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sanjay Kumar']"", ""LAWYER"": ""['K.R.Prabhakar', 'T.P.Acharya', 'MaHERCHAND Nori']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['K.B.Jagan Mohan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of A.P.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Sanjay Kumar']"", 'LAWYER': ""['K.R.Prabhakar', 'T.P.Acharya', 'MaHERCHAND Nori']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['K.B.Jagan Mohan']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of A.P.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Hon'Ble Sri Justice Sanjay Kumar W.P. No.7764 Of 2006 Dated 19-02-2013 K.B.Jagan Mohan, son of K.Sunder Rao,A.P.State Agro Industries Development Corporation Ltd.,Eluru, WGDt and others....Petitioners The State of A.P. rep.by its Secretary, Agriculture and Co-operation Dept., Secretariat,Hydbad and another..Respondents Counsel for Petitioner:Sri K.R.Prabhakar and Sri T.P.Acharya Counsel for Respondents : Sri MaHERCHAND Nori; G.P.for Co-operation and G.P.for Agriculture. <Gist: >Head Note: ?Cases Referred: 1)2006 (2) Ald 210 2)2007 (6) Supreme 97 = Air 2007 Sc 3100 1 2006 (2) Ald 210 2 2007 (6) Supreme 97 = Air 2007 Sc 3100 wp.7764,7765,19505,and 20387 of 2006 Common Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sanjay Kumar']"", ""LAWYER"": ""['K.R.Prabhakar', 'T.P.Acharya', 'MaHERCHAND Nori']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['K.B.Jagan Mohan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of A.P.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
One of the oldest among these is the arbitration.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: One of the oldest among these is the arbitration. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is only when the order is passed by a Special Officer in discharging of his statutory public duty, a Writ can be issued under Article 226 of the Constitution of India.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 226']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution of India']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 226']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution of India']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is only when the order is passed by a Special Officer in discharging of his statutory public duty, a Writ can be issued under Article 226 of the Constitution of India. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 226']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution of India']"", ""WITNESS"": ""[]""} </s>"
"Barring the above type of typical cases of the urgency, the Supreme Court was of the opinion that in other cases, the particulars of what is obviously to be done in public interest need not be concealed when its validity is questioned in a Court of justice.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Barring the above type of typical cases of the urgency, the Supreme Court was of the opinion that in other cases, the particulars of what is obviously to be done in public interest need not be concealed when its validity is questioned in a Court of justice. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Delhi High Court, while dealing with the matter, examined the competent officer of the United India Insurance Company, so also the Deputy Manager of Insurance Regulatory & Development Authority (`IRDA') on oath.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Delhi High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['United India Insurance Company', \""Insurance Regulatory & Development Authority (`IRDA')\""]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Delhi High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[\'United India Insurance Company\', ""Insurance Regulatory & Development Authority (`IRDA\')""]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Delhi High Court, while dealing with the matter, examined the competent officer of the United India Insurance Company, so also the Deputy Manager of Insurance Regulatory & Development Authority (`IRDA') on oath. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Delhi High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['United India Insurance Company', \""Insurance Regulatory & Development Authority (`IRDA')\""]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the cross-examination of this witness by the learned advocate for the accused, this witness has denied that he had not written the complaint of the complainant as dictated by him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the cross-examination of this witness by the learned advocate for the accused, this witness has denied that he had not written the complaint of the complainant as dictated by him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
(2)The Government after conducting a survey of the lands referred to in sub-section (1) shall make a regular assessment of the basic tax payable in respect of such lands.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['sub-section (1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['sub-section (1)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (2)The Government after conducting a survey of the lands referred to in sub-section (1) shall make a regular assessment of the basic tax payable in respect of such lands. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['sub-section (1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The second decision is in the case of CIT v. Miling Trading Co. Pvt. Ltd. (1995) 211-ITR-690 (Guj), wherein it was held that while granting special deduction Under Section 80M of the Act, the profits and gains of the business cannot be computed without reference to the provisions contained in sections 32 and 33.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['CIT v. Miling Trading Co. Pvt. Ltd. (1995) 211-ITR-690 (Guj)']"", ""PROVISION"": ""['Section 80M', 'sections 32 and 33']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['CIT v. Miling Trading Co. Pvt. Ltd. (1995) 211-ITR-690 (Guj)']"", 'PROVISION': ""['Section 80M', 'sections 32 and 33']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The second decision is in the case of CIT v. Miling Trading Co. Pvt. Ltd. (1995) 211-ITR-690 (Guj), wherein it was held that while granting special deduction Under Section 80M of the Act, the profits and gains of the business cannot be computed without reference to the provisions contained in sections 32 and 33. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['CIT v. Miling Trading Co. Pvt. Ltd. (1995) 211-ITR-690 (Guj)']"", ""PROVISION"": ""['Section 80M', 'sections 32 and 33']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Bail bonds of the appellant Ritesh s/o Santram Bahir are cancelled.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Santram Bahir']"", ""PETITIONER"": ""['Ritesh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Santram Bahir']"", 'PETITIONER': ""['Ritesh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Bail bonds of the appellant Ritesh s/o Santram Bahir are cancelled. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Santram Bahir']"", ""PETITIONER"": ""['Ritesh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In K.Bhaskaran v. Sankaran Vaidhyan Balan AIR 1999 SC 3762, it was held by the Apex court that: 23.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['K.Bhaskaran v. Sankaran Vaidhyan Balan AIR 1999 SC 3762']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['K.Bhaskaran v. Sankaran Vaidhyan Balan AIR 1999 SC 3762']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In K.Bhaskaran v. Sankaran Vaidhyan Balan AIR 1999 SC 3762, it was held by the Apex court that: 23. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['K.Bhaskaran v. Sankaran Vaidhyan Balan AIR 1999 SC 3762']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He denied that Pushkar (appellant No.4) was a parking attendant in Hotel Le Meridien for the last about 16 years.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Hotel Le Meridien']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Pushkar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Hotel Le Meridien']"", 'OTHER_PERSON': '[]', 'PETITIONER': ""['Pushkar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He denied that Pushkar (appellant No.4) was a parking attendant in Hotel Le Meridien for the last about 16 years. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Hotel Le Meridien']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Pushkar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The applications of Purshottam Bhai Patel and Babulal for the route Burhanpur to Ujjain were dismissed by the Regional Transport Authority on 29th December, 1959.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['29th December, 1959']"", ""GPE"": ""['Burhanpur', 'Ujjain']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Purshottam Bhai Patel', 'Babulal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['29th December, 1959']"", 'GPE': ""['Burhanpur', 'Ujjain']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Purshottam Bhai Patel', 'Babulal']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The applications of Purshottam Bhai Patel and Babulal for the route Burhanpur to Ujjain were dismissed by the Regional Transport Authority on 29th December, 1959. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['29th December, 1959']"", ""GPE"": ""['Burhanpur', 'Ujjain']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Purshottam Bhai Patel', 'Babulal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"D.B.Criminal Appeal No.226/2003 D.B. Criminal Appeals under Section 374 of the Code of Criminal Procedure against the judgment & order dated 21.1.2003 passed by the Additional Sessions Judge (Fast Track), No.1 Kota in Sessions Case No. 89/2001.","{""CASE_NUMBER"": ""['D.B.Criminal Appeal No.226/2003 D.B. Criminal Appeals', 'Sessions Case No. 89/2001']"", ""COURT"": ""['Additional Sessions Judge (Fast Track), No.1 Kota']"", ""DATE"": ""['21.1.2003']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 374']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['D.B.Criminal Appeal No.226/2003 D.B. Criminal Appeals', 'Sessions Case No. 89/2001']"", 'COURT': ""['Additional Sessions Judge (Fast Track), No.1 Kota']"", 'DATE': ""['21.1.2003']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 374']"", 'RESPONDENT': '[]', 'STATUTE': ""['Code of Criminal Procedure']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: D.B.Criminal Appeal No.226/2003 D.B. Criminal Appeals under Section 374 of the Code of Criminal Procedure against the judgment & order dated 21.1.2003 passed by the Additional Sessions Judge (Fast Track), No.1 Kota in Sessions Case No. 89/2001. [/INST]
 {""CASE_NUMBER"": ""['D.B.Criminal Appeal No.226/2003 D.B. Criminal Appeals', 'Sessions Case No. 89/2001']"", ""COURT"": ""['Additional Sessions Judge (Fast Track), No.1 Kota']"", ""DATE"": ""['21.1.2003']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 374']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure']"", ""WITNESS"": ""[]""} </s>"
These appeals by special leave are directed against an Order passed by the Division Bench of the Karnataka High Court summarily rejecting writ appeals preferred by several students against a common judgment delivered by Justice Rama Jois dismissing the writ petitions filed by them challenging the cancellation of their admission by the Karnataka University.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Karnataka High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rama Jois']"", ""LAWYER"": ""[]"", ""ORG"": ""['Karnataka University']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Karnataka High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Rama Jois']"", 'LAWYER': '[]', 'ORG': ""['Karnataka University']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: These appeals by special leave are directed against an Order passed by the Division Bench of the Karnataka High Court summarily rejecting writ appeals preferred by several students against a common judgment delivered by Justice Rama Jois dismissing the writ petitions filed by them challenging the cancellation of their admission by the Karnataka University. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Karnataka High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rama Jois']"", ""LAWYER"": ""[]"", ""ORG"": ""['Karnataka University']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Their Lordships of the Supreme Court have also approved the above principles in their decision reported in AIR 1957 SC 912. 66.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['AIR 1957 SC 912']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['AIR 1957 SC 912']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Their Lordships of the Supreme Court have also approved the above principles in their decision reported in AIR 1957 SC 912. 66. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['AIR 1957 SC 912']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"From those circumstances, therefore, it can safely be inferred that the accused-respondent was responsible for causing the gun shot injury to Sunder Singh with an intention to cause his death and that act of his will fall within the mischief of Section 307 of the Indian Penal Code.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sunder Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 307']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Indian Penal Code']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sunder Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 307']"", 'RESPONDENT': '[]', 'STATUTE': ""['Indian Penal Code']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: From those circumstances, therefore, it can safely be inferred that the accused-respondent was responsible for causing the gun shot injury to Sunder Singh with an intention to cause his death and that act of his will fall within the mischief of Section 307 of the Indian Penal Code. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sunder Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 307']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Indian Penal Code']"", ""WITNESS"": ""[]""} </s>"
"Harjinder Singh v. Punjab State Warehousing Corporation (Civil Appeal No. 587 of 2010) January 05, 2010 [G.S. Singhvi and Asok Kumar Ganguly, Jj.] 2010 (1) Scr 591 The following Order of the Court was delivered Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['G.S. Singhvi', 'Asok Kumar Ganguly']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Harjinder Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Punjab State Warehousing Corporation']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['G.S. Singhvi', 'Asok Kumar Ganguly']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Harjinder Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Punjab State Warehousing Corporation']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Harjinder Singh v. Punjab State Warehousing Corporation (Civil Appeal No. 587 of 2010) January 05, 2010 [G.S. Singhvi and Asok Kumar Ganguly, Jj.] 2010 (1) Scr 591 The following Order of the Court was delivered Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['G.S. Singhvi', 'Asok Kumar Ganguly']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Harjinder Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Punjab State Warehousing Corporation']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Respondent No. 5 was impleaded as insurer of the said bus along with non-applicant No. 2 Akram as owner of the vehicle.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Akram']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Akram']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Respondent No. 5 was impleaded as insurer of the said bus along with non-applicant No. 2 Akram as owner of the vehicle. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Akram']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"has deposed that the second accused took the police and the panchas including PW16 to the house of his maternal Aunt Lakshmamma, situate at II Cross, Mallikarjuna Nagar, Shimoga and told the police that in the said house he has kept the weapon used for commission of the offence.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Shimoga']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Lakshmamma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Shimoga']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Lakshmamma']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: has deposed that the second accused took the police and the panchas including PW16 to the house of his maternal Aunt Lakshmamma, situate at II Cross, Mallikarjuna Nagar, Shimoga and told the police that in the said house he has kept the weapon used for commission of the offence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Shimoga']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Lakshmamma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Bennion in his ""Statutory Interpretation"" (at page 644) refers such a composite legislation, though the observations must be under-stood in the context of the supremacy of the British Parliament and one of unlimited powers and which is, under no inhibitions unlike a federal polity, of PG NO 801 distribution of legislative powers.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['British Parliament']"", ""OTHER_PERSON"": ""['Bennion']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['British Parliament']"", 'OTHER_PERSON': ""['Bennion']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Bennion in his ""Statutory Interpretation"" (at page 644) refers such a composite legislation, though the observations must be under-stood in the context of the supremacy of the British Parliament and one of unlimited powers and which is, under no inhibitions unlike a federal polity, of PG NO 801 distribution of legislative powers. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['British Parliament']"", ""OTHER_PERSON"": ""['Bennion']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"12/03/2015 Shri G.S. Chouhan,learned counsel for the appellant.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['12/03/2015']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['G.S. Chouhan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['12/03/2015']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['G.S. Chouhan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 12/03/2015 Shri G.S. Chouhan,learned counsel for the appellant. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['12/03/2015']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['G.S. Chouhan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The learned authorised representative submitted that the issue is covered by the decision of Tribunal Ahmedabad ""A"" Bench in ITA No. 3594/Ahd/94.","{""CASE_NUMBER"": ""['ITA No. 3594/Ahd/94']"", ""COURT"": ""['Tribunal Ahmedabad \""A\"" Bench']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['ITA No. 3594/Ahd/94']"", 'COURT': '[\'Tribunal Ahmedabad ""A"" Bench\']', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The learned authorised representative submitted that the issue is covered by the decision of Tribunal Ahmedabad ""A"" Bench in ITA No. 3594/Ahd/94. [/INST]
 {""CASE_NUMBER"": ""['ITA No. 3594/Ahd/94']"", ""COURT"": ""['Tribunal Ahmedabad \""A\"" Bench']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Shri Rajeev Bansal, Asj-03 (South District), Saket Courts, New Delhi. S.C. No.19/13 (Unique Id No.02406R0336052011) Fir No.52/11 Ps: Fatehpur Beri U/S: 323/341/308/34 Ipc State Vs (1) Sunil Kumar @ Dabbu S/o Sh. Riccha Ram, R/o H. No. 182, Karia Mohalla, Village Fatehpur Beri, New Delhi. (2) Vijender Kumar @ Birju S/o Sh. Balesh Raj R/o H. No. 183, Karia Mohalla, Village Fatehpur Beri, New Delhi. (3) Rakesh Kumar S/o Sh. Balesh Raj R/o H. No. 183, Karia Mohalla, Village Fatehpur Beri, New Delhi. (4) Mukesh Kumar S/o Sh. Balesh Raj R/o H. No. 183, Karia Mohalla, Village Fatehpur Beri, New Delhi. Date of Initial Institution :05.11.2011 Date of Institution in this court :15.01.2013 Date of Pronouncement Order :19.02.2014 S.C. No. 19/13 Fir No. 52/11 State vs. Sunil Kumar etc. 1 /23 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Asj-03 (South District), Saket Courts, New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rajeev Bansal']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sunil Kumar @ Dabbu', 'Vijender Kumar @ Birju', 'Rakesh Kumar', 'Mukesh Kumar', 'Sunil Kumar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Asj-03 (South District), Saket Courts, New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Rajeev Bansal']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['State']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Sunil Kumar @ Dabbu', 'Vijender Kumar @ Birju', 'Rakesh Kumar', 'Mukesh Kumar', 'Sunil Kumar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Shri Rajeev Bansal, Asj-03 (South District), Saket Courts, New Delhi. S.C. No.19/13 (Unique Id No.02406R0336052011) Fir No.52/11 Ps: Fatehpur Beri U/S: 323/341/308/34 Ipc State Vs (1) Sunil Kumar @ Dabbu S/o Sh. Riccha Ram, R/o H. No. 182, Karia Mohalla, Village Fatehpur Beri, New Delhi. (2) Vijender Kumar @ Birju S/o Sh. Balesh Raj R/o H. No. 183, Karia Mohalla, Village Fatehpur Beri, New Delhi. (3) Rakesh Kumar S/o Sh. Balesh Raj R/o H. No. 183, Karia Mohalla, Village Fatehpur Beri, New Delhi. (4) Mukesh Kumar S/o Sh. Balesh Raj R/o H. No. 183, Karia Mohalla, Village Fatehpur Beri, New Delhi. Date of Initial Institution :05.11.2011 Date of Institution in this court :15.01.2013 Date of Pronouncement Order :19.02.2014 S.C. No. 19/13 Fir No. 52/11 State vs. Sunil Kumar etc. 1 /23 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Asj-03 (South District), Saket Courts, New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rajeev Bansal']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sunil Kumar @ Dabbu', 'Vijender Kumar @ Birju', 'Rakesh Kumar', 'Mukesh Kumar', 'Sunil Kumar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Sub-rule (1) of Section 115 provides that every motor vehicle other than motor-cycles of engine capacity not exceeding 70 cc, manufactured prior to the first day of March, 1990, shall be maintained in such condition and shall be so driven so as to comply with the standards prescribed in these rules.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['first day of March, 1990']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sub-rule (1) of Section 115']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['first day of March, 1990']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Sub-rule (1) of Section 115']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Sub-rule (1) of Section 115 provides that every motor vehicle other than motor-cycles of engine capacity not exceeding 70 cc, manufactured prior to the first day of March, 1990, shall be maintained in such condition and shall be so driven so as to comply with the standards prescribed in these rules. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['first day of March, 1990']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sub-rule (1) of Section 115']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Criminal Appeal Nos. 375-77 of 1987 are allowed to this extent only and Criminal Appeal Nos. 372-74/87 are dis- missed.,"{""CASE_NUMBER"": ""['Criminal Appeal Nos. 375-77 of 1987', 'Criminal Appeal Nos. 372-74/87']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Criminal Appeal Nos. 375-77 of 1987', 'Criminal Appeal Nos. 372-74/87']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Criminal Appeal Nos. 375-77 of 1987 are allowed to this extent only and Criminal Appeal Nos. 372-74/87 are dis- missed. [/INST]
 {""CASE_NUMBER"": ""['Criminal Appeal Nos. 375-77 of 1987', 'Criminal Appeal Nos. 372-74/87']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The payment of the amount covered under a cheque can be stopped by the drawer thereof by intimation to the bank in time before the cheque is encashed and in such an event the cheque would stand dishonoured.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The payment of the amount covered under a cheque can be stopped by the drawer thereof by intimation to the bank in time before the cheque is encashed and in such an event the cheque would stand dishonoured. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
In State of Uttar Pradesh v. Bhagwant Kishore Joshi the observation of the Court in Mubarak Ali's case was affirmed.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mubarak Ali']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Uttar Pradesh v. Bhagwant Kishore Joshi']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Mubarak Ali']"", 'PETITIONER': '[]', 'PRECEDENT': ""['State of Uttar Pradesh v. Bhagwant Kishore Joshi']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In State of Uttar Pradesh v. Bhagwant Kishore Joshi the observation of the Court in Mubarak Ali's case was affirmed. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mubarak Ali']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Uttar Pradesh v. Bhagwant Kishore Joshi']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The legal notices are proved as Ex. PW1/3A, Ex. PW1/4A to Ex.PW1/4(J).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The legal notices are proved as Ex. PW1/3A, Ex. PW1/4A to Ex.PW1/4(J). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Article 329(b) of the Constitution reads as under: ""329.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 329(b)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 329(b)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Article 329(b) of the Constitution reads as under: ""329. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 329(b)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"According to such inquiry report, the management and subordinate superior officers were found to be guilty for such accident.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: According to such inquiry report, the management and subordinate superior officers were found to be guilty for such accident. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Therefore, respondent-original accused No. 1 Allarakha Khamisa Mansuri is held guilty for the offence punishable under Section 302 of IPC and he is sentenced to undergo rigorous imprisonment for life and also to pay a fine of Rs. 5,000/- (Rupees Five Thousand Only) and in default, to undergo further rigorous imprisonment for 3 years.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 302']"", ""RESPONDENT"": ""['Allarakha Khamisa Mansuri']"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 302']"", 'RESPONDENT': ""['Allarakha Khamisa Mansuri']"", 'STATUTE': ""['IPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore, respondent-original accused No. 1 Allarakha Khamisa Mansuri is held guilty for the offence punishable under Section 302 of IPC and he is sentenced to undergo rigorous imprisonment for life and also to pay a fine of Rs. 5,000/- (Rupees Five Thousand Only) and in default, to undergo further rigorous imprisonment for 3 years. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 302']"", ""RESPONDENT"": ""['Allarakha Khamisa Mansuri']"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""} </s>"
"The deceased Kranti and his daughter Sarita told him that earlier in the day, the appellant Sonu and co-accused Manoj had visited and insisted that they would continue to sleep on the roof of the house of their neighbour and if they objected to that, their house would be blown with a bomb.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Kranti', 'Sarita', 'Manoj']"", ""PETITIONER"": ""['Sonu']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Kranti', 'Sarita', 'Manoj']"", 'PETITIONER': ""['Sonu']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The deceased Kranti and his daughter Sarita told him that earlier in the day, the appellant Sonu and co-accused Manoj had visited and insisted that they would continue to sleep on the roof of the house of their neighbour and if they objected to that, their house would be blown with a bomb. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Kranti', 'Sarita', 'Manoj']"", ""PETITIONER"": ""['Sonu']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In this connection it is worth-mentioning as to what the Supreme Court has stated in 1973 SCC (Cri) 1033 : (1973 Cri LJ 1783), Shivaji Sahabrao v. State of Maharashtra, ""The too sophisticated approaches familiar in courts based on unreal assumptions about human conduct cannot obviously be applied to those given to the lathergic ways of our village.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['1973 SCC (Cri) 1033 : (1973 Cri LJ 1783), Shivaji Sahabrao v. State of Maharashtra']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['1973 SCC (Cri) 1033 : (1973 Cri LJ 1783), Shivaji Sahabrao v. State of Maharashtra']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this connection it is worth-mentioning as to what the Supreme Court has stated in 1973 SCC (Cri) 1033 : (1973 Cri LJ 1783), Shivaji Sahabrao v. State of Maharashtra, ""The too sophisticated approaches familiar in courts based on unreal assumptions about human conduct cannot obviously be applied to those given to the lathergic ways of our village. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['1973 SCC (Cri) 1033 : (1973 Cri LJ 1783), Shivaji Sahabrao v. State of Maharashtra']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Recently, in the case of Kishan Chand v. State of Haryana, (2013) 2 SCC 502 , Supreme Court held as follows; ""19.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Kishan Chand v. State of Haryana, (2013) 2 SCC 502']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Kishan Chand v. State of Haryana, (2013) 2 SCC 502']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Recently, in the case of Kishan Chand v. State of Haryana, (2013) 2 SCC 502 , Supreme Court held as follows; ""19. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Kishan Chand v. State of Haryana, (2013) 2 SCC 502']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is correct that summons were not duly issued and served; entries of filing of documents and proceedings were not made in the relevant registers as per rules; the service report was not filed as required and there is no compliance of rules of service as provided in CPC, High Court Rules; there is no explanation for the events of 14.3.1995.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['14.3.1995']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['14.3.1995']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['CPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is correct that summons were not duly issued and served; entries of filing of documents and proceedings were not made in the relevant registers as per rules; the service report was not filed as required and there is no compliance of rules of service as provided in CPC, High Court Rules; there is no explanation for the events of 14.3.1995. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['14.3.1995']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""} </s>"
Section 9 was not enacted to curb the spirit of adventure among Indians or make them a nation of Koopaman- dookas.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 9']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 9']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Section 9 was not enacted to curb the spirit of adventure among Indians or make them a nation of Koopaman- dookas. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 9']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The plaintiff who is the nearest heir to Seshagiri Rao is entitled to the properties described in Schedules 'A' to 'E', When he came to Eluru on the 25th of August 1954 to claim his reversion, defendants 1 to 8 set up a will alleged to have been executed by Ramamma on 21-8-1954.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['25th of August 1954', '21-8-1954']"", ""GPE"": ""['Eluru']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Seshagiri Rao', 'Ramamma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['25th of August 1954', '21-8-1954']"", 'GPE': ""['Eluru']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Seshagiri Rao', 'Ramamma']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The plaintiff who is the nearest heir to Seshagiri Rao is entitled to the properties described in Schedules 'A' to 'E', When he came to Eluru on the 25th of August 1954 to claim his reversion, defendants 1 to 8 set up a will alleged to have been executed by Ramamma on 21-8-1954. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['25th of August 1954', '21-8-1954']"", ""GPE"": ""['Eluru']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Seshagiri Rao', 'Ramamma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On the facts established in this case therefore, neither the theory of abandonment nor the ground for late filing of the suit can be regarded as sufficient to deny the plaintiff his right to have the contract of sale between him and defendant 1 specifically performed.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On the facts established in this case therefore, neither the theory of abandonment nor the ground for late filing of the suit can be regarded as sufficient to deny the plaintiff his right to have the contract of sale between him and defendant 1 specifically performed."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
9. Having drawn my attention on the petition of appeal and the trial court record it is submitted by the accused that he had no Criminal Appeal No. 4/15 Page no. 6 of 16 knowledge about the proclamation under section 82 of Cr.P.C issued against him.,"{""CASE_NUMBER"": ""['Criminal Appeal No. 4/15 Page no. 6 of 16']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 82']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr.P.C']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Criminal Appeal No. 4/15 Page no. 6 of 16']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 82']"", 'RESPONDENT': '[]', 'STATUTE': ""['Cr.P.C']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 9. Having drawn my attention on the petition of appeal and the trial court record it is submitted by the accused that he had no Criminal Appeal No. 4/15 Page no. 6 of 16 knowledge about the proclamation under section 82 of Cr.P.C issued against him. [/INST]
 {""CASE_NUMBER"": ""['Criminal Appeal No. 4/15 Page no. 6 of 16']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 82']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr.P.C']"", ""WITNESS"": ""[]""} </s>"
"Instead of declaring the provision null and void being violative of Articles 14 and 21 of the Constitution of India, there should have been a value judgment considering different situations.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Articles 14 and 21']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution of India']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Articles 14 and 21']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution of India']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Instead of declaring the provision null and void being violative of Articles 14 and 21 of the Constitution of India, there should have been a value judgment considering different situations. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Articles 14 and 21']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution of India']"", ""WITNESS"": ""[]""} </s>"
"Before The Madurai Bench Of Madras High Court Dated : 02/08/2006 Coram: The Honoruable Mr.Justice F.M.Ibrahim Kalifulla and The Honourable Mr.Justice P.Murgesen W.A.(MD)No.135 of 2006 W.A.(MD)No.136 of 2006 R.Shanmugaiah ... Appellant in both the W.As. vs. 1.P.S.Lakshmanakumar 2.Regional Transport Authority, Virudhunagar District, Virudhunagar. 3.The State Transport Appellate Tribunal, High Court Campus, Chennai-600 104. ... Respondents in both the W.As. W.A.No.135/2006: Writ Appeal under Clause 15 of Letters Patent against the order of the learned single Judge, dated 29.03.200, made in W.P.No.10481/2005. W.A.No.136/2006: Writ Appeal under Clause 15 of Letters Patent against the order of the learned single Judge, dated 29.03.200, made in W.P.No.10482/2005. !For Appellant ... Mr.M.Palani ^For Respondent ... Mr.M.Ajmalkhan No.1 For Respondent ... Mr.R.Janakiramulu, No.2 Spl.Govt.Pleader. :Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madurai Bench Of Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['F.M.Ibrahim Kalifulla', 'P.Murgesen']"", ""LAWYER"": ""['M.Palani', 'M.Ajmalkhan', 'R.Janakiramulu']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['R.Shanmugaiah']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['1.P.S.Lakshmanakumar', '2.Regional Transport Authority, Virudhunagar District, Virudhunagar.', '3.The State Transport Appellate Tribunal, High Court Campus, Chennai-600 104.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Madurai Bench Of Madras High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['F.M.Ibrahim Kalifulla', 'P.Murgesen']"", 'LAWYER': ""['M.Palani', 'M.Ajmalkhan', 'R.Janakiramulu']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['R.Shanmugaiah']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['1.P.S.Lakshmanakumar', '2.Regional Transport Authority, Virudhunagar District, Virudhunagar.', '3.The State Transport Appellate Tribunal, High Court Campus, Chennai-600 104.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Before The Madurai Bench Of Madras High Court Dated : 02/08/2006 Coram: The Honoruable Mr.Justice F.M.Ibrahim Kalifulla and The Honourable Mr.Justice P.Murgesen W.A.(MD)No.135 of 2006 W.A.(MD)No.136 of 2006 R.Shanmugaiah ... Appellant in both the W.As. vs. 1.P.S.Lakshmanakumar 2.Regional Transport Authority, Virudhunagar District, Virudhunagar. 3.The State Transport Appellate Tribunal, High Court Campus, Chennai-600 104. ... Respondents in both the W.As. W.A.No.135/2006: Writ Appeal under Clause 15 of Letters Patent against the order of the learned single Judge, dated 29.03.200, made in W.P.No.10481/2005. W.A.No.136/2006: Writ Appeal under Clause 15 of Letters Patent against the order of the learned single Judge, dated 29.03.200, made in W.P.No.10482/2005. !For Appellant ... Mr.M.Palani ^For Respondent ... Mr.M.Ajmalkhan No.1 For Respondent ... Mr.R.Janakiramulu, No.2 Spl.Govt.Pleader. :Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madurai Bench Of Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['F.M.Ibrahim Kalifulla', 'P.Murgesen']"", ""LAWYER"": ""['M.Palani', 'M.Ajmalkhan', 'R.Janakiramulu']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['R.Shanmugaiah']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['1.P.S.Lakshmanakumar', '2.Regional Transport Authority, Virudhunagar District, Virudhunagar.', '3.The State Transport Appellate Tribunal, High Court Campus, Chennai-600 104.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Memorandum No. 138-PS. dated Calcutta, the 7th February 1956 Subject:-- Action to be taken in cases of stay-in-strikes and ""Gherao"" or Coercive and confinement tactics resorted to by the employees of commercial and industrial undertakings.","{""CASE_NUMBER"": ""['Memorandum No. 138-PS']"", ""COURT"": ""[]"", ""DATE"": ""['7th February 1956']"", ""GPE"": ""['Calcutta']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Memorandum No. 138-PS']"", 'COURT': '[]', 'DATE': ""['7th February 1956']"", 'GPE': ""['Calcutta']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Memorandum No. 138-PS. dated Calcutta, the 7th February 1956 Subject:-- Action to be taken in cases of stay-in-strikes and ""Gherao"" or Coercive and confinement tactics resorted to by the employees of commercial and industrial undertakings. [/INST]
 {""CASE_NUMBER"": ""['Memorandum No. 138-PS']"", ""COURT"": ""[]"", ""DATE"": ""['7th February 1956']"", ""GPE"": ""['Calcutta']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Patna Letters Patent Appeal No.1639 of 2016 In Civil Writ Jurisdiction Case No. 9918 of 2016 =========================================================== Bibha Devi wife of Abinash Kumar Thakur, Resident of village and P.O. Kansi, Police Station- Simri and District - Darbhanga. .... .... Appellant Versus 1. The State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna through the State Election Commissioner. 2. The State Election Commissioner, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna. 3. The Secretary, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna. 4. The District Magistrate, Darbhanga -cum- District Election Officer (Panchayat), Darbhanga, District - Darbhanga. 5. The Block Development Officer-cum-Returning Officer (Panchayat Election, 2016), Sadar Darbhanga Block, District Darbhanga. 6. Sri Taukir Kaisar, son of not known to the petitioner, presently posted as the Block Development officer, Kewati, District Darbhanga. 7. Usha Devi, wife of Pawan Kumar Chaudhary, Resident of Village and P.O.- Kansi, Police Station- Simri, District - Darbhanga. .... .... Respondents With =========================================================== Letters Patent Appeal No. 1643 of 2016 In Civil Writ Jurisdiction Case No. 9918 of 2016 =========================================================== Akila Khatoon wife of Neyaz Ahmad, resident of village and P.O.- Kansi, Police Station- Simri and District- Darbhanga. .... .... Appellant Versus 1. The State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna through the State Election Commissioner. 2. The State Election Commissioner, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna. 3. The Secretary, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna. 4. The District Magistrate, Darbhanga -cum- District Election Officer (Panchayat), Darbhanga, District - Darbhanga. 5. The Block Development Officer -cum- Returning Officer (Panchayat Election, 2016), Sadar Darbhanga Block, District Darbhanga. 6. Sri Taukir Kaisar, Son of not known to the Petitioner, Presently posted as the B.D.O., Kewati, District Darbhanga. 7. Bibha Devi Wife of Abinash Kumar Thakur, Resident of village and P.O. Kansi, P.S. Simri, District - Darbhanga 8. Usha Devi, Wife of Pawan Kumar Chaudhary, Resident of village and P.O. Kansi, P.S. Simri, District - Darbhanga. .... .... Respondents =========================================================== Patna High Court Lpa No.1639 of 2016 dt.18-10-2016 Appearance : (In Lpa No.1639 of 2016) For the Appellant: Mr. P.K. Shahi, Senior Advocate Mr. Manish Kumar No. 2, (In Lpa No.1643 of 2016) For the Appellant: Mr. Ajay Thakur, Advocate Mr. Gajendra Singh, Advocate For the Respondent State: Mr. Kaushal Kumar Jha, Aag -8 Mr. K.C. Jha, Advocate Mr. Amish Kumar, Advocate Mr. S.K. Choudhary, Advocate For State Election Commission:Mr. Amit Srivastava, Advocate Mr. Girish Pandey, Advocate For Private Respondent: Mr. S.B.K. Mangalam, Advocate Mr. Ravi Ranjan, Advocate =========================================================== Coram: Honourable The Chief Justice and Honourable Mr. Justice Chakradhari Sharan Singh Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna', 'Patna High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Chakradhari Sharan Singh']"", ""LAWYER"": ""['P.K. Shahi', 'Manish Kumar', 'Ajay Thakur', 'Gajendra Singh', 'Kaushal Kumar Jha', 'K.C. Jha', 'Amish Kumar', 'S.K. Choudhary', 'Amit Srivastava', 'Girish Pandey', 'S.B.K. Mangalam', 'Ravi Ranjan']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bibha Devi', 'Akila Khatoon']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna', 'State Election Commissioner, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna', 'Secretary, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna', 'District Magistrate, Darbhanga -cum- District Election Officer (Panchayat), Darbhanga, District - Darbhanga', 'Block Development Officer-cum-Returning Officer (Panchayat Election, 2016), Sadar Darbhanga Block, District Darbhanga', 'Taukir Kaisar', 'Usha Devi', 'Block Development Officer -cum- Returning Officer (Panchayat Election, 2016), Sadar Darbhanga Block, District Darbhanga', 'Bibha Devi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Patna', 'Patna High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Chakradhari Sharan Singh']"", 'LAWYER': ""['P.K. Shahi', 'Manish Kumar', 'Ajay Thakur', 'Gajendra Singh', 'Kaushal Kumar Jha', 'K.C. Jha', 'Amish Kumar', 'S.K. Choudhary', 'Amit Srivastava', 'Girish Pandey', 'S.B.K. Mangalam', 'Ravi Ranjan']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Bibha Devi', 'Akila Khatoon']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna', 'State Election Commissioner, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna', 'Secretary, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna', 'District Magistrate, Darbhanga -cum- District Election Officer (Panchayat), Darbhanga, District - Darbhanga', 'Block Development Officer-cum-Returning Officer (Panchayat Election, 2016), Sadar Darbhanga Block, District Darbhanga', 'Taukir Kaisar', 'Usha Devi', 'Block Development Officer -cum- Returning Officer (Panchayat Election, 2016), Sadar Darbhanga Block, District Darbhanga', 'Bibha Devi']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Patna Letters Patent Appeal No.1639 of 2016 In Civil Writ Jurisdiction Case No. 9918 of 2016 =========================================================== Bibha Devi wife of Abinash Kumar Thakur, Resident of village and P.O. Kansi, Police Station- Simri and District - Darbhanga. .... .... Appellant Versus 1. The State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna through the State Election Commissioner. 2. The State Election Commissioner, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna. 3. The Secretary, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna. 4. The District Magistrate, Darbhanga -cum- District Election Officer (Panchayat), Darbhanga, District - Darbhanga. 5. The Block Development Officer-cum-Returning Officer (Panchayat Election, 2016), Sadar Darbhanga Block, District Darbhanga. 6. Sri Taukir Kaisar, son of not known to the petitioner, presently posted as the Block Development officer, Kewati, District Darbhanga. 7. Usha Devi, wife of Pawan Kumar Chaudhary, Resident of Village and P.O.- Kansi, Police Station- Simri, District - Darbhanga. .... .... Respondents With =========================================================== Letters Patent Appeal No. 1643 of 2016 In Civil Writ Jurisdiction Case No. 9918 of 2016 =========================================================== Akila Khatoon wife of Neyaz Ahmad, resident of village and P.O.- Kansi, Police Station- Simri and District- Darbhanga. .... .... Appellant Versus 1. The State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna through the State Election Commissioner. 2. The State Election Commissioner, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna. 3. The Secretary, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna. 4. The District Magistrate, Darbhanga -cum- District Election Officer (Panchayat), Darbhanga, District - Darbhanga. 5. The Block Development Officer -cum- Returning Officer (Panchayat Election, 2016), Sadar Darbhanga Block, District Darbhanga. 6. Sri Taukir Kaisar, Son of not known to the Petitioner, Presently posted as the B.D.O., Kewati, District Darbhanga. 7. Bibha Devi Wife of Abinash Kumar Thakur, Resident of village and P.O. Kansi, P.S. Simri, District - Darbhanga 8. Usha Devi, Wife of Pawan Kumar Chaudhary, Resident of village and P.O. Kansi, P.S. Simri, District - Darbhanga. .... .... Respondents =========================================================== Patna High Court Lpa No.1639 of 2016 dt.18-10-2016 Appearance : (In Lpa No.1639 of 2016) For the Appellant: Mr. P.K. Shahi, Senior Advocate Mr. Manish Kumar No. 2, (In Lpa No.1643 of 2016) For the Appellant: Mr. Ajay Thakur, Advocate Mr. Gajendra Singh, Advocate For the Respondent State: Mr. Kaushal Kumar Jha, Aag -8 Mr. K.C. Jha, Advocate Mr. Amish Kumar, Advocate Mr. S.K. Choudhary, Advocate For State Election Commission:Mr. Amit Srivastava, Advocate Mr. Girish Pandey, Advocate For Private Respondent: Mr. S.B.K. Mangalam, Advocate Mr. Ravi Ranjan, Advocate =========================================================== Coram: Honourable The Chief Justice and Honourable Mr. Justice Chakradhari Sharan Singh Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna', 'Patna High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Chakradhari Sharan Singh']"", ""LAWYER"": ""['P.K. Shahi', 'Manish Kumar', 'Ajay Thakur', 'Gajendra Singh', 'Kaushal Kumar Jha', 'K.C. Jha', 'Amish Kumar', 'S.K. Choudhary', 'Amit Srivastava', 'Girish Pandey', 'S.B.K. Mangalam', 'Ravi Ranjan']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bibha Devi', 'Akila Khatoon']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna', 'State Election Commissioner, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna', 'Secretary, the State Election Commission (Panchayat), Sone Bhawan, Birchand Patel Path, Patna', 'District Magistrate, Darbhanga -cum- District Election Officer (Panchayat), Darbhanga, District - Darbhanga', 'Block Development Officer-cum-Returning Officer (Panchayat Election, 2016), Sadar Darbhanga Block, District Darbhanga', 'Taukir Kaisar', 'Usha Devi', 'Block Development Officer -cum- Returning Officer (Panchayat Election, 2016), Sadar Darbhanga Block, District Darbhanga', 'Bibha Devi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It is pertinent to mention here that Shyamabai (PW/2) is not the witness of village Hanuman Sagar because she did not went there so whatever in his knowledge or information is hearsay only.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Hanuman Sagar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Shyamabai']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Hanuman Sagar']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Shyamabai']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is pertinent to mention here that Shyamabai (PW/2) is not the witness of village Hanuman Sagar because she did not went there so whatever in his knowledge or information is hearsay only. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Hanuman Sagar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Shyamabai']""} </s>"
"In the present case, the plaintiff has proved on record the legal notices dated 16.09.2007, 12.05.2008 and 29.05.2008 whereby the tenancy of the defendant has been terminated.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['16.09.2007', '12.05.2008', '29.05.2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['16.09.2007', '12.05.2008', '29.05.2008']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the present case, the plaintiff has proved on record the legal notices dated 16.09.2007, 12.05.2008 and 29.05.2008 whereby the tenancy of the defendant has been terminated. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['16.09.2007', '12.05.2008', '29.05.2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Mr. Munshee had also referred me R. M. D. C. v. Union of India, AIR 1957 SC 628 for the contention that as the notified scheme is law, one must try to see the intent of them that made it and that could be gathered from the wordings actually used in the Statute.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Munshee']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['R. M. D. C. v. Union of India, AIR 1957 SC 628']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Munshee']"", 'PETITIONER': '[]', 'PRECEDENT': ""['R. M. D. C. v. Union of India, AIR 1957 SC 628']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mr. Munshee had also referred me R. M. D. C. v. Union of India, AIR 1957 SC 628 for the contention that as the notified scheme is law, one must try to see the intent of them that made it and that could be gathered from the wordings actually used in the Statute. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Munshee']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['R. M. D. C. v. Union of India, AIR 1957 SC 628']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
In the notification dated 12-6-1989 the Central Government have only prescribed the minimum qualifications for appointment to the post of Motor Vehicles Inspector/Assistant Motor Vehicles Inspector.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['12-6-1989']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['12-6-1989']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the notification dated 12-6-1989 the Central Government have only prescribed the minimum qualifications for appointment to the post of Motor Vehicles Inspector/Assistant Motor Vehicles Inspector. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['12-6-1989']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Division Bench of Allahabad High Court held that ""it may be true that an offence under Section 422 is not included in the offences mentioned in Section 195(1) (b) or (c) and, therefore, the liquidation officer, acting as a civil or revenue court, could not under the provisions of Section 476 make a complaint for an offence which fell under Section 422.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Division Bench of Allahabad High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 422', 'Section 195(1) (b) or (c)', 'Section 476']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Division Bench of Allahabad High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 422', 'Section 195(1) (b) or (c)', 'Section 476']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Division Bench of Allahabad High Court held that ""it may be true that an offence under Section 422 is not included in the offences mentioned in Section 195(1) (b) or (c) and, therefore, the liquidation officer, acting as a civil or revenue court, could not under the provisions of Section 476 make a complaint for an offence which fell under Section 422. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Division Bench of Allahabad High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 422', 'Section 195(1) (b) or (c)', 'Section 476']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
But this phenomenon occurs even in the case of the print media of all the countries.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But this phenomenon occurs even in the case of the print media of all the countries. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Fir No. 124/06 State Vs. Sunil Kumar U/s. 279/304A Ipc & 185 Mv Act Ps: Keshav Puram In The Court Of Sh. Viplav Dabas Mm­4(North West) Rohini Courts Delhi Fir No. 124/06 State Vs. Sunil Kumar U/s. 279/304A Ipc & 185 Mv Act Ps: Keshav Puram Case Id No. 02404R0381922006 Date of Institution of case : 21.12.2006 Date of Judgment : 31.10.2014 Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Mm\\xad4(North West) Rohini Courts Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Viplav Dabas']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sunil Kumar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Mm\\xad4(North West) Rohini Courts Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Viplav Dabas']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['State']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Sunil Kumar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Fir No. 124/06 State Vs. Sunil Kumar U/s. 279/304A Ipc & 185 Mv Act Ps: Keshav Puram In The Court Of Sh. Viplav Dabas Mm­4(North West) Rohini Courts Delhi Fir No. 124/06 State Vs. Sunil Kumar U/s. 279/304A Ipc & 185 Mv Act Ps: Keshav Puram Case Id No. 02404R0381922006 Date of Institution of case : 21.12.2006 Date of Judgment : 31.10.2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Mm\\xad4(North West) Rohini Courts Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Viplav Dabas']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sunil Kumar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The same is the position of the rules issued on August 3, 1950 and January 25, 1951 and Mr. Krishnamurthy Iyer on","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['August 3, 1950', 'January 25, 1951']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Krishnamurthy Iyer']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['August 3, 1950', 'January 25, 1951']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Krishnamurthy Iyer']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The same is the position of the rules issued on August 3, 1950 and January 25, 1951 and Mr. Krishnamurthy Iyer on [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['August 3, 1950', 'January 25, 1951']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Krishnamurthy Iyer']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
From the language of Section 68-C and Rule 3 of the Kerala Motor Vehicles (State Transport Undertaking) Rules it appears that a complete exclusion scheme in relation to any area or route would be a scheme which completely excludes the existing road services of private operators on the area or route in question.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 68-C', 'Rule 3']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Kerala Motor Vehicles (State Transport Undertaking) Rules']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 68-C', 'Rule 3']"", 'RESPONDENT': '[]', 'STATUTE': ""['Kerala Motor Vehicles (State Transport Undertaking) Rules']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: From the language of Section 68-C and Rule 3 of the Kerala Motor Vehicles (State Transport Undertaking) Rules it appears that a complete exclusion scheme in relation to any area or route would be a scheme which completely excludes the existing road services of private operators on the area or route in question. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 68-C', 'Rule 3']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Kerala Motor Vehicles (State Transport Undertaking) Rules']"", ""WITNESS"": ""[]""} </s>"
"He further stated that the accused went aside and started signing the papers produced by Jagtar Singh, at his (Jagtar Singh's) instance.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Jagtar Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Jagtar Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He further stated that the accused went aside and started signing the papers produced by Jagtar Singh, at his (Jagtar Singh's) instance. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Jagtar Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The Honble Sri Justice Nooty Ramamohana Rao Writ Petition No.2241 of 2015 06-03-2015 Smt.I.G.Ramana Kumari.....Petitioner Eastern Power Distribution Company of A.P. Limited. Rep. by its Chairman-cum- Managing Director and another.. Respondents Counsel for the Petitioner: Sri Vedula Srinivas $Counsel for Respondents: Sri P.Anand Seshu Sri Krishna Rachakatla <Gist : >Head Note: ? Cases referred: The Honble Sri Justice Nooty Ramamohana Rao Writ Petition No. 2241 Of 2015 Order,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Nooty Ramamohana Rao']"", ""LAWYER"": ""['Vedula Srinivas', 'P.Anand Seshu', 'Krishna Rachakatla']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['I.G.Ramana Kumari']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Eastern Power Distribution Company of A.P. Limited.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Nooty Ramamohana Rao']"", 'LAWYER': ""['Vedula Srinivas', 'P.Anand Seshu', 'Krishna Rachakatla']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['I.G.Ramana Kumari']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Eastern Power Distribution Company of A.P. Limited.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Honble Sri Justice Nooty Ramamohana Rao Writ Petition No.2241 of 2015 06-03-2015 Smt.I.G.Ramana Kumari.....Petitioner Eastern Power Distribution Company of A.P. Limited. Rep. by its Chairman-cum- Managing Director and another.. Respondents Counsel for the Petitioner: Sri Vedula Srinivas $Counsel for Respondents: Sri P.Anand Seshu Sri Krishna Rachakatla <Gist : >Head Note: ? Cases referred: The Honble Sri Justice Nooty Ramamohana Rao Writ Petition No. 2241 Of 2015 Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Nooty Ramamohana Rao']"", ""LAWYER"": ""['Vedula Srinivas', 'P.Anand Seshu', 'Krishna Rachakatla']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['I.G.Ramana Kumari']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Eastern Power Distribution Company of A.P. Limited.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In view of the foregoing reasons, I hereby withdraw the show cause notice under section 86-A Delhi Land Reforms Act and accordingly drop the proceedings against the respondents.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 86-A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Delhi Land Reforms Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 86-A']"", 'RESPONDENT': '[]', 'STATUTE': ""['Delhi Land Reforms Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In view of the foregoing reasons, I hereby withdraw the show cause notice under section 86-A Delhi Land Reforms Act and accordingly drop the proceedings against the respondents. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 86-A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Delhi Land Reforms Act']"", ""WITNESS"": ""[]""} </s>"
The petitioner will get right over the property subject to the charge created pursuant to the attachment made by the Debts Recovery Tribunal in I.A.No.831 of 2008 in O.A.No.100 of 2008.,"{""CASE_NUMBER"": ""['I.A.No.831 of 2008', 'O.A.No.100 of 2008']"", ""COURT"": ""['Debts Recovery Tribunal']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['I.A.No.831 of 2008', 'O.A.No.100 of 2008']"", 'COURT': ""['Debts Recovery Tribunal']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioner will get right over the property subject to the charge created pursuant to the attachment made by the Debts Recovery Tribunal in I.A.No.831 of 2008 in O.A.No.100 of 2008. [/INST]
 {""CASE_NUMBER"": ""['I.A.No.831 of 2008', 'O.A.No.100 of 2008']"", ""COURT"": ""['Debts Recovery Tribunal']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (crl.) 664 of 2002 Petitioner: S.M.S. Pharmaceuticals Ltd. Respondent: Neeta Bhalla and anr. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['S.M.S. Pharmaceuticals Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Neeta Bhalla']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['S.M.S. Pharmaceuticals Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Neeta Bhalla']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (crl.) 664 of 2002 Petitioner: S.M.S. Pharmaceuticals Ltd. Respondent: Neeta Bhalla and anr. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['S.M.S. Pharmaceuticals Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Neeta Bhalla']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 In The High Court Of Judicature At Bombay Nagpur Bench : Nagpur Criminal Writ Petition No.293 of 2002 1. Smt. Amrutabai widow of Kalya alias Shama Ukey, aged 35 years, occupation - Labourer, resident of Sanjay Nagar, Zopad Patti, Govindpur, Gondia. 2. Ku. Sunita daughter of Shama Ukey, aged 16 years, occupation - Student Vii Std. 3. Ku. Anita daughter of Shama Ukey, aged 14 years, occupation - Student VIIth Std. 4. Ravi son of Shama Ukey, aged 12 years, occupation - Student, VIth Std. 5. Ku. Sarita daughter of Shama Ukey, aged 9 years, occupation - Student IVth Std. 6. Ku. Sharda daughter of Shama Ukey, aged 7½ years, occupation Student IInd Std. All residents of Sanjay Nagar [Zopad Patti], Govindpur, Gondia City. Nos.2 to 6 minors, through guardian no.1 of Nos.2 to 6, Distt. Gondia, Maharashtra. .... Petitioners. Versus 2 1. State of Maharashtra [P.S. Gondia City.]. 2. Manik Sitaram Jibhkate, aged 50 years, Police Sub-Inspector, C/o Gondia City P.S. 3. Ravindra s/o Maharaji Aglave, aged 43 years, Police Constable, Buckle No. 915, C/o Gondia City P.S. 4. Manohar s/o Rajaram Bawankar, aged 45 years, Police Constable, Buckle No. 409, C/o Gondia City P.S. 5. Hansraj Maroti Vaidya, aged 42 years, Police Constable, Buckle No. 1301, C/o Gondia City P.S. 6. Vishnu son of Vithalji Malewar, aged 32 years, Police Constale, Buckle No. 735, C/o Gondia City, P.S. Gondia. 7. Vivshnath s/o Motiram Gosewade, aged 47 years, Head Constable, Buckle No.997, C/o Gondia City Police Station Gondia. 8. Dilip son of Haribhau Dongre, Police Constable, Buckle No. 91, C/o Gondia City Police, Gondia. Nos. 2 to 8 are employees of No.1 and their present address 3 cannot be given as they might be dismissed. However, they are appellants in Criminal Appeal against conviction in Sessions Trial No. 21/96 [State Vs.Manikrao and others] judgment dt: 7-2-1997 by Additional Sessions Judge, Gondia. .... Respondents. ***** Mr. Nikhil Joshi, Adv. [appointed] as Amicus Curiae. Mr. R.S. Nayak, Additional Public Prosecutor for respondent no.1. Mr. S.N. Mardikar, Adv., for respondent no.2. Mr. R.N. Badhe, Adv., for respondent nos. 4,6,7 and 8. Mr. Junai Ahmed, Adv., for respondent Nos. 3 and 5 [absent]. ***** Coram : A.H. Joshi And U.V. Bakre,Jj. Reserved on : 13th June, 2011. Pronounced on : 5th August, 2011. Oral Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay Nagpur Bench : Nagpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['A.H. Joshi', 'U.V. Bakre']"", ""LAWYER"": ""['Nikhil Joshi', 'S.N. Mardikar', 'R.N. Badhe', 'Junai Ahmed']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Amrutabai', 'Sunita', 'Anita', 'Ravi', 'Sarita', 'Sharda', 'State', 'Manikrao']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Maharashtra', 'Manik Sitaram Jibhkate', 'Ravindra', 'Manohar', 'Hansraj Maroti Vaidya', 'Vishnu', 'Vivshnath', 'Dilip']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay Nagpur Bench : Nagpur']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['A.H. Joshi', 'U.V. Bakre']"", 'LAWYER': ""['Nikhil Joshi', 'S.N. Mardikar', 'R.N. Badhe', 'Junai Ahmed']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Amrutabai', 'Sunita', 'Anita', 'Ravi', 'Sarita', 'Sharda', 'State', 'Manikrao']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Maharashtra', 'Manik Sitaram Jibhkate', 'Ravindra', 'Manohar', 'Hansraj Maroti Vaidya', 'Vishnu', 'Vivshnath', 'Dilip']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 In The High Court Of Judicature At Bombay Nagpur Bench : Nagpur Criminal Writ Petition No.293 of 2002 1. Smt. Amrutabai widow of Kalya alias Shama Ukey, aged 35 years, occupation - Labourer, resident of Sanjay Nagar, Zopad Patti, Govindpur, Gondia. 2. Ku. Sunita daughter of Shama Ukey, aged 16 years, occupation - Student Vii Std. 3. Ku. Anita daughter of Shama Ukey, aged 14 years, occupation - Student VIIth Std. 4. Ravi son of Shama Ukey, aged 12 years, occupation - Student, VIth Std. 5. Ku. Sarita daughter of Shama Ukey, aged 9 years, occupation - Student IVth Std. 6. Ku. Sharda daughter of Shama Ukey, aged 7½ years, occupation Student IInd Std. All residents of Sanjay Nagar [Zopad Patti], Govindpur, Gondia City. Nos.2 to 6 minors, through guardian no.1 of Nos.2 to 6, Distt. Gondia, Maharashtra. .... Petitioners. Versus 2 1. State of Maharashtra [P.S. Gondia City.]. 2. Manik Sitaram Jibhkate, aged 50 years, Police Sub-Inspector, C/o Gondia City P.S. 3. Ravindra s/o Maharaji Aglave, aged 43 years, Police Constable, Buckle No. 915, C/o Gondia City P.S. 4. Manohar s/o Rajaram Bawankar, aged 45 years, Police Constable, Buckle No. 409, C/o Gondia City P.S. 5. Hansraj Maroti Vaidya, aged 42 years, Police Constable, Buckle No. 1301, C/o Gondia City P.S. 6. Vishnu son of Vithalji Malewar, aged 32 years, Police Constale, Buckle No. 735, C/o Gondia City, P.S. Gondia. 7. Vivshnath s/o Motiram Gosewade, aged 47 years, Head Constable, Buckle No.997, C/o Gondia City Police Station Gondia. 8. Dilip son of Haribhau Dongre, Police Constable, Buckle No. 91, C/o Gondia City Police, Gondia. Nos. 2 to 8 are employees of No.1 and their present address 3 cannot be given as they might be dismissed. However, they are appellants in Criminal Appeal against conviction in Sessions Trial No. 21/96 [State Vs.Manikrao and others] judgment dt: 7-2-1997 by Additional Sessions Judge, Gondia. .... Respondents. ***** Mr. Nikhil Joshi, Adv. [appointed] as Amicus Curiae. Mr. R.S. Nayak, Additional Public Prosecutor for respondent no.1. Mr. S.N. Mardikar, Adv., for respondent no.2. Mr. R.N. Badhe, Adv., for respondent nos. 4,6,7 and 8. Mr. Junai Ahmed, Adv., for respondent Nos. 3 and 5 [absent]. ***** Coram : A.H. Joshi And U.V. Bakre,Jj. Reserved on : 13th June, 2011. Pronounced on : 5th August, 2011. Oral Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay Nagpur Bench : Nagpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['A.H. Joshi', 'U.V. Bakre']"", ""LAWYER"": ""['Nikhil Joshi', 'S.N. Mardikar', 'R.N. Badhe', 'Junai Ahmed']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Amrutabai', 'Sunita', 'Anita', 'Ravi', 'Sarita', 'Sharda', 'State', 'Manikrao']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Maharashtra', 'Manik Sitaram Jibhkate', 'Ravindra', 'Manohar', 'Hansraj Maroti Vaidya', 'Vishnu', 'Vivshnath', 'Dilip']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The Constitution must be interpreted in a reasonable manner.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Constitution must be interpreted in a reasonable manner. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"But Mr. Karuppan did not file his ""Written Submissions"" till the after-noon of 14-12-1994 long after the expiry of the time given by us.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['14-12-1994']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Karuppan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['14-12-1994']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Karuppan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But Mr. Karuppan did not file his ""Written Submissions"" till the after-noon of 14-12-1994 long after the expiry of the time given by us. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['14-12-1994']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Karuppan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Therefore this appeal has no merit and must be dismissed. Second Appeal No. 386 of 1951. 39.,"{""CASE_NUMBER"": ""['Second Appeal No. 386 of 1951']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Second Appeal No. 386 of 1951']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore this appeal has no merit and must be dismissed. Second Appeal No. 386 of 1951. 39. [/INST]
 {""CASE_NUMBER"": ""['Second Appeal No. 386 of 1951']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This appears clearly from the judgments of Lord Atkin (at p. 157; p. 491), Lord Thankerton (at p. 158; p. 493), Lord Macmillan (at p. 159; p. 498) and Lord Wright (at p. 162; p. 505) in The Cristina, (1938) 60 Ll.L.Rep. 147; [1938] A.C. 485.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Atkin', 'Thankerton', 'Macmillan', 'Wright']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['(1938) 60 Ll.L.Rep. 147', '[1938] A.C. 485']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Atkin', 'Thankerton', 'Macmillan', 'Wright']"", 'PETITIONER': '[]', 'PRECEDENT': ""['(1938) 60 Ll.L.Rep. 147', '[1938] A.C. 485']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This appears clearly from the judgments of Lord Atkin (at p. 157; p. 491), Lord Thankerton (at p. 158; p. 493), Lord Macmillan (at p. 159; p. 498) and Lord Wright (at p. 162; p. 505) in The Cristina, (1938) 60 Ll.L.Rep. 147; [1938] A.C. 485. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Atkin', 'Thankerton', 'Macmillan', 'Wright']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['(1938) 60 Ll.L.Rep. 147', '[1938] A.C. 485']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The decision in S.M. DATTA v. STATE OF GUJARAI considered the decision in CH. BHAJANLALs case (5 supra) and the proposition laid down therein are reiterated.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['CH. BHAJANLALs']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['S.M. DATTA v. STATE OF GUJARAI']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['CH. BHAJANLALs']"", 'PETITIONER': '[]', 'PRECEDENT': ""['S.M. DATTA v. STATE OF GUJARAI']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The decision in S.M. DATTA v. STATE OF GUJARAI considered the decision in CH. BHAJANLALs case (5 supra) and the proposition laid down therein are reiterated. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['CH. BHAJANLALs']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['S.M. DATTA v. STATE OF GUJARAI']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: M. L. Sethi Vs. Respondent: R. P. Kapur & Anr. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M. L. Sethi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['R. P. Kapur']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['M. L. Sethi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['R. P. Kapur']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: M. L. Sethi Vs. Respondent: R. P. Kapur & Anr. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M. L. Sethi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['R. P. Kapur']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The petitioners have themselves constructed a huge compound wall towards the land side on their private land and respondent No.3 would be constructing the retaining wall parallel to the land of the petitioners, therefore, there is no question of their deliberately cutting off the private properties of the petitioners from the city.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioners have themselves constructed a huge compound wall towards the land side on their private land and respondent No.3 would be constructing the retaining wall parallel to the land of the petitioners, therefore, there is no question of their deliberately cutting off the private properties of the petitioners from the city. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Both Kiran Bala and Bankim Chandra are Hindus governed by the Davabhaga School of Hindu law.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Kiran Bala', 'Bankim Chandra']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Kiran Bala', 'Bankim Chandra']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Both Kiran Bala and Bankim Chandra are Hindus governed by the Davabhaga School of Hindu law. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Kiran Bala', 'Bankim Chandra']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 R In The High Court Of Karnataka At Bangalore Dated This The 7th Day Of December 2012 Before The Hon'Ble Mr. Justice Aravind Kumar M.F.A.No.7665 Of 2008 (Mv) C/W M.F.A No.491 Of 2009(Mv) Mfa.No.7665 Of 2008 Between: Bangalore Metropolitan Transport Corporation Central Office K.H. Double Road Shanthinagar Bangalore By Its Managing Director ...Appellant (By Sri: D. Vijayakumar, Adv., ) And: 1. Sri. B.N. Nagesh S/O. Sri. Narasimha Shastry Aged About 52 Years 2. Smt. Kamala W/O. Sri B.N. Nagesh Aged About 47 Years 2 Both Are R/O. No.18/450 Neera Ganthi Street Ananthapura Old Town Koteshwara Rao Andhrapradesh .....Respondents (By Sri: R. Chandrashekar, Adv., For M/S Lawyers Net, For R1 & 2) -------- This Mfa Is Filed Under Section 173(1) Of M.V. Act Against The Judgment And Award Dated 28.3.2008 Passed In Mvc No.4185/2006 On The File Of The Vi Addl. Judge, Court Of Small Causes, Member, Mact, Metropolitan Area, Bangalroe (Scch.No.2), Awarding A Compensation Of Rs.9,15,000/- With Interest At 7% P.A. From The Date Of Petition Till Deposit. M.F.A.No.491 Of 2009 Between: 1. B.N. Nagesh S/O. Narasimha Shastry Aged About 53 Years 2. Kamala W/O. B.N. Nagesh Aged About 48 Years Both Are R/O. No.18/450 Neera Ganthi Street Ananthapura Old Town Koteshwara Rao Andhrapradesh ......Appellants 3 (By Sri: R. Chandrashekar, Adv., Form/S. Lawyers Net,) And:- The Managing Director B.M.T.C K.H. Road Shanthinagar Bangalore-560 027. .....Respondent (By Sri: D. Vijaykumar, Adv.,) -------- This Mfa Is Filed Under Section 173(1) Of M.V. Act Against The Judgment And Award Dated 28.3.2008 Passed In Mvc No.4185/2006 On The File Of The Vi Addl. Scj & Member, Mact, Bangalore Parly Allowing The Claim Petition For Compensation And Seeking Enhancement Of Compensation. These MFAs Coming On For Admission This Day, The Court Delivered The Following: Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Aravind Kumar']"", ""LAWYER"": ""['D. Vijayakumar', 'R. Chandrashekar', 'D. Vijaykumar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bangalore Metropolitan Transport Corporation', 'B.N. Nagesh', 'Kamala', 'Andhrapradesh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['B.N. Nagesh', 'Kamala', 'Managing Director B.M.T.C K.H. Road Shanthinagar Bangalore-560 027.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Karnataka At Bangalore']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Aravind Kumar']"", 'LAWYER': ""['D. Vijayakumar', 'R. Chandrashekar', 'D. Vijaykumar']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Bangalore Metropolitan Transport Corporation', 'B.N. Nagesh', 'Kamala', 'Andhrapradesh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['B.N. Nagesh', 'Kamala', 'Managing Director B.M.T.C K.H. Road Shanthinagar Bangalore-560 027.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 R In The High Court Of Karnataka At Bangalore Dated This The 7th Day Of December 2012 Before The Hon'Ble Mr. Justice Aravind Kumar M.F.A.No.7665 Of 2008 (Mv) C/W M.F.A No.491 Of 2009(Mv) Mfa.No.7665 Of 2008 Between: Bangalore Metropolitan Transport Corporation Central Office K.H. Double Road Shanthinagar Bangalore By Its Managing Director ...Appellant (By Sri: D. Vijayakumar, Adv., ) And: 1. Sri. B.N. Nagesh S/O. Sri. Narasimha Shastry Aged About 52 Years 2. Smt. Kamala W/O. Sri B.N. Nagesh Aged About 47 Years 2 Both Are R/O. No.18/450 Neera Ganthi Street Ananthapura Old Town Koteshwara Rao Andhrapradesh .....Respondents (By Sri: R. Chandrashekar, Adv., For M/S Lawyers Net, For R1 & 2) -------- This Mfa Is Filed Under Section 173(1) Of M.V. Act Against The Judgment And Award Dated 28.3.2008 Passed In Mvc No.4185/2006 On The File Of The Vi Addl. Judge, Court Of Small Causes, Member, Mact, Metropolitan Area, Bangalroe (Scch.No.2), Awarding A Compensation Of Rs.9,15,000/- With Interest At 7% P.A. From The Date Of Petition Till Deposit. M.F.A.No.491 Of 2009 Between: 1. B.N. Nagesh S/O. Narasimha Shastry Aged About 53 Years 2. Kamala W/O. B.N. Nagesh Aged About 48 Years Both Are R/O. No.18/450 Neera Ganthi Street Ananthapura Old Town Koteshwara Rao Andhrapradesh ......Appellants 3 (By Sri: R. Chandrashekar, Adv., Form/S. Lawyers Net,) And:- The Managing Director B.M.T.C K.H. Road Shanthinagar Bangalore-560 027. .....Respondent (By Sri: D. Vijaykumar, Adv.,) -------- This Mfa Is Filed Under Section 173(1) Of M.V. Act Against The Judgment And Award Dated 28.3.2008 Passed In Mvc No.4185/2006 On The File Of The Vi Addl. Scj & Member, Mact, Bangalore Parly Allowing The Claim Petition For Compensation And Seeking Enhancement Of Compensation. These MFAs Coming On For Admission This Day, The Court Delivered The Following: Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Karnataka At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Aravind Kumar']"", ""LAWYER"": ""['D. Vijayakumar', 'R. Chandrashekar', 'D. Vijaykumar']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bangalore Metropolitan Transport Corporation', 'B.N. Nagesh', 'Kamala', 'Andhrapradesh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['B.N. Nagesh', 'Kamala', 'Managing Director B.M.T.C K.H. Road Shanthinagar Bangalore-560 027.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The High Court itself has, however, treated the evidence of this witness Arunachalam as not being such as would be safe to be acted upon.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Arunachalam']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Arunachalam']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The High Court itself has, however, treated the evidence of this witness Arunachalam as not being such as would be safe to be acted upon. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Arunachalam']""} </s>"
"The law is settled by the Supreme Court in the case of State of Kerala v. N. M. Thomas, reported in AIR 1976 SC 490: (1976 Lab IC 395), and in the case of Akhil Bharatiya Soshit Karmachari Sangh (supra).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Akhil Bharatiya Soshit Karmachari Sangh']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Kerala v. N. M. Thomas, reported in AIR 1976 SC 490: (1976 Lab IC 395)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Akhil Bharatiya Soshit Karmachari Sangh']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['State of Kerala v. N. M. Thomas, reported in AIR 1976 SC 490: (1976 Lab IC 395)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The law is settled by the Supreme Court in the case of State of Kerala v. N. M. Thomas, reported in AIR 1976 SC 490: (1976 Lab IC 395), and in the case of Akhil Bharatiya Soshit Karmachari Sangh (supra). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Akhil Bharatiya Soshit Karmachari Sangh']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Kerala v. N. M. Thomas, reported in AIR 1976 SC 490: (1976 Lab IC 395)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The administration of all these States was handed over to the Raj-pramukh.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Raj-pramukh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Raj-pramukh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The administration of all these States was handed over to the Raj-pramukh. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Raj-pramukh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We shall now proceed to examine these reasons.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We shall now proceed to examine these reasons. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of The Ix Addl. Small Causes And Addl. Mact., Bangalore, (Scch-7) Dated this, the 13th day of August, 2015. Present : Smt.Indira Mailswamy Chettiyar, B.Com., Ll.B. (Spl.), L.L.M., Ix Addl. Small Causes Judge & Xxxiv Acmm, Court of Small Causes, Member, Mact-7, Bangalore. M.V.C.No.7561/2012 1. Smt. Shobha. H., ..... Petitioners W/o M.S. Shivanna,, Aged about 32 years. 2. M.S. Thejeswini, D/o M.S. Shivanna, Aged about 13 years. 3. M.S. Yashaswini, D/o M.S. Shivanna, Aged about 11 years. 4. Shivalingaiah, S/o Late Byranna, Aged about 60 years. 5. Smt. Marakka, W/o Shivalingaiah, Aged about 55 years. (Since Petitioners No.2 and 3 are minors represented by mother Smt.Shobha.H.) All are residing at: Vidyanagar, Kalya Gate, Ward No.31, Magadi Town, Ramanagar District. ( By Sri. B.S. Manjunath, Adv.,) M.V.C.No.7561/2012 2 (Scch-7) V/s 1. Shriram General Insurance ....Respondents Co. Ltd., No.5, Ii Floor, White House, St. Marks Road, Bangalore - 01. (Insurance Policy No.10003/31/13/153849 Valid from 17.07.2012 to 16.07.2013) 2. Jayaraj, S/o Govindaswamy, No.57-2, Hospet Road, Magadi Town, Ramanagar District. (R.C. Owner of Tata Sumo bearing Registration No.KA-01-B-9220) (R-1 - By Sri. K. Prakash, Adv.,) (R-2 Exparte) Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Court Of The Ix Addl. Small Causes And Addl. Mact., Bangalore, (Scch-7)']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Indira Mailswamy Chettiyar']"", ""LAWYER"": ""['B.S. Manjunath', 'K. Prakash']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Shobha. H.', 'M.S. Thejeswini', 'M.S. Yashaswini', 'Shivalingaiah', 'Marakka']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Shriram General Insurance', 'Jayaraj']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Court Of The Ix Addl. Small Causes And Addl. Mact., Bangalore, (Scch-7)']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Indira Mailswamy Chettiyar']"", 'LAWYER': ""['B.S. Manjunath', 'K. Prakash']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Shobha. H.', 'M.S. Thejeswini', 'M.S. Yashaswini', 'Shivalingaiah', 'Marakka']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Shriram General Insurance', 'Jayaraj']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of The Ix Addl. Small Causes And Addl. Mact., Bangalore, (Scch-7) Dated this, the 13th day of August, 2015. Present : Smt.Indira Mailswamy Chettiyar, B.Com., Ll.B. (Spl.), L.L.M., Ix Addl. Small Causes Judge & Xxxiv Acmm, Court of Small Causes, Member, Mact-7, Bangalore. M.V.C.No.7561/2012 1. Smt. Shobha. H., ..... Petitioners W/o M.S. Shivanna,, Aged about 32 years. 2. M.S. Thejeswini, D/o M.S. Shivanna, Aged about 13 years. 3. M.S. Yashaswini, D/o M.S. Shivanna, Aged about 11 years. 4. Shivalingaiah, S/o Late Byranna, Aged about 60 years. 5. Smt. Marakka, W/o Shivalingaiah, Aged about 55 years. (Since Petitioners No.2 and 3 are minors represented by mother Smt.Shobha.H.) All are residing at: Vidyanagar, Kalya Gate, Ward No.31, Magadi Town, Ramanagar District. ( By Sri. B.S. Manjunath, Adv.,) M.V.C.No.7561/2012 2 (Scch-7) V/s 1. Shriram General Insurance ....Respondents Co. Ltd., No.5, Ii Floor, White House, St. Marks Road, Bangalore - 01. (Insurance Policy No.10003/31/13/153849 Valid from 17.07.2012 to 16.07.2013) 2. Jayaraj, S/o Govindaswamy, No.57-2, Hospet Road, Magadi Town, Ramanagar District. (R.C. Owner of Tata Sumo bearing Registration No.KA-01-B-9220) (R-1 - By Sri. K. Prakash, Adv.,) (R-2 Exparte) Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Court Of The Ix Addl. Small Causes And Addl. Mact., Bangalore, (Scch-7)']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Indira Mailswamy Chettiyar']"", ""LAWYER"": ""['B.S. Manjunath', 'K. Prakash']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Shobha. H.', 'M.S. Thejeswini', 'M.S. Yashaswini', 'Shivalingaiah', 'Marakka']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Shriram General Insurance', 'Jayaraj']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It has been held clearly and categorically by the Supreme Court that the default sentence imposed is only a mode of enforcement of the amount due and it is not punishment in the sense in which the term is ordinarily understood.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It has been held clearly and categorically by the Supreme Court that the default sentence imposed is only a mode of enforcement of the amount due and it is not punishment in the sense in which the term is ordinarily understood. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Ex/D1W2/3 is the copy of the rent receipt issued in favour of Mohd. Arafin, proprietor of M/s Seema Lodge, for the period from 1.6 to 31.6.75.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['31.6.75']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Seema Lodge']"", ""OTHER_PERSON"": ""['Mohd. Arafin']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['31.6.75']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Seema Lodge']"", 'OTHER_PERSON': ""['Mohd. Arafin']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Ex/D1W2/3 is the copy of the rent receipt issued in favour of Mohd. Arafin, proprietor of M/s Seema Lodge, for the period from 1.6 to 31.6.75. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['31.6.75']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Seema Lodge']"", ""OTHER_PERSON"": ""['Mohd. Arafin']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The petitioner was also examined on 28.4.2014 in terms of the judgment of the Hon'ble High Court on 11.01.2013 in MACA NO. 792/2006 titled as Oriental Insurance Co. Ltd v. Ranjit Pandey & Ors.,"{""CASE_NUMBER"": ""['MACA NO. 792/2006']"", ""COURT"": ""[]"", ""DATE"": ""['28.4.2014', '11.01.2013']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Oriental Insurance Co. Ltd v. Ranjit Pandey & Ors']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['MACA NO. 792/2006']"", 'COURT': '[]', 'DATE': ""['28.4.2014', '11.01.2013']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Oriental Insurance Co. Ltd v. Ranjit Pandey & Ors']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioner was also examined on 28.4.2014 in terms of the judgment of the Hon'ble High Court on 11.01.2013 in MACA NO. 792/2006 titled as Oriental Insurance Co. Ltd v. Ranjit Pandey & Ors. [/INST]
 {""CASE_NUMBER"": ""['MACA NO. 792/2006']"", ""COURT"": ""[]"", ""DATE"": ""['28.4.2014', '11.01.2013']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Oriental Insurance Co. Ltd v. Ranjit Pandey & Ors']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"upon grant or extension, petitioner No.3 Ranjan Kumar Ghosh reached the age of 60 years in 1995 but allegedly although he is still working, the had not been paid his salary after July 1996.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ranjan Kumar Ghosh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ranjan Kumar Ghosh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: upon grant or extension, petitioner No.3 Ranjan Kumar Ghosh reached the age of 60 years in 1995 but allegedly although he is still working, the had not been paid his salary after July 1996. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ranjan Kumar Ghosh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Bhagirath Kanoria & Ors. Etc. Vs. Respondent: State Of M.P. & Ors. Etc. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bhagirath Kanoria']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of M.P. & Ors. Etc']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Bhagirath Kanoria']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of M.P. & Ors. Etc']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Bhagirath Kanoria & Ors. Etc. Vs. Respondent: State Of M.P. & Ors. Etc. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bhagirath Kanoria']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of M.P. & Ors. Etc']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In other words it was submitted that opportunity to enter into advantageous relationship with Government is nothing but a privilege, and a denial of a privilege for any reason whatsoever, cannot be attended with civil consequences.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In other words it was submitted that opportunity to enter into advantageous relationship with Government is nothing but a privilege, and a denial of a privilege for any reason whatsoever, cannot be attended with civil consequences. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Syad Akbar Vs. Respondent: State Of Karnataka Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Syad Akbar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Karnataka']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Syad Akbar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Karnataka']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Syad Akbar Vs. Respondent: State Of Karnataka Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Syad Akbar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Karnataka']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The assessee further contended that interest paid was an allowable deduction under Section 36 of the I.T. Act, 1961, being interest paid on capital borrowed for the purpose of business which included the payment of income-tax on the income of the business.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 36']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.T. Act, 1961']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 36']"", 'RESPONDENT': '[]', 'STATUTE': ""['I.T. Act, 1961']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The assessee further contended that interest paid was an allowable deduction under Section 36 of the I.T. Act, 1961, being interest paid on capital borrowed for the purpose of business which included the payment of income-tax on the income of the business. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 36']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.T. Act, 1961']"", ""WITNESS"": ""[]""} </s>"
"Per contra, Mr.Sathiyamohan, learned counsel appearing for the respondent Bank contended that the writ petitioner was prosecuted for offence under Section 420 I.P.C., as he cheated 16 persons by representing to them that he will arrange for securing jobs to them in Saudi Arabia and he had received Rs.1.40 lakhs in all, took those persons to Mumbai and left them stranded there and the petitioner absconded from the place.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Saudi Arabia', 'Mumbai']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sathiyamohan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 420']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Saudi Arabia', 'Mumbai']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sathiyamohan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 420']"", 'RESPONDENT': '[]', 'STATUTE': ""['I.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Per contra, Mr.Sathiyamohan, learned counsel appearing for the respondent Bank contended that the writ petitioner was prosecuted for offence under Section 420 I.P.C., as he cheated 16 persons by representing to them that he will arrange for securing jobs to them in Saudi Arabia and he had received Rs.1.40 lakhs in all, took those persons to Mumbai and left them stranded there and the petitioner absconded from the place. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Saudi Arabia', 'Mumbai']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sathiyamohan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 420']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.P.C.']"", ""WITNESS"": ""[]""} </s>"
"This being the position and negotiations between the parties held at two meetings convened on 14-12-1972 and 20-1-1973 having ended in a fiasco, the Management offered to have the disputes resolved by arbitration but that again was a course not acceptable to the Sabha which, however, accused the Management of flouting the settlement dated the 4th of August , 1972, by not coming to the negotiating table.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['14-12-1972', '20-1-1973', '4th of August , 1972']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['14-12-1972', '20-1-1973', '4th of August , 1972']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This being the position and negotiations between the parties held at two meetings convened on 14-12-1972 and 20-1-1973 having ended in a fiasco, the Management offered to have the disputes resolved by arbitration but that again was a course not acceptable to the Sabha which, however, accused the Management of flouting the settlement dated the 4th of August , 1972, by not coming to the negotiating table. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['14-12-1972', '20-1-1973', '4th of August , 1972']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The Press Commission itself had merely suggested a basic minimum wage for the consideration of the parties concerned but had suggested that so far as the scales of wages were concerned they were to be settled by collective bargaining or by adjudication.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Press Commission itself had merely suggested a basic minimum wage for the consideration of the parties concerned but had suggested that so far as the scales of wages were concerned they were to be settled by collective bargaining or by adjudication. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Hema Sharma Vs. Ajay Kumar & Ors. In The Court Of Sh. Sanjiv Jain : Presiding Officer : Mact South District : Saket Courts : New Delhi In Petition No. : 237/13 1. Hema Sharma W/o Late Sanjay Sharma ..... Wife 2. Master Yashish Sharma S/o Late Sanjay Sharma ..... Son 3. Smt. Rani Sharma ..... Mother Both R/o 292, Shiv Puri, Gurgaon Also at : H. No. 47/9, 1st Floor, Kishan Garh, Vasant Kunj, New Delhi - 70. (The petitioner no.2 being the minor is represented through their mother and natural guardian Smt. Hema Sharma/Petitioner no.1). ..... Petitioners Versus 1. Ajay Kumar S/o Sh. Ganpat Kharwar R/o 897, Sector­5, R K puram, New Delhi ..... Driver cum Owner 2. Icici Lombard General Insurance Co. Ltd. Zenith House, Keshavrao Khayde Marg, Opp. Race Course, Mahalaxmi, Mumbai ..... Insurer ..... Respondents Date of Institution : 26.03.2011 Date of reserving of judgment/order : 06.01.2014 Date of pronouncement : 22.01.2014 Petition No. 237/13 Page No. 1 of 20 Hema Sharma Vs. Ajay Kumar & Ors. J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Mact South District : Saket Courts : New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sanjiv Jain']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Hema Sharma', 'Yashish Sharma', 'Rani Sharma']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ajay Kumar', 'Icici Lombard General Insurance Co. Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Mact South District : Saket Courts : New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Sanjiv Jain']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Hema Sharma', 'Yashish Sharma', 'Rani Sharma']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Ajay Kumar', 'Icici Lombard General Insurance Co. Ltd.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Hema Sharma Vs. Ajay Kumar & Ors. In The Court Of Sh. Sanjiv Jain : Presiding Officer : Mact South District : Saket Courts : New Delhi In Petition No. : 237/13 1. Hema Sharma W/o Late Sanjay Sharma ..... Wife 2. Master Yashish Sharma S/o Late Sanjay Sharma ..... Son 3. Smt. Rani Sharma ..... Mother Both R/o 292, Shiv Puri, Gurgaon Also at : H. No. 47/9, 1st Floor, Kishan Garh, Vasant Kunj, New Delhi - 70. (The petitioner no.2 being the minor is represented through their mother and natural guardian Smt. Hema Sharma/Petitioner no.1). ..... Petitioners Versus 1. Ajay Kumar S/o Sh. Ganpat Kharwar R/o 897, Sector­5, R K puram, New Delhi ..... Driver cum Owner 2. Icici Lombard General Insurance Co. Ltd. Zenith House, Keshavrao Khayde Marg, Opp. Race Course, Mahalaxmi, Mumbai ..... Insurer ..... Respondents Date of Institution : 26.03.2011 Date of reserving of judgment/order : 06.01.2014 Date of pronouncement : 22.01.2014 Petition No. 237/13 Page No. 1 of 20 Hema Sharma Vs. Ajay Kumar & Ors. J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Mact South District : Saket Courts : New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sanjiv Jain']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Hema Sharma', 'Yashish Sharma', 'Rani Sharma']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ajay Kumar', 'Icici Lombard General Insurance Co. Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
(Rohit Arya) Judge ns C.R. No.163/2014 12.07.2017 Parties through their counsel.,"{""CASE_NUMBER"": ""['ns C.R. No.163/2014']"", ""COURT"": ""[]"", ""DATE"": ""['12.07.2017']"", ""GPE"": ""[]"", ""JUDGE"": ""['Rohit Arya']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['ns C.R. No.163/2014']"", 'COURT': '[]', 'DATE': ""['12.07.2017']"", 'GPE': '[]', 'JUDGE': ""['Rohit Arya']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (Rohit Arya) Judge ns C.R. No.163/2014 12.07.2017 Parties through their counsel. [/INST]
 {""CASE_NUMBER"": ""['ns C.R. No.163/2014']"", ""COURT"": ""[]"", ""DATE"": ""['12.07.2017']"", ""GPE"": ""[]"", ""JUDGE"": ""['Rohit Arya']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This is an appeal against the judgment and decree of the Additional District Judge, Koppal, Rai-chur District passed in Appeal No. 4/4 of 1358 Fasli confirming the judgment and decree passed by the Munsiff, Koppal, in O. S. No. 122/1 of 1856F.","{""CASE_NUMBER"": ""['Appeal No. 4/4 of 1358', 'O. S. No. 122/1 of 1856F.']"", ""COURT"": ""['Additional District Judge, Koppal, Rai-chur District']"", ""DATE"": ""[]"", ""GPE"": ""['Koppal']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Appeal No. 4/4 of 1358', 'O. S. No. 122/1 of 1856F.']"", 'COURT': ""['Additional District Judge, Koppal, Rai-chur District']"", 'DATE': '[]', 'GPE': ""['Koppal']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This is an appeal against the judgment and decree of the Additional District Judge, Koppal, Rai-chur District passed in Appeal No. 4/4 of 1358 Fasli confirming the judgment and decree passed by the Munsiff, Koppal, in O. S. No. 122/1 of 1856F. [/INST]
 {""CASE_NUMBER"": ""['Appeal No. 4/4 of 1358', 'O. S. No. 122/1 of 1856F.']"", ""COURT"": ""['Additional District Judge, Koppal, Rai-chur District']"", ""DATE"": ""[]"", ""GPE"": ""['Koppal']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This is an appeal arising out of a suit for ejectment by the defendant against the judgment and decree dated the 28th June, 1979 of the Court of First Additional District Judge, Indore in Civil First Appeal No. 37-A of 1978, whereby it has confirmed the judgment and decree dated 28th July, 1977, of the Court of Third Civil Judge, Class II, Indore in Civil Suit No. 8A of 1972.","{""CASE_NUMBER"": ""['Civil First Appeal No. 37-A of 1978', 'Civil Suit No. 8A of 1972']"", ""COURT"": ""['First Additional District Judge, Indore', 'Court of Third Civil Judge, Class II, Indore']"", ""DATE"": ""['28th June, 1979', '28th July, 1977']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Civil First Appeal No. 37-A of 1978', 'Civil Suit No. 8A of 1972']"", 'COURT': ""['First Additional District Judge, Indore', 'Court of Third Civil Judge, Class II, Indore']"", 'DATE': ""['28th June, 1979', '28th July, 1977']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This is an appeal arising out of a suit for ejectment by the defendant against the judgment and decree dated the 28th June, 1979 of the Court of First Additional District Judge, Indore in Civil First Appeal No. 37-A of 1978, whereby it has confirmed the judgment and decree dated 28th July, 1977, of the Court of Third Civil Judge, Class II, Indore in Civil Suit No. 8A of 1972. [/INST]
 {""CASE_NUMBER"": ""['Civil First Appeal No. 37-A of 1978', 'Civil Suit No. 8A of 1972']"", ""COURT"": ""['First Additional District Judge, Indore', 'Court of Third Civil Judge, Class II, Indore']"", ""DATE"": ""['28th June, 1979', '28th July, 1977']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"I have heard Ld. APP for State and Sh. R.M. Tuffail and Sh. M.C. Dhingra, counsels for all the accused persons and have gone through the material placed on record with evidence adduced. Finding qua offence U/s. 364 read with Section 120B of IPC/U/s. 302 of IPC read with Section 120B of IPC and U/s. 201 of IPC read with Section 120B of IPC:","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['R.M. Tuffail', 'M.C. Dhingra']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 364', 'Section 120B', 's. 302', 's. 201']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['R.M. Tuffail', 'M.C. Dhingra']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['s. 364', 'Section 120B', 's. 302', 's. 201']"", 'RESPONDENT': '[]', 'STATUTE': ""['IPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: I have heard Ld. APP for State and Sh. R.M. Tuffail and Sh. M.C. Dhingra, counsels for all the accused persons and have gone through the material placed on record with evidence adduced. Finding qua offence U/s. 364 read with Section 120B of IPC/U/s. 302 of IPC read with Section 120B of IPC and U/s. 201 of IPC read with Section 120B of IPC: [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['R.M. Tuffail', 'M.C. Dhingra']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 364', 'Section 120B', 's. 302', 's. 201']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""} </s>"
"The facts of the case are that the assessing officer passed the assessment order for the assessment year 90-91 on 16.09.91 and determined the income of the assessee Under Section 115J at Rs. 41,45,574/-.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['16.09.91']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 115J']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['16.09.91']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 115J']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The facts of the case are that the assessing officer passed the assessment order for the assessment year 90-91 on 16.09.91 and determined the income of the assessee Under Section 115J at Rs. 41,45,574/-. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['16.09.91']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 115J']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On completion of other required formalities, investigating agency filed challan under Sections 498 (A), 306 and 201 of the I.P.C. in the Committal Court which in his turn committed the matter to the Court of Sessions, Tikamgarh and eventually the matter was tried by learned trial Judge.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Court of Sessions, Tikamgarh']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 498 (A), 306 and 201']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Court of Sessions, Tikamgarh']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Sections 498 (A), 306 and 201']"", 'RESPONDENT': '[]', 'STATUTE': ""['I.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On completion of other required formalities, investigating agency filed challan under Sections 498 (A), 306 and 201 of the I.P.C. in the Committal Court which in his turn committed the matter to the Court of Sessions, Tikamgarh and eventually the matter was tried by learned trial Judge. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Court of Sessions, Tikamgarh']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 498 (A), 306 and 201']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.P.C.']"", ""WITNESS"": ""[]""} </s>"
This suggestion was rejected because it might become necessary in the national interests to send a competent judge to some part of India in spite of his own inclinations.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This suggestion was rejected because it might become necessary in the national interests to send a competent judge to some part of India in spite of his own inclinations. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"amongst other witnesses. 5. The learned trial Court had framed charge against the accused for committing an offence punishable under section 376 of IPC and under section 57 of the Bombay Children Act vide charge dated 23rd October, 1989 (Exhibit 3).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['23rd October,']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 376', 'section 57']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC', 'Bombay Children Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['23rd October,']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 376', 'section 57']"", 'RESPONDENT': '[]', 'STATUTE': ""['IPC', 'Bombay Children Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: amongst other witnesses. 5. The learned trial Court had framed charge against the accused for committing an offence punishable under section 376 of IPC and under section 57 of the Bombay Children Act vide charge dated 23rd October, 1989 (Exhibit 3). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['23rd October,']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 376', 'section 57']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC', 'Bombay Children Act']"", ""WITNESS"": ""[]""} </s>"
The appellant was the president of the Panchayat Samithi of the first village.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The appellant was the president of the Panchayat Samithi of the first village. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Accordingly, we reverse the order of the Tribunal in both the cases on this point.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Accordingly, we reverse the order of the Tribunal in both the cases on this point. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Ex.PW5/A which is dt 20.06.1972, only the name of the applicant (Sh. Hazura Singh) is mentioned and the address is not mentioned.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['20.06.1972']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Hazura Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['20.06.1972']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Hazura Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Ex.PW5/A which is dt 20.06.1972, only the name of the applicant (Sh. Hazura Singh) is mentioned and the address is not mentioned. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['20.06.1972']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Hazura Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is also found from the evidence of the ocular witnesses that the accused had taken away not only the cycle, but also the weapon used for stabbing the deceased Subramaniam.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Subramaniam']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Subramaniam']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is also found from the evidence of the ocular witnesses that the accused had taken away not only the cycle, but also the weapon used for stabbing the deceased Subramaniam. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Subramaniam']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Thus even a consent by the heirs of the testator during his lifetime in such a case does not sub-,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Thus even a consent by the heirs of the testator during his lifetime in such a case does not sub- [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It appears that one Manu Subedar had entered into an agreement with the Government of India to take on lease certain lands at Marine Lines, Bombay, including composite plot No. 41/42 on Queen's Road Estate.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Bombay']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Government of India']"", ""OTHER_PERSON"": ""['Manu Subedar']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Bombay']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Government of India']"", 'OTHER_PERSON': ""['Manu Subedar']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It appears that one Manu Subedar had entered into an agreement with the Government of India to take on lease certain lands at Marine Lines, Bombay, including composite plot No. 41/42 on Queen's Road Estate. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Bombay']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Government of India']"", ""OTHER_PERSON"": ""['Manu Subedar']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Scindia Steam Navigation Co. Ltd. v. CIT, a Division Bench of the Bombay High Court consisting of Chagla C.J. and Tendolkar J., has considered the question as to the effect of an amendment which came into force after the commencement of the financial year.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Bombay High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Chagla C.J.', 'Tendolkar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Scindia Steam Navigation Co. Ltd. v. CIT']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Bombay High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Chagla C.J.', 'Tendolkar']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Scindia Steam Navigation Co. Ltd. v. CIT']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Scindia Steam Navigation Co. Ltd. v. CIT, a Division Bench of the Bombay High Court consisting of Chagla C.J. and Tendolkar J., has considered the question as to the effect of an amendment which came into force after the commencement of the financial year. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Bombay High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Chagla C.J.', 'Tendolkar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Scindia Steam Navigation Co. Ltd. v. CIT']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
That was why Sen J. in Sreenivasa General Traders v. State of Andhra Pradesh (Supra) took immense pains to explain the observations of Untwalia J. and place them in their proper setting.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sen', 'Untwalia']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sreenivasa General Traders v. State of Andhra Pradesh']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Sen', 'Untwalia']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Sreenivasa General Traders v. State of Andhra Pradesh']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: That was why Sen J. in Sreenivasa General Traders v. State of Andhra Pradesh (Supra) took immense pains to explain the observations of Untwalia J. and place them in their proper setting. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sen', 'Untwalia']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sreenivasa General Traders v. State of Andhra Pradesh']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"... PETITIONER (BY SRI. N P VIVEKMEHTA, ADVOCATE) AND 1. BASAPPA S/O GURAPPA HUNSHIHAL @ HUNSHYAL AGE MAJOR, OCC:AGRIL, R/O MUGAD, TQ & DIST:DHARWAD 2.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['N P VIVEKMEHTA', 'GURAPPA HUNSHIHAL @ HUNSHYAL AGE MAJOR']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['BASAPPA']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['N P VIVEKMEHTA', 'GURAPPA HUNSHIHAL @ HUNSHYAL AGE MAJOR']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['BASAPPA']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: ... PETITIONER (BY SRI. N P VIVEKMEHTA, ADVOCATE) AND 1. BASAPPA S/O GURAPPA HUNSHIHAL @ HUNSHYAL AGE MAJOR, OCC:AGRIL, R/O MUGAD, TQ & DIST:DHARWAD 2. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['N P VIVEKMEHTA', 'GURAPPA HUNSHIHAL @ HUNSHYAL AGE MAJOR']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['BASAPPA']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The fact that the Act has come into force, it does not necessarily follow that the Board referred to in Section 4 of the Act of 2007 (I) has been established.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 4']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 4']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The fact that the Act has come into force, it does not necessarily follow that the Board referred to in Section 4 of the Act of 2007 (I) has been established. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 4']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Section 67: ""Act 8 of 1897 and certain provisions of Act 5 of H89i8 not to apply: (1) The Reformatory Schools Act, 1897 (Central Act No. 8 of 1897) and Section 29B and Section 399 of the Code of Criminal Procedure, 1898 (Central Act No. 5 of 1898).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 67', 'Section 29B', 'Section 399']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Act 8 of 1897', 'Reformatory Schools Act, 1897 (Central Act No. 8 of 1897)', 'Code of Criminal Procedure, 1898 (Central Act No. 5 of 1898)']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 67', 'Section 29B', 'Section 399']"", 'RESPONDENT': '[]', 'STATUTE': ""['Act 8 of 1897', 'Reformatory Schools Act, 1897 (Central Act No. 8 of 1897)', 'Code of Criminal Procedure, 1898 (Central Act No. 5 of 1898)']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Section 67: ""Act 8 of 1897 and certain provisions of Act 5 of H89i8 not to apply: (1) The Reformatory Schools Act, 1897 (Central Act No. 8 of 1897) and Section 29B and Section 399 of the Code of Criminal Procedure, 1898 (Central Act No. 5 of 1898). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 67', 'Section 29B', 'Section 399']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Act 8 of 1897', 'Reformatory Schools Act, 1897 (Central Act No. 8 of 1897)', 'Code of Criminal Procedure, 1898 (Central Act No. 5 of 1898)']"", ""WITNESS"": ""[]""} </s>"
"In the Court of Sh. Vimal Kumar Yadav, Additional Sessions Judge­02, South District, Saket Court, Delhi. Session Case No. 18/2014. In the matter of : State Versus Mahadev @ Chintu, S/o Sh. Jaidev, R/o H. No.6/209 & 210, Dakshinpuri, Delhi. Fir No. : 178/2014. Police Station : Ambedkar Nagar. Under section. : 397/506(Ii) Ipc & 25 of the Arms Act. Date of assignment : 04.07.2014. Reserved for order on : 26.08.2014. Date of decision : 30.08.2014. Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Additional Sessions Judge\\xad02, South District, Saket Court, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Vimal Kumar Yadav']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Mahadev @ Chintu']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Additional Sessions Judge\\xad02, South District, Saket Court, Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Vimal Kumar Yadav']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['State']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Mahadev @ Chintu']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the Court of Sh. Vimal Kumar Yadav, Additional Sessions Judge­02, South District, Saket Court, Delhi. Session Case No. 18/2014. In the matter of : State Versus Mahadev @ Chintu, S/o Sh. Jaidev, R/o H. No.6/209 & 210, Dakshinpuri, Delhi. Fir No. : 178/2014. Police Station : Ambedkar Nagar. Under section. : 397/506(Ii) Ipc & 25 of the Arms Act. Date of assignment : 04.07.2014. Reserved for order on : 26.08.2014. Date of decision : 30.08.2014. Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Additional Sessions Judge\\xad02, South District, Saket Court, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Vimal Kumar Yadav']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Mahadev @ Chintu']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Of course, the Addl.D.G.P. continues to contend that if the petitioners have suffered any damages, the proper forum for them is to approach the civil court or the criminal court where the trial regarding the murder of Balakrishnan is pending and not to invoke the writ jurisdiction of this court for compensation.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Balakrishnan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Balakrishnan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Of course, the Addl.D.G.P. continues to contend that if the petitioners have suffered any damages, the proper forum for them is to approach the civil court or the criminal court where the trial regarding the murder of Balakrishnan is pending and not to invoke the writ jurisdiction of this court for compensation. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Balakrishnan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It appears that the appellants Raha as also Padmavati Shastri could have got heavier compensation from the Insur- ance Companies, but unfortunately the Motor Vehicles Act has taken a very narrow view by limiting the liability of the Insurance Companies under s. 95 (2) (d) to Rs. 2,000/- only in case of a third party.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Raha', 'Padmavati Shastri']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 95 (2) (d)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Motor Vehicles Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Raha', 'Padmavati Shastri']"", 'PRECEDENT': '[]', 'PROVISION': ""['s. 95 (2) (d)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Motor Vehicles Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It appears that the appellants Raha as also Padmavati Shastri could have got heavier compensation from the Insur- ance Companies, but unfortunately the Motor Vehicles Act has taken a very narrow view by limiting the liability of the Insurance Companies under s. 95 (2) (d) to Rs. 2,000/- only in case of a third party. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Raha', 'Padmavati Shastri']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 95 (2) (d)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Motor Vehicles Act']"", ""WITNESS"": ""[]""} </s>"
"The allegations made in the plaint are denied specifically that any amount, much less an amount of Rs. 20,24,000/- is due on account of principal and interest.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The allegations made in the plaint are denied specifically that any amount, much less an amount of Rs. 20,24,000/- is due on account of principal and interest. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Sh. Ashok Kumar, Mm­07, South East, Saket Courts, New Delhi Cc No. 349/2/14 U/S 138 Ni Act Mr. Prakash Chand Nimboria S/o Sh. Hukam Chand, R/o Vpo­ Smalaka, New Delhi. .......................Complainant Versus Mr. Rahimuddin Proprietor of R.K. Meet Shop, At Rz­3/23, Shahnagar, Manglapuri, Palam, New Delhi­110045. .............................. Accused Offence Complaint off or proved. : Section 138 of Negotiable Instrument Act. Plea of accused : Pleaded not guilty Date of Institution : 19.02.2003 Date of Reserving order : 02.05.2014 Final order : Convicted Date of pronouncement : 26.05.2014 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Mm\\xad07, South East, Saket Courts, New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ashok Kumar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Prakash Chand Nimboria']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Rahimuddin']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Mm\\xad07, South East, Saket Courts, New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ashok Kumar']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Prakash Chand Nimboria']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Rahimuddin']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Sh. Ashok Kumar, Mm­07, South East, Saket Courts, New Delhi Cc No. 349/2/14 U/S 138 Ni Act Mr. Prakash Chand Nimboria S/o Sh. Hukam Chand, R/o Vpo­ Smalaka, New Delhi. .......................Complainant Versus Mr. Rahimuddin Proprietor of R.K. Meet Shop, At Rz­3/23, Shahnagar, Manglapuri, Palam, New Delhi­110045. .............................. Accused Offence Complaint off or proved. : Section 138 of Negotiable Instrument Act. Plea of accused : Pleaded not guilty Date of Institution : 19.02.2003 Date of Reserving order : 02.05.2014 Final order : Convicted Date of pronouncement : 26.05.2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Mm\\xad07, South East, Saket Courts, New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ashok Kumar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Prakash Chand Nimboria']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Rahimuddin']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The revenue being aggrieved by this order preferred Special Leave Petition (Civil) No.19663/2010 before the Hon'ble Apex Court and on 21.02.2012 it came to be disposed of by following order: ""In the Special Leave Petition, no reference was made to pending Writ Appeal No.2458 of 2010 filed by the assessee.","{""CASE_NUMBER"": ""['Special Leave Petition (Civil) No.19663/2010', 'Writ Appeal No.2458 of 2010']"", ""COURT"": ""['Apex Court']"", ""DATE"": ""['21.02.2012']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Special Leave Petition (Civil) No.19663/2010', 'Writ Appeal No.2458 of 2010']"", 'COURT': ""['Apex Court']"", 'DATE': ""['21.02.2012']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The revenue being aggrieved by this order preferred Special Leave Petition (Civil) No.19663/2010 before the Hon'ble Apex Court and on 21.02.2012 it came to be disposed of by following order: ""In the Special Leave Petition, no reference was made to pending Writ Appeal No.2458 of 2010 filed by the assessee. [/INST]
 {""CASE_NUMBER"": ""['Special Leave Petition (Civil) No.19663/2010', 'Writ Appeal No.2458 of 2010']"", ""COURT"": ""['Apex Court']"", ""DATE"": ""['21.02.2012']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"60- A .Penalty for use of place for commission of an offence respecting Cocaine. 60- B Security for abstaining from Cocaine offences. 63. Penalty for possession of intoxicant unlawfully imported, etc.-","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 60- A .Penalty for use of place for commission of an offence respecting Cocaine. 60- B Security for abstaining from Cocaine offences. 63. Penalty for possession of intoxicant unlawfully imported, etc.- [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The Hon'Ble Sri Justice A.V.Sesha Sai Civil Revision Petition No.5349 of 2013 19-06-2014 Matta @ Palina Bhavani and another.Petitioners Matta Tulasi Rao and 3 others. Respondents Counsel for the Petitioners: Sri Aravala Rama Rao Counsel for Respondent No.1: Sri K.S.Gopalakrishnan Counsel for Respondent Nos.2 to 4: Sri K.B.Ramanna Dora <Gist : >Head Note: ? Cases referred: 1. 2010 (6) Alt 812 2. 2010 (4) Alt 790 3. 2013 (5) Alt 209 4. (2005) 6 Scc 733 5. 2010 (5) Ald 24 (Sc) The Honble Sri Justice A.V.Sesha Sai Civil Revision Petition No.5349 Of 2013 Order,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['A.V.Sesha Sai']"", ""LAWYER"": ""['Aravala Rama Rao', 'K.S.Gopalakrishnan', 'K.B.Ramanna Dora']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Matta @ Palina Bhavani']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Matta Tulasi Rao']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['A.V.Sesha Sai']"", 'LAWYER': ""['Aravala Rama Rao', 'K.S.Gopalakrishnan', 'K.B.Ramanna Dora']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Matta @ Palina Bhavani']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Matta Tulasi Rao']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Hon'Ble Sri Justice A.V.Sesha Sai Civil Revision Petition No.5349 of 2013 19-06-2014 Matta @ Palina Bhavani and another.Petitioners Matta Tulasi Rao and 3 others. Respondents Counsel for the Petitioners: Sri Aravala Rama Rao Counsel for Respondent No.1: Sri K.S.Gopalakrishnan Counsel for Respondent Nos.2 to 4: Sri K.B.Ramanna Dora <Gist : >Head Note: ? Cases referred: 1. 2010 (6) Alt 812 2. 2010 (4) Alt 790 3. 2013 (5) Alt 209 4. (2005) 6 Scc 733 5. 2010 (5) Ald 24 (Sc) The Honble Sri Justice A.V.Sesha Sai Civil Revision Petition No.5349 Of 2013 Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['A.V.Sesha Sai']"", ""LAWYER"": ""['Aravala Rama Rao', 'K.S.Gopalakrishnan', 'K.B.Ramanna Dora']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Matta @ Palina Bhavani']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Matta Tulasi Rao']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In' respect of the Mahakoshal officers shown from serial No. 59 onwards it is seen that no formal orders were issued by the Madhya Pradesh Government prior to 31st October, 1956 fixing the rank of each officers.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['31st October, 1956']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Madhya Pradesh Government']"", ""OTHER_PERSON"": ""['Mahakoshal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['31st October, 1956']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Madhya Pradesh Government']"", 'OTHER_PERSON': ""['Mahakoshal']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In' respect of the Mahakoshal officers shown from serial No. 59 onwards it is seen that no formal orders were issued by the Madhya Pradesh Government prior to 31st October, 1956 fixing the rank of each officers. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['31st October, 1956']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Madhya Pradesh Government']"", ""OTHER_PERSON"": ""['Mahakoshal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The next question which is required to be examined is whether the I.D. Act is a complete code in itself which provides for the remedy of enforcement of execution of awards passed by the Labour Courts and the Industrial Tribunal or not.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.D. Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['I.D. Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The next question which is required to be examined is whether the I.D. Act is a complete code in itself which provides for the remedy of enforcement of execution of awards passed by the Labour Courts and the Industrial Tribunal or not. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['I.D. Act']"", ""WITNESS"": ""[]""} </s>"
"On the other hand, the State Government is only discharging a public duty when it takes action under Section 3 of the Minimum Wages Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 3']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Minimum Wages Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 3']"", 'RESPONDENT': '[]', 'STATUTE': ""['Minimum Wages Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On the other hand, the State Government is only discharging a public duty when it takes action under Section 3 of the Minimum Wages Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 3']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Minimum Wages Act']"", ""WITNESS"": ""[]""} </s>"
Art. 225 provides that subject to the provisions of the. Constitution the jurisdiction of the pre-existing High Courts as also the powers of the Judges thereof including the power to make rules regulating the procedure for the exercise of the jurisdiction and powers of the High Court by a single Judge or by a Bench Of two or more Judges,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Art. 225']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Art. 225']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Art. 225 provides that subject to the provisions of the. Constitution the jurisdiction of the pre-existing High Courts as also the powers of the Judges thereof including the power to make rules regulating the procedure for the exercise of the jurisdiction and powers of the High Court by a single Judge or by a Bench Of two or more Judges [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Art. 225']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
"[3] After notice, the Respondents has filed the return in which it is stated that due to cancellation of transfer of Respondent No.4 - Bhanupratap Tiwari, the petitioner has become surplus at Indore, therefore, vide order dated 15.06.2016 his salary is being drawn from the vacant post of Assistant Grade-III from Government College, Badnawar.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['15.06.2016']"", ""GPE"": ""['Indore', 'Badnawar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Bhanupratap Tiwari']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['15.06.2016']"", 'GPE': ""['Indore', 'Badnawar']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Bhanupratap Tiwari']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: [3] After notice, the Respondents has filed the return in which it is stated that due to cancellation of transfer of Respondent No.4 - Bhanupratap Tiwari, the petitioner has become surplus at Indore, therefore, vide order dated 15.06.2016 his salary is being drawn from the vacant post of Assistant Grade-III from Government College, Badnawar. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['15.06.2016']"", ""GPE"": ""['Indore', 'Badnawar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Bhanupratap Tiwari']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Mr. Justice Chaturvedi, before whom this application came up for hearing held that the application under (1)(1952) 1 L.L.J. 195. cl. 5(a) was maintainable and the Appellate Tribunal had erred in holding otherwise.","{""CASE_NUMBER"": ""['(1)(1952) 1 L.L.J. 195']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Chaturvedi']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['cl. 5(a)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['(1)(1952) 1 L.L.J. 195']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Chaturvedi']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['cl. 5(a)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mr. Justice Chaturvedi, before whom this application came up for hearing held that the application under (1)(1952) 1 L.L.J. 195. cl. 5(a) was maintainable and the Appellate Tribunal had erred in holding otherwise. [/INST]
 {""CASE_NUMBER"": ""['(1)(1952) 1 L.L.J. 195']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Chaturvedi']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['cl. 5(a)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The decision of the Privy Council in Sir Sunder Singh Majithia v. Commissioner of Income-tax, C. P. and U. P. (1) was also referred to by the Revenue in this context.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sir Sunder Singh Majithia v. Commissioner of Income-tax, C. P. and U. P. (1)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Sir Sunder Singh Majithia v. Commissioner of Income-tax, C. P. and U. P. (1)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The decision of the Privy Council in Sir Sunder Singh Majithia v. Commissioner of Income-tax, C. P. and U. P. (1) was also referred to by the Revenue in this context. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Sir Sunder Singh Majithia v. Commissioner of Income-tax, C. P. and U. P. (1)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In TNPID Act, the competent authority has been assigned specific role to be performed.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['TNPID Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['TNPID Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In TNPID Act, the competent authority has been assigned specific role to be performed. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['TNPID Act']"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Shri Sushil Anuj Tyagi, Metropolitan Magistrate: Rohini Courts, Delhi Cc No. : 276/1/06 Unique Id No. : 02404R0445982006 M/S. Popular Jewelery Mart (Huf) .........Complainant Vs. Seema Singh W/o Mahinder Singh R/o House no. 7, Sukh Vihar, Parwana Road, Delhi ..........Accused Date of institution of case : 10.04.2006 Date of reserving the judgment : Not reserved Date of pronouncement of judgment : 03.02.2014 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Metropolitan Magistrate: Rohini Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sushil Anuj Tyagi']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Popular Jewelery Mart']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Seema Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Metropolitan Magistrate: Rohini Courts, Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Sushil Anuj Tyagi']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Popular Jewelery Mart']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Seema Singh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Shri Sushil Anuj Tyagi, Metropolitan Magistrate: Rohini Courts, Delhi Cc No. : 276/1/06 Unique Id No. : 02404R0445982006 M/S. Popular Jewelery Mart (Huf) .........Complainant Vs. Seema Singh W/o Mahinder Singh R/o House no. 7, Sukh Vihar, Parwana Road, Delhi ..........Accused Date of institution of case : 10.04.2006 Date of reserving the judgment : Not reserved Date of pronouncement of judgment : 03.02.2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Metropolitan Magistrate: Rohini Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Sushil Anuj Tyagi']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Popular Jewelery Mart']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Seema Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As was rightly done by Rajasthan High Court in this case at the instance of the directors of the company, wisdom lies to keep the hands back and relegate the accused to pursue the remedy under the Code.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Rajasthan High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Rajasthan High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As was rightly done by Rajasthan High Court in this case at the instance of the directors of the company, wisdom lies to keep the hands back and relegate the accused to pursue the remedy under the Code. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Rajasthan High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Article 362 does not prohibit the acquisition of properties declared as private properties by the covenant of merger and does not guarantee their perpetual existence.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 362']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 362']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Article 362 does not prohibit the acquisition of properties declared as private properties by the covenant of merger and does not guarantee their perpetual existence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 362']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the instant case, in their statements, under Section 313 Cr.P.C., the accused/appellants, took up the plea, only of false implication.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 313']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 313']"", 'RESPONDENT': '[]', 'STATUTE': ""['Cr.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the instant case, in their statements, under Section 313 Cr.P.C., the accused/appellants, took up the plea, only of false implication. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 313']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr.P.C.']"", ""WITNESS"": ""[]""} </s>"
"One was whether the respondent No. 1, the Renusagar Power Co. Ltd., was 'own' source of generation of electricity for respondent No. 2, the Hindalco, under section 3(1)(c) of the Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 3(1)(c)']"", ""RESPONDENT"": ""['Renusagar Power Co. Ltd.', 'Hindalco']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['section 3(1)(c)']"", 'RESPONDENT': ""['Renusagar Power Co. Ltd.', 'Hindalco']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: One was whether the respondent No. 1, the Renusagar Power Co. Ltd., was 'own' source of generation of electricity for respondent No. 2, the Hindalco, under section 3(1)(c) of the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['section 3(1)(c)']"", ""RESPONDENT"": ""['Renusagar Power Co. Ltd.', 'Hindalco']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The seals of two parcels from the specimen seal impression on Exh. 15 were tallied and the Assistant Chemical Analyser Shri Vivek R. Dhole (P.W. 1) took notes on paper (Exh. 16) and carried out analysis on 8-10-1991 and found that heroin was present in the samples and the samples were containing 40-60% of heroin.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['8-10-1991']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Vivek R. Dhole']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['8-10-1991']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Vivek R. Dhole']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The seals of two parcels from the specimen seal impression on Exh. 15 were tallied and the Assistant Chemical Analyser Shri Vivek R. Dhole (P.W. 1) took notes on paper (Exh. 16) and carried out analysis on 8-10-1991 and found that heroin was present in the samples and the samples were containing 40-60% of heroin. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['8-10-1991']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Vivek R. Dhole']""} </s>"
Case No.: Appeal (crl.) 129 of 2003 Petitioner: Ajay Mitra Respondent: State of M.P. & Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ajay Mitra']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of M.P.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ajay Mitra']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of M.P.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (crl.) 129 of 2003 Petitioner: Ajay Mitra Respondent: State of M.P. & Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ajay Mitra']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of M.P.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Every consent involves a submission but the converse does now follow and a mere act of submission does not involve consent,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Every consent involves a submission but the converse does now follow and a mere act of submission does not involve consent [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Our learned brother Chinnappa Reddy, J,(as he then was)","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Chinnappa Reddy']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Chinnappa Reddy']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Our learned brother Chinnappa Reddy, J,(as he then was) [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Chinnappa Reddy']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The truck, it was stated, was being driven at a high speed in a rash and negligent manner, by respondent No.1, Shamsher Singh (now represented by his LRs).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Shamsher Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Shamsher Singh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The truck, it was stated, was being driven at a high speed in a rash and negligent manner, by respondent No.1, Shamsher Singh (now represented by his LRs). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Shamsher Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Nagappa Dondiba Kalal V. State of Karnataka [AIR 1980 SC 1753], it was held that it was for the prosecution to prove its case affirmatively and it can not gain any strength from the conduct of the accused in remaining silent.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Nagappa Dondiba Kalal V. State of Karnataka [AIR 1980 SC 1753]']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Nagappa Dondiba Kalal V. State of Karnataka [AIR 1980 SC 1753]']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Nagappa Dondiba Kalal V. State of Karnataka [AIR 1980 SC 1753], it was held that it was for the prosecution to prove its case affirmatively and it can not gain any strength from the conduct of the accused in remaining silent. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Nagappa Dondiba Kalal V. State of Karnataka [AIR 1980 SC 1753]']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
But it may be assumed that the order was passed on the 29th.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But it may be assumed that the order was passed on the 29th. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Shri P.S. Teji : District & Sessions Judge (East), Karkardooma Courts, Delhi Sc No.13/2011 Unique Case Id No.02402R0045182011 Fir No.150/2010 Police Station Crime Branch Under Section 186/353/307 Ipc & U/s 25/27/54/59 Arms Act State Versus Sandeep Chaudhary S/o Sh. Jayant Singh R/o Village Khairpur, Ps B.B. Nagar, District Bulandshahar, U.P. Date of Institution : 21.04.2011 Date of judgment reserved : 28.03.2014 Date of judgment : 11.04.2014 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['District & Sessions Judge (East), Karkardooma Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['P.S. Teji', 'Sandeep Chaudhary']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['District & Sessions Judge (East), Karkardooma Courts, Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['State']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['P.S. Teji', 'Sandeep Chaudhary']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Shri P.S. Teji : District & Sessions Judge (East), Karkardooma Courts, Delhi Sc No.13/2011 Unique Case Id No.02402R0045182011 Fir No.150/2010 Police Station Crime Branch Under Section 186/353/307 Ipc & U/s 25/27/54/59 Arms Act State Versus Sandeep Chaudhary S/o Sh. Jayant Singh R/o Village Khairpur, Ps B.B. Nagar, District Bulandshahar, U.P. Date of Institution : 21.04.2011 Date of judgment reserved : 28.03.2014 Date of judgment : 11.04.2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['District & Sessions Judge (East), Karkardooma Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['P.S. Teji', 'Sandeep Chaudhary']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The definition of 'appropriate planning authority' is defined under Section 2(3) of the Tamil Nadu Town and Country Planning Act, 1971, as under: ""Section 2 (3).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 2(3)', 'Section 2 (3)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Tamil Nadu Town and Country Planning Act, 1971']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 2(3)', 'Section 2 (3)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Tamil Nadu Town and Country Planning Act, 1971']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The definition of 'appropriate planning authority' is defined under Section 2(3) of the Tamil Nadu Town and Country Planning Act, 1971, as under: ""Section 2 (3). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 2(3)', 'Section 2 (3)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Tamil Nadu Town and Country Planning Act, 1971']"", ""WITNESS"": ""[]""} </s>"
"Undoubtedly, from the very nature of the proceedings under Chapter XX-C of the Income-tax Act, the appropriate authority proceeds to act under that Chapter only after coming to a conclusion that it was a fit case for purchase of the property on account of 'undervaluation' of the property, implying thereby an effort on the part of the transferor to conceal the true value of the property to 'evade tax'.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Chapter XX-C']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Income-tax Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Chapter XX-C']"", 'RESPONDENT': '[]', 'STATUTE': ""['Income-tax Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Undoubtedly, from the very nature of the proceedings under Chapter XX-C of the Income-tax Act, the appropriate authority proceeds to act under that Chapter only after coming to a conclusion that it was a fit case for purchase of the property on account of 'undervaluation' of the property, implying thereby an effort on the part of the transferor to conceal the true value of the property to 'evade tax'. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Chapter XX-C']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Income-tax Act']"", ""WITNESS"": ""[]""} </s>"
"In the case of National Insurance Co. Ltd. v. Kusum Rai and Others, (2006) 4 SCC 250, the respondent was the owner of a jeep which was admittedly used as a taxi and thus a commercial vehicle.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['National Insurance Co. Ltd. v. Kusum Rai and Others, (2006) 4 SCC 250']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['National Insurance Co. Ltd. v. Kusum Rai and Others, (2006) 4 SCC 250']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the case of National Insurance Co. Ltd. v. Kusum Rai and Others, (2006) 4 SCC 250, the respondent was the owner of a jeep which was admittedly used as a taxi and thus a commercial vehicle. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['National Insurance Co. Ltd. v. Kusum Rai and Others, (2006) 4 SCC 250']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This narrower class, as indicated by the language of Section 34(1A) of the Act, consisted of assessees who had earned income during the war period and who had evaded payment of tax on incomes of one lakh of rupees or more, and the purpose of introducing this provision was to subject their escaped income to tax.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 34(1A)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 34(1A)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This narrower class, as indicated by the language of Section 34(1A) of the Act, consisted of assessees who had earned income during the war period and who had evaded payment of tax on incomes of one lakh of rupees or more, and the purpose of introducing this provision was to subject their escaped income to tax. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 34(1A)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Petitioner: Commissioner Of Income-Tax, Gujarat Vs. Respondent: Ashokbhai Chimanbhai Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Commissioner Of Income-Tax, Gujarat']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ashokbhai Chimanbhai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Commissioner Of Income-Tax, Gujarat']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Ashokbhai Chimanbhai']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Commissioner Of Income-Tax, Gujarat Vs. Respondent: Ashokbhai Chimanbhai Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Commissioner Of Income-Tax, Gujarat']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ashokbhai Chimanbhai']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It was admitted on behalf of Opposite Party No. 1 Jitendra, that this complaint was justified and that the whole of Dag No. 772 was not the disputed property, as stated in the order of 22nd February 1951.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22nd February 1951']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['22nd February 1951']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was admitted on behalf of Opposite Party No. 1 Jitendra, that this complaint was justified and that the whole of Dag No. 772 was not the disputed property, as stated in the order of 22nd February 1951. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22nd February 1951']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Therefore, when the Selection Committee took into consideration the requisite qualifications as on the date of selection","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore, when the Selection Committee took into consideration the requisite qualifications as on the date of selection [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It also appears from paragraph 4.6 of Chapter IV of Part III of the report of the Fourth Central Pay Commission that the Commission could not undertake a detailed study of the job contents and different functions in the Supreme Court.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Fourth Central Pay Commission']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Fourth Central Pay Commission']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It also appears from paragraph 4.6 of Chapter IV of Part III of the report of the Fourth Central Pay Commission that the Commission could not undertake a detailed study of the job contents and different functions in the Supreme Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Fourth Central Pay Commission']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Supreme Court then further observed as follows (page 427) : ""The word 'manufacture' said Abbott, C.J., in R. v. Wheeler, (1819) 2B & Ald. 345 (349), cited in Stroud's Judicial Dictionary (3rd ed.) Vol. 3, p. 1734.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Abbott']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Stroud']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Abbott']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Stroud']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Supreme Court then further observed as follows (page 427) : ""The word 'manufacture' said Abbott, C.J., in R. v. Wheeler, (1819) 2B & Ald. 345 (349), cited in Stroud's Judicial Dictionary (3rd ed.) Vol. 3, p. 1734. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Abbott']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Stroud']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The power of registration under Section 11 of the Act has undoubtedly been delegated to the Assistant Registrar in the notification of the 12th October, 1963.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['12th October, 1963']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 11']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['12th October, 1963']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 11']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The power of registration under Section 11 of the Act has undoubtedly been delegated to the Assistant Registrar in the notification of the 12th October, 1963. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['12th October, 1963']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 11']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Actual admissions by medical colleges in Intake fixed by the St. Govt. in 93-94 94-95 95-96 93-94 94-95 95-96 1. ADI-CHUNCHANAGIR1 1NST. OF MED. SC. 2. AL-AMEEN MED. COLL. 3. BANGALORE MED. COLL. 4. DR. B.R. AMBEDKAR INST.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['B.R. AMBEDKAR']"", ""PETITIONER"": ""['ADI-CHUNCHANAGIR1', 'AL-AMEEN MED. COLL']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['BANGALORE MED. COLL']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['B.R. AMBEDKAR']"", 'PETITIONER': ""['ADI-CHUNCHANAGIR1', 'AL-AMEEN MED. COLL']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['BANGALORE MED. COLL']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Actual admissions by medical colleges in Intake fixed by the St. Govt. in 93-94 94-95 95-96 93-94 94-95 95-96 1. ADI-CHUNCHANAGIR1 1NST. OF MED. SC. 2. AL-AMEEN MED. COLL. 3. BANGALORE MED. COLL. 4. DR. B.R. AMBEDKAR INST. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['B.R. AMBEDKAR']"", ""PETITIONER"": ""['ADI-CHUNCHANAGIR1', 'AL-AMEEN MED. COLL']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['BANGALORE MED. COLL']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"He refers to a Full Bench decision of the Supreme Court in Rajvi Amar Singh v. State of Rajasthan, , wherein the following pertinent observations occur in para 16 of the judgment at p. 230.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Rajvi Amar Singh v. State of Rajasthan']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Rajvi Amar Singh v. State of Rajasthan']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He refers to a Full Bench decision of the Supreme Court in Rajvi Amar Singh v. State of Rajasthan, , wherein the following pertinent observations occur in para 16 of the judgment at p. 230. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Rajvi Amar Singh v. State of Rajasthan']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Under Order XXXIX Rule 1 CPC, the Civil Court has got jurisdiction to grant an ex parte interim injunction order when it comes to the conclusion that the plaintiff made out prima facie case, balance of convenience and the irreparable injury, which cannot be compensated in terms of money, if the interim injunction is not granted.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Order XXXIX Rule 1']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Order XXXIX Rule 1']"", 'RESPONDENT': '[]', 'STATUTE': ""['CPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Under Order XXXIX Rule 1 CPC, the Civil Court has got jurisdiction to grant an ex parte interim injunction order when it comes to the conclusion that the plaintiff made out prima facie case, balance of convenience and the irreparable injury, which cannot be compensated in terms of money, if the interim injunction is not granted. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Order XXXIX Rule 1']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""} </s>"
"both drawn on Punjab National Bank, Udyog Vihar, Phase­I, Gurgaon, Haryana and which are subject matter of complaint bearing CC No. 2495/1 were returned back unpaid with the remarks ""Exceeds arrangement"".","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Udyog Vihar', 'Phase\\xadI', 'Gurgaon', 'Haryana']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Punjab National Bank']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Udyog Vihar', 'Phase\\xadI', 'Gurgaon', 'Haryana']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Punjab National Bank']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: both drawn on Punjab National Bank, Udyog Vihar, Phase­I, Gurgaon, Haryana and which are subject matter of complaint bearing CC No. 2495/1 were returned back unpaid with the remarks ""Exceeds arrangement"". [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Udyog Vihar', 'Phase\\xadI', 'Gurgaon', 'Haryana']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Punjab National Bank']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"He deposed that Ramesh deceased and appellant Rajender were residing together in a quarter and on 15.10.2006, he started watching television in a room in Commando Complex, Newal and Ramesh was lying on the cot and Azad Constable came there, who was also on duty.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['15.10.2006']"", ""GPE"": ""['Newal']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ramesh']"", ""PETITIONER"": ""['Rajender']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['15.10.2006']"", 'GPE': ""['Newal']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ramesh']"", 'PETITIONER': ""['Rajender']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He deposed that Ramesh deceased and appellant Rajender were residing together in a quarter and on 15.10.2006, he started watching television in a room in Commando Complex, Newal and Ramesh was lying on the cot and Azad Constable came there, who was also on duty. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['15.10.2006']"", ""GPE"": ""['Newal']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ramesh']"", ""PETITIONER"": ""['Rajender']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The intention of the Act was to cover, as far as possible, the entire field.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The intention of the Act was to cover, as far as possible, the entire field. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Inasmuch as the value of the contract is very high and a contractor is not normally expected to be possessed of such huge funds to carry out the work with his own funds, the contract provides for the Corporation advancing certain amount to the contractor, for which he has to furnish a bank-guarantee.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Inasmuch as the value of the contract is very high and a contractor is not normally expected to be possessed of such huge funds to carry out the work with his own funds, the contract provides for the Corporation advancing certain amount to the contractor, for which he has to furnish a bank-guarantee. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Sher Singh, Sub Inspector, was examined as DW4, who stated that on 05.05.89, he and the accused were going to attend the meeting of Joint Registrar, at Abohar, and when they reached near IFFCO Centre, Abohar, at about 9.30 AM, Jagtar Singh, Secretary, met the accused, and asked him to sign some papers, which Jagtar Singh, had shown to him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['05.05.89']"", ""GPE"": ""['Abohar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Jagtar Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Sher Singh']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['05.05.89']"", 'GPE': ""['Abohar']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Jagtar Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Sher Singh']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Sher Singh, Sub Inspector, was examined as DW4, who stated that on 05.05.89, he and the accused were going to attend the meeting of Joint Registrar, at Abohar, and when they reached near IFFCO Centre, Abohar, at about 9.30 AM, Jagtar Singh, Secretary, met the accused, and asked him to sign some papers, which Jagtar Singh, had shown to him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['05.05.89']"", ""GPE"": ""['Abohar']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Jagtar Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Sher Singh']""} </s>"
"The accused and Inspector Rai Singh Khatri proceeded to Canara Bank, G.B.Road, Gaya and the Manager of the Branch Shri Vidhu Bhushan Thakur handed over a statement of account Ex.PW-18/A in the name of Jyoti Industries.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Gaya']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Canara Bank', 'Jyoti Industries']"", ""OTHER_PERSON"": ""['Rai Singh Khatri', 'Vidhu Bhushan Thakur']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Gaya']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Canara Bank', 'Jyoti Industries']"", 'OTHER_PERSON': ""['Rai Singh Khatri', 'Vidhu Bhushan Thakur']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The accused and Inspector Rai Singh Khatri proceeded to Canara Bank, G.B.Road, Gaya and the Manager of the Branch Shri Vidhu Bhushan Thakur handed over a statement of account Ex.PW-18/A in the name of Jyoti Industries. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Gaya']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Canara Bank', 'Jyoti Industries']"", ""OTHER_PERSON"": ""['Rai Singh Khatri', 'Vidhu Bhushan Thakur']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Cases of realisation of investments consisting Of purchase and resale, though profitable, are clearly outside the doma- in of adventures in the nature of trade.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Cases of realisation of investments consisting Of purchase and resale, though profitable, are clearly outside the doma- in of adventures in the nature of trade. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"After his tenure was A..lo've'_r, ""Che defected to the Congress-I party and,'co'nt§ir§ueci'V..toLbe the Chairman of the Mandal help of Congress- I were members of Janatadal party.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Congress-I party', 'Janatadal party']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Congress-I party', 'Janatadal party']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: After his tenure was A..lo've'_r, ""Che defected to the Congress-I party and,'co'nt§ir§ueci'V..toLbe the Chairman of the Mandal help of Congress- I were members of Janatadal party. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Congress-I party', 'Janatadal party']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Regarding the recovery of the lantern, from the room of the accused, it is said that there was nothing unusual in it.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Regarding the recovery of the lantern, from the room of the accused, it is said that there was nothing unusual in it. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It is also admitted position before us that 1960 Act has been enacted by the Legislature of the State of Maharashtra in exercise of its power under Entry 32 List II, which reads as under:-- 32. Incorporation, regulation and winding up of corporation, other than those specified in List I, and universities; unincorporated trading, literacy, scientific, religious and other societies and associations; cooperative societies.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['State of Maharashtra']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Entry 32 List II']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['1960 Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['State of Maharashtra']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Entry 32 List II']"", 'RESPONDENT': '[]', 'STATUTE': ""['1960 Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is also admitted position before us that 1960 Act has been enacted by the Legislature of the State of Maharashtra in exercise of its power under Entry 32 List II, which reads as under:-- 32. Incorporation, regulation and winding up of corporation, other than those specified in List I, and universities; unincorporated trading, literacy, scientific, religious and other societies and associations; cooperative societies. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['State of Maharashtra']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Entry 32 List II']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['1960 Act']"", ""WITNESS"": ""[]""} </s>"
Srinivasan RAMAN....Applicant(s)V/SSTATE Of Gujarat R/Cr.Ma/15656/2012 Cav Judgemnt In The High Court Of Gujarat At Ahmedabad Criminal Misc.Application (For Quashing & Set Aside Fir/Order,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Gujarat At Ahmedabad']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Srinivasan RAMAN']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['SSTATE Of Gujarat']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Gujarat At Ahmedabad']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Srinivasan RAMAN']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['SSTATE Of Gujarat']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Srinivasan RAMAN....Applicant(s)V/SSTATE Of Gujarat R/Cr.Ma/15656/2012 Cav Judgemnt In The High Court Of Gujarat At Ahmedabad Criminal Misc.Application (For Quashing & Set Aside Fir/Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Gujarat At Ahmedabad']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Srinivasan RAMAN']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['SSTATE Of Gujarat']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: S. L. Goswami Vs. Respondent: State Of Madhya Pradesh Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['S. L. Goswami']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Madhya Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['S. L. Goswami']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Madhya Pradesh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: S. L. Goswami Vs. Respondent: State Of Madhya Pradesh Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['S. L. Goswami']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Madhya Pradesh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Learned Government Pleader then relied upon the Judgment of the Supreme Court in Civil appeal No. 144 of 1992 dated 14-1-1992 in support of his contention.,"{""CASE_NUMBER"": ""['Civil appeal No. 144 of 1992']"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""['14-1-1992']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Civil appeal No. 144 of 1992']"", 'COURT': ""['Supreme Court']"", 'DATE': ""['14-1-1992']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Learned Government Pleader then relied upon the Judgment of the Supreme Court in Civil appeal No. 144 of 1992 dated 14-1-1992 in support of his contention. [/INST]
 {""CASE_NUMBER"": ""['Civil appeal No. 144 of 1992']"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""['14-1-1992']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"He admitted that a restraint order was passed by Sh. Om Prakash, Ld. ADJ restraining the witness from acting upon the Will of his father Ram Narayan.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Om Prakash']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ram Narayan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Om Prakash']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ram Narayan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He admitted that a restraint order was passed by Sh. Om Prakash, Ld. ADJ restraining the witness from acting upon the Will of his father Ram Narayan. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Om Prakash']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ram Narayan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"From the statement of PW-20, it is evident that after getting treatment in civil hospital for two hours, the patient was shifted to Jindal Hospital at 10.30 a.m.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Jindal Hospital']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Jindal Hospital']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: From the statement of PW-20, it is evident that after getting treatment in civil hospital for two hours, the patient was shifted to Jindal Hospital at 10.30 a.m. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Jindal Hospital']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"While so, Saritha filed an application under Section 12 of the Act against A. Ashok Vardhan Reddy and his parents, taken cognizance by the XI Metropolitan Magistrate, Cyberabad in D.V.C. No.4 of 2009.","{""CASE_NUMBER"": ""['D.V.C. No.4 of 2009']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Cyberabad']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Saritha', 'A. Ashok Vardhan Reddy']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 12']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['D.V.C. No.4 of 2009']"", 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Cyberabad']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Saritha', 'A. Ashok Vardhan Reddy']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 12']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: While so, Saritha filed an application under Section 12 of the Act against A. Ashok Vardhan Reddy and his parents, taken cognizance by the XI Metropolitan Magistrate, Cyberabad in D.V.C. No.4 of 2009. [/INST]
 {""CASE_NUMBER"": ""['D.V.C. No.4 of 2009']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Cyberabad']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Saritha', 'A. Ashok Vardhan Reddy']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 12']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As the High Court rightly observed, those cases relate to what happens after or in consequence of the dissolution of a firm whereas we are here concerned with a question that arises before or at the time of dissolution.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As the High Court rightly observed, those cases relate to what happens after or in consequence of the dissolution of a firm whereas we are here concerned with a question that arises before or at the time of dissolution. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"After reaching the spot, police part was briefed.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: After reaching the spot, police part was briefed. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 High Court Of Madhya Pradesh : Jabalpur. Miscellaneous Criminal Case No.11936/2014 Satya Prakash Verma vs. State of M.P. and another Coram : Hon'ble Shri Justice Shantanu Kemkar, J Hon'ble Shri Justice K.K. Trivedi, J. _______________________________________________ _______________________________________________________ Shri Anil Khare, learned senior counsel assisted by Shri H.S. Chhabra, for the applicant. Shri S.K. Kashyap, learned counsel for the respondent No.1. Shri Ajay Ojha, learned counsel for the respondent No.2. (O R D E R","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh : Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Shantanu Kemkar', 'K.K. Trivedi']"", ""LAWYER"": ""['Anil Khare', 'H.S. Chhabra', 'S.K. Kashyap', 'Ajay Ojha']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Satya Prakash Verma']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of M.P.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Madhya Pradesh : Jabalpur']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Shantanu Kemkar', 'K.K. Trivedi']"", 'LAWYER': ""['Anil Khare', 'H.S. Chhabra', 'S.K. Kashyap', 'Ajay Ojha']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Satya Prakash Verma']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of M.P.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 High Court Of Madhya Pradesh : Jabalpur. Miscellaneous Criminal Case No.11936/2014 Satya Prakash Verma vs. State of M.P. and another Coram : Hon'ble Shri Justice Shantanu Kemkar, J Hon'ble Shri Justice K.K. Trivedi, J. _______________________________________________ _______________________________________________________ Shri Anil Khare, learned senior counsel assisted by Shri H.S. Chhabra, for the applicant. Shri S.K. Kashyap, learned counsel for the respondent No.1. Shri Ajay Ojha, learned counsel for the respondent No.2. (O R D E R [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh : Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Shantanu Kemkar', 'K.K. Trivedi']"", ""LAWYER"": ""['Anil Khare', 'H.S. Chhabra', 'S.K. Kashyap', 'Ajay Ojha']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Satya Prakash Verma']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of M.P.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This appeal arises out of a suit which was filed by the plaintiff-respondent Thakur Bharatsingh for recovery of Rs. 13,472.50 paise against the defendant-appellant.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Thakur Bharatsingh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Thakur Bharatsingh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This appeal arises out of a suit which was filed by the plaintiff-respondent Thakur Bharatsingh for recovery of Rs. 13,472.50 paise against the defendant-appellant. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Thakur Bharatsingh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The driver of the offending vehicle filed the reply denying the averments of the application attributing rashness and negligence on his part with the averments that in fact accident occurred on account of rash and negligent driving of Maruti Zen Car.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The driver of the offending vehicle filed the reply denying the averments of the application attributing rashness and negligence on his part with the averments that in fact accident occurred on account of rash and negligent driving of Maruti Zen Car. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Ram Kumar (respondent) has stated that the complainant was working in a private bank and she used to go to her parental home many times and give her salary to her father.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ram Kumar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Ram Kumar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Ram Kumar (respondent) has stated that the complainant was working in a private bank and she used to go to her parental home many times and give her salary to her father. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ram Kumar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The execution of the document is proved by the appellant as well as by Fahimuddin (D.W. 2). who has attested it.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Fahimuddin']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Fahimuddin']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The execution of the document is proved by the appellant as well as by Fahimuddin (D.W. 2). who has attested it. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Fahimuddin']""} </s>"
The validity of Tamil Nadu Act 41 of 1992 has been upheld by the Supreme Court in T.P.K.Tilakavathy's case.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['T.P.K.Tilakavathy']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Tamil Nadu Act 41 of 1992']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['T.P.K.Tilakavathy']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Tamil Nadu Act 41 of 1992']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The validity of Tamil Nadu Act 41 of 1992 has been upheld by the Supreme Court in T.P.K.Tilakavathy's case. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['T.P.K.Tilakavathy']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Tamil Nadu Act 41 of 1992']"", ""WITNESS"": ""[]""} </s>"
"We must also remember that Vasudeva Rao's case decided prior to Kraipak's case, which itself made a significant departure in the application of principles of natural justice before administrative authorities, which to our mind has been further explained or extended in Mohinder Singh Gill's case by our Supreme Court.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Vasudeva Rao', 'Kraipak', 'Mohinder Singh Gill']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Vasudeva Rao', 'Kraipak', 'Mohinder Singh Gill']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We must also remember that Vasudeva Rao's case decided prior to Kraipak's case, which itself made a significant departure in the application of principles of natural justice before administrative authorities, which to our mind has been further explained or extended in Mohinder Singh Gill's case by our Supreme Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Vasudeva Rao', 'Kraipak', 'Mohinder Singh Gill']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"When the statement of the accused persons were recorded under Section 313 Cr.P.C. they denied the prosecution story and stated that they were falsely implicated due to enmity and party bandi,","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 313']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 313']"", 'RESPONDENT': '[]', 'STATUTE': ""['Cr.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: When the statement of the accused persons were recorded under Section 313 Cr.P.C. they denied the prosecution story and stated that they were falsely implicated due to enmity and party bandi, [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 313']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Cr.P.C.']"", ""WITNESS"": ""[]""} </s>"
"Those proceedings, however, failed and the Punjab Government referred those disputes, being industrial reference Nos. 12, 16 and 26 of 1965, by notifications dated 17th July, 25th August and 27th September, 1965 respectively, to the Labour Court, Jullundur.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Labour Court, Jullundur']"", ""DATE"": ""['17th July, 25th August and 27th September, 1965']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Punjab Government']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Labour Court, Jullundur']"", 'DATE': ""['17th July, 25th August and 27th September, 1965']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Punjab Government']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Those proceedings, however, failed and the Punjab Government referred those disputes, being industrial reference Nos. 12, 16 and 26 of 1965, by notifications dated 17th July, 25th August and 27th September, 1965 respectively, to the Labour Court, Jullundur. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Labour Court, Jullundur']"", ""DATE"": ""['17th July, 25th August and 27th September, 1965']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Punjab Government']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Judicial review, according to Shri Shanti Bhushan, is a part of the basic structure of the Constitution and since the Thirty-ninth Amendment by Article 329A (4) and (5) deprives the courts, including the Supreme Court, of their power to adjudicate upon the disputed election, the amendment is unconstitutional.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shanti Bhushan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 329A (4) and (5)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution', 'Thirty-ninth Amendment']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Shanti Bhushan']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 329A (4) and (5)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution', 'Thirty-ninth Amendment']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Judicial review, according to Shri Shanti Bhushan, is a part of the basic structure of the Constitution and since the Thirty-ninth Amendment by Article 329A (4) and (5) deprives the courts, including the Supreme Court, of their power to adjudicate upon the disputed election, the amendment is unconstitutional. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shanti Bhushan']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 329A (4) and (5)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution', 'Thirty-ninth Amendment']"", ""WITNESS"": ""[]""} </s>"
"Then the say of defendant No.5 in his evidence, all these are possible to read in favour of the plaintiff.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Then the say of defendant No.5 in his evidence, all these are possible to read in favour of the plaintiff. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (crl.) 472 of 2008 Petitioner: Divine Retreat Centre Respondent: State of Kerala & Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Divine Retreat Centre']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Kerala']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Divine Retreat Centre']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Kerala']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (crl.) 472 of 2008 Petitioner: Divine Retreat Centre Respondent: State of Kerala & Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Divine Retreat Centre']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Kerala']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Narayan Ratan v. India Mill Stores 1977 RCR, it was held by Hon'ble M.P. High Court that: ""the question whether there is unlawful subletting is, in most cases, a matter of inference to be drawn from the facts of each cases.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['M.P. High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Narayan Ratan v. India Mill Stores 1977 RCR']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['M.P. High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Narayan Ratan v. India Mill Stores 1977 RCR']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Narayan Ratan v. India Mill Stores 1977 RCR, it was held by Hon'ble M.P. High Court that: ""the question whether there is unlawful subletting is, in most cases, a matter of inference to be drawn from the facts of each cases. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['M.P. High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Narayan Ratan v. India Mill Stores 1977 RCR']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Even if it may be assumed that Pappu, Mathayi and Joseph PWs were afraid to go to the police station in the darkness of the night, there appears to be no justification cogent reason for their not reporting the matter to the police early oil the following morning-.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Joseph']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Pappu', 'Mathayi']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Joseph']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Pappu', 'Mathayi']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Even if it may be assumed that Pappu, Mathayi and Joseph PWs were afraid to go to the police station in the darkness of the night, there appears to be no justification cogent reason for their not reporting the matter to the police early oil the following morning-. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Joseph']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Pappu', 'Mathayi']""} </s>"
"When the Act itself makes this distinction between fertilisers, including mixed fertilisers, on one hand and acid like Sulphuric acids gases like Ammonia as pointed out and maintained, it is futile to argue that Notification No. 25/70 grants exemption to mixed fertilisers which are manufactured from two or more fertilisers and acids and gases.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: When the Act itself makes this distinction between fertilisers, including mixed fertilisers, on one hand and acid like Sulphuric acids gases like Ammonia as pointed out and maintained, it is futile to argue that Notification No. 25/70 grants exemption to mixed fertilisers which are manufactured from two or more fertilisers and acids and gases. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Apart from that, in my opinion, the view expressed in the Allahabad decision is not only contrary to the plain terms of Section 5 (2) of the Code of Criminal Procedure but is inconsistent with the aim and object of the Forward Contracts (Regulation) Act in making certain offences under that Act cognizable.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Allahabad']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 5 (2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure', 'Forward Contracts (Regulation) Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Allahabad']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 5 (2)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Code of Criminal Procedure', 'Forward Contracts (Regulation) Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Apart from that, in my opinion, the view expressed in the Allahabad decision is not only contrary to the plain terms of Section 5 (2) of the Code of Criminal Procedure but is inconsistent with the aim and object of the Forward Contracts (Regulation) Act in making certain offences under that Act cognizable. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Allahabad']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 5 (2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure', 'Forward Contracts (Regulation) Act']"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Patna Letters Patent Appeal No.1942 of 2016 In Civil Writ Jurisdiction Case No. 15316 of 2016 =========================================================== M/s Aditya Multicom Private Limited, a Company incorporated under the Provisions of the Companies Act, 1956 having its registered office at 12, Waterloo Street, 2nd Floor, Kolkata - 700069, through its Authorized Signatory Kamlesh Gouaraw, Son of Shri Surendra Singh, Resident of D/139, Keshri Nagar, P.O. Rajeev Nagar, P.S. Rajeev Nagar, District Patna. .... .... Appellant Versus 1. The State of Bihar, through the Principal Secretary, Department of Mines & Geology, Government of Bihar, Patna. 2. The Principal Secretary, Department of Mines & Geology, Government of Bihar, Patna. 3. The State Level Environment Impact Assessment Authority, Bihar, Patna through its Chairman. 4. The District Magistrate, Aurangabad. 5. The District Magistrate, Rohtas, Sasaram. 6. The Senior Deputy Collector-cum- Mineral Development officer, Aurangabad. 7. The Assistant Director, Mines & Geology, Rohtas, Sasaram. .... .... Respondents =========================================================== Appearance : For the Appellant : Mr. Y. V. Giri, Senior Advocate Mr. Suraj Samdarshi, Advocate For the Respondent-State: Mr. K.K.Jha, Aag-8 For the Respondent Mines Deptt.: Mr. D. K. Sinha, Senior Advocate Mr. Rajendra Prasad, Advocate =========================================================== Coram: Honourable The Chief Justice and Honourable Dr. Justice Ravi Ranjan Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ravi Ranjan']"", ""LAWYER"": ""['Y. V. Giri', 'Suraj Samdarshi', 'K.K.Jha', 'D. K. Sinha', 'Rajendra Prasad']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Aditya Multicom Private Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Bihar', 'Principal Secretary, Department of Mines & Geology, Government of Bihar, Patna', 'State Level Environment Impact Assessment Authority, Bihar, Patna', 'District Magistrate, Aurangabad', 'District Magistrate, Rohtas, Sasaram', 'Senior Deputy Collector-cum- Mineral Development officer, Aurangabad', 'Assistant Director, Mines & Geology, Rohtas, Sasaram']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Patna']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ravi Ranjan']"", 'LAWYER': ""['Y. V. Giri', 'Suraj Samdarshi', 'K.K.Jha', 'D. K. Sinha', 'Rajendra Prasad']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Aditya Multicom Private Limited']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Bihar', 'Principal Secretary, Department of Mines & Geology, Government of Bihar, Patna', 'State Level Environment Impact Assessment Authority, Bihar, Patna', 'District Magistrate, Aurangabad', 'District Magistrate, Rohtas, Sasaram', 'Senior Deputy Collector-cum- Mineral Development officer, Aurangabad', 'Assistant Director, Mines & Geology, Rohtas, Sasaram']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Patna Letters Patent Appeal No.1942 of 2016 In Civil Writ Jurisdiction Case No. 15316 of 2016 =========================================================== M/s Aditya Multicom Private Limited, a Company incorporated under the Provisions of the Companies Act, 1956 having its registered office at 12, Waterloo Street, 2nd Floor, Kolkata - 700069, through its Authorized Signatory Kamlesh Gouaraw, Son of Shri Surendra Singh, Resident of D/139, Keshri Nagar, P.O. Rajeev Nagar, P.S. Rajeev Nagar, District Patna. .... .... Appellant Versus 1. The State of Bihar, through the Principal Secretary, Department of Mines & Geology, Government of Bihar, Patna. 2. The Principal Secretary, Department of Mines & Geology, Government of Bihar, Patna. 3. The State Level Environment Impact Assessment Authority, Bihar, Patna through its Chairman. 4. The District Magistrate, Aurangabad. 5. The District Magistrate, Rohtas, Sasaram. 6. The Senior Deputy Collector-cum- Mineral Development officer, Aurangabad. 7. The Assistant Director, Mines & Geology, Rohtas, Sasaram. .... .... Respondents =========================================================== Appearance : For the Appellant : Mr. Y. V. Giri, Senior Advocate Mr. Suraj Samdarshi, Advocate For the Respondent-State: Mr. K.K.Jha, Aag-8 For the Respondent Mines Deptt.: Mr. D. K. Sinha, Senior Advocate Mr. Rajendra Prasad, Advocate =========================================================== Coram: Honourable The Chief Justice and Honourable Dr. Justice Ravi Ranjan Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Patna']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ravi Ranjan']"", ""LAWYER"": ""['Y. V. Giri', 'Suraj Samdarshi', 'K.K.Jha', 'D. K. Sinha', 'Rajendra Prasad']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Aditya Multicom Private Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Bihar', 'Principal Secretary, Department of Mines & Geology, Government of Bihar, Patna', 'State Level Environment Impact Assessment Authority, Bihar, Patna', 'District Magistrate, Aurangabad', 'District Magistrate, Rohtas, Sasaram', 'Senior Deputy Collector-cum- Mineral Development officer, Aurangabad', 'Assistant Director, Mines & Geology, Rohtas, Sasaram']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The third defendant has obviously been served and was represented at an earlier stage of the proceedings as is recorded in an order dated February 24, 2010 passed in GA No. 379 of 2010.","{""CASE_NUMBER"": ""['GA No. 379 of 2010']"", ""COURT"": ""[]"", ""DATE"": ""['February 24, 2010']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['GA No. 379 of 2010']"", 'COURT': '[]', 'DATE': ""['February 24, 2010']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The third defendant has obviously been served and was represented at an earlier stage of the proceedings as is recorded in an order dated February 24, 2010 passed in GA No. 379 of 2010. [/INST]
 {""CASE_NUMBER"": ""['GA No. 379 of 2010']"", ""COURT"": ""[]"", ""DATE"": ""['February 24, 2010']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Not only that one valuable land scam was involved between the two.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Not only that one valuable land scam was involved between the two. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Learned counsel for the petitioner prays for and is granted four weeks time to file the rejoinder.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Learned counsel for the petitioner prays for and is granted four weeks time to file the rejoinder. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Says, further, the Supreme Court : ""Where the two marks are identical, no further questions arise; for then the infringement is made out.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Says, further, the Supreme Court : ""Where the two marks are identical, no further questions arise; for then the infringement is made out."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
the best guide. But if their meaning gets clouded then the courts are re- quired to clear the haze.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: the best guide. But if their meaning gets clouded then the courts are re- quired to clear the haze. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1. Vide this common judgment, I shall decide two cross appeals as these are challenging the same judgment of the Ld. Trial Court of Sh. Subhash Kumar Mishra, Ld. Civil Judge - VII, West District, Tis Hazari Courts, Delhi.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Civil Judge - VII, West District, Tis Hazari Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Subhash Kumar Mishra']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Civil Judge - VII, West District, Tis Hazari Courts, Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Subhash Kumar Mishra']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1. Vide this common judgment, I shall decide two cross appeals as these are challenging the same judgment of the Ld. Trial Court of Sh. Subhash Kumar Mishra, Ld. Civil Judge - VII, West District, Tis Hazari Courts, Delhi. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Civil Judge - VII, West District, Tis Hazari Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Subhash Kumar Mishra']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In such circumstances, the court may not consider it expedient in the interest of justice to make a complaint.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In such circumstances, the court may not consider it expedient in the interest of justice to make a complaint. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
This case first came before our learned brother K. Ramachandra Rap J.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K. Ramachandra Rap']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['K. Ramachandra Rap']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This case first came before our learned brother K. Ramachandra Rap J. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['K. Ramachandra Rap']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It would also be subject to the same limitations as held in M. C. Mehta v. Union of India.' 11.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['M. C. Mehta v. Union of India']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['M. C. Mehta v. Union of India']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It would also be subject to the same limitations as held in M. C. Mehta v. Union of India.' 11. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['M. C. Mehta v. Union of India']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (civil) 5300 of 2006 Petitioner: State of Kerala & Ors. Respondent: Unni & Anr. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State of Kerala']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Unni']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['State of Kerala']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Unni']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 5300 of 2006 Petitioner: State of Kerala & Ors. Respondent: Unni & Anr. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State of Kerala']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Unni']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The further case set up by SI Trivedi, respondent No. 1, incharge of the police station was that after making a Roznamcha entry at 7.00 a.m. about his departure from the police station he (respondent No. 1- Shyamsunder Trivedi) and Constable Rajaram respondent proceeded to the spot where the dead body was stated to be lying for conducting investigation under Section 174 Cr.P.C.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 174']"", ""RESPONDENT"": ""['Trivedi', 'Shyamsunder Trivedi', 'Rajaram']"", ""STATUTE"": ""['Cr.P.C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 174']"", 'RESPONDENT': ""['Trivedi', 'Shyamsunder Trivedi', 'Rajaram']"", 'STATUTE': ""['Cr.P.C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The further case set up by SI Trivedi, respondent No. 1, incharge of the police station was that after making a Roznamcha entry at 7.00 a.m. about his departure from the police station he (respondent No. 1- Shyamsunder Trivedi) and Constable Rajaram respondent proceeded to the spot where the dead body was stated to be lying for conducting investigation under Section 174 Cr.P.C. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 174']"", ""RESPONDENT"": ""['Trivedi', 'Shyamsunder Trivedi', 'Rajaram']"", ""STATUTE"": ""['Cr.P.C.']"", ""WITNESS"": ""[]""} </s>"
"In that case the assessee had agreed to purchase a tile factory, vide written agreement dated 22nd May, 1950.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22nd May, 1950']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['22nd May, 1950']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In that case the assessee had agreed to purchase a tile factory, vide written agreement dated 22nd May, 1950. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22nd May, 1950']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Criminal Appeal No. 347 of 1983 thus came to be instituted.,"{""CASE_NUMBER"": ""['Criminal Appeal No. 347 of 1983']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Criminal Appeal No. 347 of 1983']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Criminal Appeal No. 347 of 1983 thus came to be instituted. [/INST]
 {""CASE_NUMBER"": ""['Criminal Appeal No. 347 of 1983']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Adverting to departmental instructions, the Supreme Court was however, prepared to loosen the rigour in Khet Singh v Union of India (2002) 4 SCC 380 and said the departure from departmental guidelines must be based on justifiable and reasonable grounds.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Khet Singh v Union of India (2002) 4 SCC 380']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Khet Singh v Union of India (2002) 4 SCC 380']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Adverting to departmental instructions, the Supreme Court was however, prepared to loosen the rigour in Khet Singh v Union of India (2002) 4 SCC 380 and said the departure from departmental guidelines must be based on justifiable and reasonable grounds. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Khet Singh v Union of India (2002) 4 SCC 380']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"That was a case of a death by murder in which J.B. Mehta and M.U. Shah, JJ.observed (para 47) that within the total sum of Rs. 20,000/- claimed, the court could adjust between the loss to the dependency and the loss to the estate.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['J.B. Mehta', 'M.U. Shah']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['J.B. Mehta', 'M.U. Shah']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: That was a case of a death by murder in which J.B. Mehta and M.U. Shah, JJ.observed (para 47) that within the total sum of Rs. 20,000/- claimed, the court could adjust between the loss to the dependency and the loss to the estate. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['J.B. Mehta', 'M.U. Shah']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Plaintiff No. 2- Ramesh Prasad had taken some loan from defendant No. 2- Kushal Singh on 21/5/1984 and 11/10/1985 of Rs. 4,000/- and 4100/- and on said dates executed sale deeds respectively in the name of defendant No. 1.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['21/5/1984', '11/10/1985']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ramesh Prasad']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Kushal Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['21/5/1984', '11/10/1985']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ramesh Prasad']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Kushal Singh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Plaintiff No. 2- Ramesh Prasad had taken some loan from defendant No. 2- Kushal Singh on 21/5/1984 and 11/10/1985 of Rs. 4,000/- and 4100/- and on said dates executed sale deeds respectively in the name of defendant No. 1. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['21/5/1984', '11/10/1985']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ramesh Prasad']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Kushal Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Then it may be stated that a corporation resides where the principal direction of the corporate business is located.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Then it may be stated that a corporation resides where the principal direction of the corporate business is located. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He was again re-admitted in the hospital just six days thereafter on 1.4.96 and then discharged after one week's hospitalisation.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['1.4.96']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['1.4.96']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He was again re-admitted in the hospital just six days thereafter on 1.4.96 and then discharged after one week's hospitalisation. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['1.4.96']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As per PW 19, member of the aforesaid RC No. AC3/2010/A0003/CBI/ACU­III/ND CC No. 24/12 45/85 CBI vs J.S Sehrawat etc. inspection team, they had done the inspection of the aforesaid property on 16/09/2010, 17/09/2010 and 27/09/2010 and had taken measurements thereof.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['16/09/2010', '17/09/2010', '27/09/2010']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['RC No. AC3/2010/A0003/CBI/ACU\\xadIII/ND CC No. 24/12 45/85 CBI vs J.S Sehrawat etc.']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['16/09/2010', '17/09/2010', '27/09/2010']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['RC No. AC3/2010/A0003/CBI/ACU\\xadIII/ND CC No. 24/12 45/85 CBI vs J.S Sehrawat etc.']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As per PW 19, member of the aforesaid RC No. AC3/2010/A0003/CBI/ACU­III/ND CC No. 24/12 45/85 CBI vs J.S Sehrawat etc. inspection team, they had done the inspection of the aforesaid property on 16/09/2010, 17/09/2010 and 27/09/2010 and had taken measurements thereof. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['16/09/2010', '17/09/2010', '27/09/2010']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['RC No. AC3/2010/A0003/CBI/ACU\\xadIII/ND CC No. 24/12 45/85 CBI vs J.S Sehrawat etc.']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
There are no prior incidents which constitute tendency or propensity for committing an offence which would justify the detention.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: There are no prior incidents which constitute tendency or propensity for committing an offence which would justify the detention. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"-1- F.A.No.444/2003 A.F.R. High Court Of Madhya Pradesh, Jabalpur First Appeal No.444/2003 Appellant : Hafizulla, S/o Late Sheikh Barkatullah, aged about 65 years, Occupation Advocacy, R/o H. No.828, Badi Omti, Jabalpur (M.P) Versus Respondent : Shri Inder Kumar Jain, S/o Late Sheikhar Chand Jain, Aged about 55 years, Occupation- Businessman, R/o H.No.458, Hanumantal Ward, Behind City Kotwali, Jabalpur (M.P) Db : Hon'ble Shri Justice Rajendra Menon, Acting Chief Justice. Hon. Shri Justice Anurag Shrivastava, Judge Appellant in person. Shri Pranay Verma, Advocate for the respondent. Whether approved for reporting: Yes/No. Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh, Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rajendra Menon', 'Anurag Shrivastava']"", ""LAWYER"": ""['Pranay Verma']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Hafizulla']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Inder Kumar Jain']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Madhya Pradesh, Jabalpur']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Rajendra Menon', 'Anurag Shrivastava']"", 'LAWYER': ""['Pranay Verma']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Hafizulla']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Inder Kumar Jain']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: -1- F.A.No.444/2003 A.F.R. High Court Of Madhya Pradesh, Jabalpur First Appeal No.444/2003 Appellant : Hafizulla, S/o Late Sheikh Barkatullah, aged about 65 years, Occupation Advocacy, R/o H. No.828, Badi Omti, Jabalpur (M.P) Versus Respondent : Shri Inder Kumar Jain, S/o Late Sheikhar Chand Jain, Aged about 55 years, Occupation- Businessman, R/o H.No.458, Hanumantal Ward, Behind City Kotwali, Jabalpur (M.P) Db : Hon'ble Shri Justice Rajendra Menon, Acting Chief Justice. Hon. Shri Justice Anurag Shrivastava, Judge Appellant in person. Shri Pranay Verma, Advocate for the respondent. Whether approved for reporting: Yes/No. Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh, Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rajendra Menon', 'Anurag Shrivastava']"", ""LAWYER"": ""['Pranay Verma']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Hafizulla']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Inder Kumar Jain']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Civil Appeals 739 to 742 of 1982 will stand disposed of in the light of the dismissal of the writ petition, out of which they arise.","{""CASE_NUMBER"": ""['Civil Appeals 739 to 742 of 1982']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Civil Appeals 739 to 742 of 1982']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Civil Appeals 739 to 742 of 1982 will stand disposed of in the light of the dismissal of the writ petition, out of which they arise. [/INST]
 {""CASE_NUMBER"": ""['Civil Appeals 739 to 742 of 1982']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The plaintiff's witness Kasturchand has stated before me that the rates mentioned in the invoices were the rates at which these goods used to be sold by the plaintiff in November, 1941.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Kasturchand']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Kasturchand']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The plaintiff's witness Kasturchand has stated before me that the rates mentioned in the invoices were the rates at which these goods used to be sold by the plaintiff in November, 1941. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Kasturchand']""} </s>"
"For the aforesaid reasons, we hold that order of the CIT (A) in allowing set off of income from house property and income from other sources against brought forward business losses is contrary to the provisions of Section 72 of the Income-tax Act, 1961 and we, therefore, reverse the same. 20.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 72']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Income-tax Act, 1961']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 72']"", 'RESPONDENT': '[]', 'STATUTE': ""['Income-tax Act, 1961']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: For the aforesaid reasons, we hold that order of the CIT (A) in allowing set off of income from house property and income from other sources against brought forward business losses is contrary to the provisions of Section 72 of the Income-tax Act, 1961 and we, therefore, reverse the same. 20. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 72']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Income-tax Act, 1961']"", ""WITNESS"": ""[]""} </s>"
"This contract of sale was entered into by it with one Brijlal Pannalal of Dhuliya and it could have waited and delivered the goods to Brijlal Pannalal on November 15, 1960, when it was to get delivery from the Dewas Flour and Oil Mills.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['November 15, 1960']"", ""GPE"": ""['Dhuliya']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Dewas Flour and Oil Mills']"", ""OTHER_PERSON"": ""['Brijlal Pannalal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['November 15, 1960']"", 'GPE': ""['Dhuliya']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Dewas Flour and Oil Mills']"", 'OTHER_PERSON': ""['Brijlal Pannalal']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This contract of sale was entered into by it with one Brijlal Pannalal of Dhuliya and it could have waited and delivered the goods to Brijlal Pannalal on November 15, 1960, when it was to get delivery from the Dewas Flour and Oil Mills. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['November 15, 1960']"", ""GPE"": ""['Dhuliya']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Dewas Flour and Oil Mills']"", ""OTHER_PERSON"": ""['Brijlal Pannalal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Supreme Court in Oil & Natural Gas Commission v. Utpal Kumar Basu held that the question as to whether the court has a territorial jurisdiction to entertain a writ petition, must be arrived at on the basis of averments made in the petition, the truth or otherwise whereof being immaterial.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Oil & Natural Gas Commission v. Utpal Kumar Basu']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Oil & Natural Gas Commission v. Utpal Kumar Basu']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Supreme Court in Oil & Natural Gas Commission v. Utpal Kumar Basu held that the question as to whether the court has a territorial jurisdiction to entertain a writ petition, must be arrived at on the basis of averments made in the petition, the truth or otherwise whereof being immaterial. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Oil & Natural Gas Commission v. Utpal Kumar Basu']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The decision of Madhya Pradesh High Court being the solitary decision on the issue and being based on the two judgments of the Supreme Court, wherein it was held that royalty was a tax, the provisions of s. 43B in our opinion were rightly applied by the Departmental authorities and no interference in their order is called for.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madhya Pradesh High Court', 'Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 43B']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Madhya Pradesh High Court', 'Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['s. 43B']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The decision of Madhya Pradesh High Court being the solitary decision on the issue and being based on the two judgments of the Supreme Court, wherein it was held that royalty was a tax, the provisions of s. 43B in our opinion were rightly applied by the Departmental authorities and no interference in their order is called for. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madhya Pradesh High Court', 'Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['s. 43B']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"117.2012 Cri.Appeal.odt 1 In The High Court Of Judicature At Bombay Bench At Aurangabad Criminal Appeal No.117 Of 2012 Prakash @ Jaywant Wasudeo Wankhede, Age: 63 Years, Occu: Goldsmith R/o. Laxmi Alankar Gruh, Saraf Bazar Main Road, Sakri, Tq.Sakri, Dist.Dhule Appellant [Orig. Accused] Versus The State of Maharshtra [Copy to be served on App in the Hon'ble Hgh Court of Judicature of Bombay, Bench at Aurangabad] Respondent ... Mr. R.N.Dhorde, Senior Advocate, along with Mr. Pravin G. Patil,Advocate i/b Mr. V.R.Dhorde, Advocate for Appellant. Mr. S.G.Karlekar, App for Respondent - State ... With Criminal Appeal No. 142 Of 2012 Pooja d/o. Manoj Deore, Age: 8 years, Occu. Nil [Student], under natural guardianship of her real father - Manoj s/o. Suresh Deore, Age: 37 Years, Occu. Service as Clerk in the Court of 21st Metropolitan Magistrate, Bandra [East], Mumbai-51, R/o. B-90/6, Bandra [East], Mumbai - 400 051 Appellant [Victim / Prosecutrix] Versus 1] Prakash alias Jaywant s/o. Vasudeo Wankhede, Age: 55 years, Occu. Business as Goldsmith, R/o. Laxmi Alankar Gruh, Saraf Bazar, Main Road, Sakri, Taluka Sakri, District Dhule. 117.2012 Cri.Appeal.odt 2 2] The State of Maharashtra Respondents [No.1 Orig.Accused] ... Mr. R.S. Deshmukh, Advocate for Appellant Mr. R.N.Dhorde, Senior Advocate, along with Mr. Pravin G. Patil, Advocate i/b Mr. V.R.Dhorde, Advocate for Respondent No.1. Mr. S.G.Karlekar, App for Respondent - State ... With Criminal Appeal No.540 Of 2012 The State of Maharashtra Through Pso Sakri Police Station, Dist. Dhule Applicant [Orig. Complainant] Versus Prakash @ Jayawant Wasudeo Wankhede, Age 60 years, Occu. Goldsmith, R/o. Laxmi Alankar Gruh, Saraf Bajar, Main Road, Sakri, Tq. Sakri, Dist. Dhule Respondent [ Orig. Accused] ... Mr. S.G.Karlekar, App for Appellant - State Mr. R.N.Dhorde, Senior Advocate, along with Mr. Pravin G. Patil, Advocate i/b Mr. V.R.Dhorde, Advocate for Appellant. ... Coram : S.S. Shinde & A.M.Badar, Jj. Reserved On : 16.02.2015 Pronounced On: 08.05.2015 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay', 'Court of Judicature of Bombay, Bench at Aurangabad']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['S.S. Shinde', 'A.M.Badar']"", ""LAWYER"": ""['R.N.Dhorde', 'Pravin G. Patil', 'V.R.Dhorde', 'S.G.Karlekar', 'R.S. Deshmukh', 'Pravin G.']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Prakash @ Jaywant Wasudeo Wankhede', 'Pooja', 'State of Maharashtra']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Maharshtra', 'Prakash alias Jaywant', 'State of Maharashtra', 'Prakash @ Jayawant Wasudeo Wankhede']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay', 'Court of Judicature of Bombay, Bench at Aurangabad']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['S.S. Shinde', 'A.M.Badar']"", 'LAWYER': ""['R.N.Dhorde', 'Pravin G. Patil', 'V.R.Dhorde', 'S.G.Karlekar', 'R.S. Deshmukh', 'Pravin G.']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Prakash @ Jaywant Wasudeo Wankhede', 'Pooja', 'State of Maharashtra']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State of Maharshtra', 'Prakash alias Jaywant', 'State of Maharashtra', 'Prakash @ Jayawant Wasudeo Wankhede']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 117.2012 Cri.Appeal.odt 1 In The High Court Of Judicature At Bombay Bench At Aurangabad Criminal Appeal No.117 Of 2012 Prakash @ Jaywant Wasudeo Wankhede, Age: 63 Years, Occu: Goldsmith R/o. Laxmi Alankar Gruh, Saraf Bazar Main Road, Sakri, Tq.Sakri, Dist.Dhule Appellant [Orig. Accused] Versus The State of Maharshtra [Copy to be served on App in the Hon'ble Hgh Court of Judicature of Bombay, Bench at Aurangabad] Respondent ... Mr. R.N.Dhorde, Senior Advocate, along with Mr. Pravin G. Patil,Advocate i/b Mr. V.R.Dhorde, Advocate for Appellant. Mr. S.G.Karlekar, App for Respondent - State ... With Criminal Appeal No. 142 Of 2012 Pooja d/o. Manoj Deore, Age: 8 years, Occu. Nil [Student], under natural guardianship of her real father - Manoj s/o. Suresh Deore, Age: 37 Years, Occu. Service as Clerk in the Court of 21st Metropolitan Magistrate, Bandra [East], Mumbai-51, R/o. B-90/6, Bandra [East], Mumbai - 400 051 Appellant [Victim / Prosecutrix] Versus 1] Prakash alias Jaywant s/o. Vasudeo Wankhede, Age: 55 years, Occu. Business as Goldsmith, R/o. Laxmi Alankar Gruh, Saraf Bazar, Main Road, Sakri, Taluka Sakri, District Dhule. 117.2012 Cri.Appeal.odt 2 2] The State of Maharashtra Respondents [No.1 Orig.Accused] ... Mr. R.S. Deshmukh, Advocate for Appellant Mr. R.N.Dhorde, Senior Advocate, along with Mr. Pravin G. Patil, Advocate i/b Mr. V.R.Dhorde, Advocate for Respondent No.1. Mr. S.G.Karlekar, App for Respondent - State ... With Criminal Appeal No.540 Of 2012 The State of Maharashtra Through Pso Sakri Police Station, Dist. Dhule Applicant [Orig. Complainant] Versus Prakash @ Jayawant Wasudeo Wankhede, Age 60 years, Occu. Goldsmith, R/o. Laxmi Alankar Gruh, Saraf Bajar, Main Road, Sakri, Tq. Sakri, Dist. Dhule Respondent [ Orig. Accused] ... Mr. S.G.Karlekar, App for Appellant - State Mr. R.N.Dhorde, Senior Advocate, along with Mr. Pravin G. Patil, Advocate i/b Mr. V.R.Dhorde, Advocate for Appellant. ... Coram : S.S. Shinde & A.M.Badar, Jj. Reserved On : 16.02.2015 Pronounced On: 08.05.2015 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay', 'Court of Judicature of Bombay, Bench at Aurangabad']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['S.S. Shinde', 'A.M.Badar']"", ""LAWYER"": ""['R.N.Dhorde', 'Pravin G. Patil', 'V.R.Dhorde', 'S.G.Karlekar', 'R.S. Deshmukh', 'Pravin G.']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Prakash @ Jaywant Wasudeo Wankhede', 'Pooja', 'State of Maharashtra']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State of Maharshtra', 'Prakash alias Jaywant', 'State of Maharashtra', 'Prakash @ Jayawant Wasudeo Wankhede']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Vs. Dhaniram & Anr. reported in AIR 2011 Chhattisgarh 103. 7.,"{""CASE_NUMBER"": ""['AIR 2011 Chhattisgarh 103']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dhaniram']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['AIR 2011 Chhattisgarh 103']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Dhaniram']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Vs. Dhaniram & Anr. reported in AIR 2011 Chhattisgarh 103. 7. [/INST]
 {""CASE_NUMBER"": ""['AIR 2011 Chhattisgarh 103']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Dhaniram']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
the ground that they could not pass the prescribed tests for their permanent absorption in its service.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: the ground that they could not pass the prescribed tests for their permanent absorption in its service. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Honble Sri Justice Ramesh Ranganathan And The Hon'Ble Sri Justice S. Ravi Kumar O.S.A.Nos.16 Of 2015 28-07-2015 M/s. Mauritius Commercial Bank Ltd.Petitioner M/s. Sujana Universal Industries Limited. Respondent Counsel for the Petitioner: Sri S. Niranjan Reddy Counsel for respondent: Sri A. Sudarshan Reddy, Learned Senior Counsel appearing on behalf of the respondent-company <Gist: >Head Note: ?Citations: Air 2008 Sc 1797 (2014) 12 Scc 368 1981 Vo. 51 Comp Cases 301 Air 1969 Sc 297 2009 Vol.4 Calcutta High Court Notes 429 (Db) (2014) 6 Karnataka Law Journal 99 2014 Scc Online Bombay 1276 2008 Vol.144 Comp Cases 454 2013 Vol.176 Comp Cases 483 (1985) 58 Cc 156 (Guj (1966) 59 Itr 767 (Sc) (1990) 69 Comp Cas 178 [1988] 11 Qb 518 (1909) Ilr 36 Cal 936 (Fb) (1978) 48 Comp Cas 231 Air 1995 Orissa 249 Air 1974 Sc 1265 (1869) 37 Calif 524 (1972] 42 Comp Cas 386 (Raj) [1974] 44 Comp Cas 496 (Punj (2001) 29 Scl 313 (P&H) (1) 6 Ves. Jun. 714. 734: 31 E.R. 1272, 1282 (1869) 6 Bombay High Court Reports 241 (2003) 113 Com Cases 383 (Mad) (2003) 41 Scl 134 (Delhi) 2014 Scc Online Bom 1276 2010 (4) Ald 116 (2011) 4 Comp. Law. J 279 (Ap) 2003 (113) Cc 85 (Bombay High Court) (2005) 7 Scc 42 : (Air 2005 Sc 4175: 2005 Air Scw 5324 (1990)3 Comp.LJ 322 2009(11) Drj 384 1998 (45) Drj 522 Air 1994 Delhi 1 (1987(47) Comp Cases 1 (1976) 46 Cc 91 (Sc) (2001) 5 Ald 800 2008 Lap 340 2001(4) Scc 534 (2001) 5 Scc 407 (2001)8 Scc 676 (2001) 8 Scc 540 (1964) 7 Scr 539 (1899)2 Qb 158 Judgment in W.P. No.25583 of 2010 dated:31.01.2012 Air 1990 Ap 171 (2004) 8 Scc 579 2003(11) Scc 584 2004(3)Scc 75 (2008) 16 Scc 14 (Order in C.P.No.34 of 2011 dated 24.04.2012) 2001 (107) Comp Cas 401 (1875) 1 Ch D 426, 45 Lj Ch 373 Air 1936 Pc 253 Air 1975 Sc 915 (1993) 3 Scc 161 Judgment of A.P. High Court in C.P. No.24 of 2008 dated 26.04.2010 The Honble Sri Justice Ramesh Ranganathan And The Honble Sri Justice S.Ravi Kumar O.S.A.Nos.16 Of 2015 & 22 Of 2015 Common Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ramesh Ranganathan', 'S. Ravi', 'S.Ravi Kumar']"", ""LAWYER"": ""['S. Niranjan Reddy', 'A. Sudarshan Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Mauritius Commercial Bank Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sujana Universal Industries Limited']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ramesh Ranganathan', 'S. Ravi', 'S.Ravi Kumar']"", 'LAWYER': ""['S. Niranjan Reddy', 'A. Sudarshan Reddy']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Mauritius Commercial Bank Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Sujana Universal Industries Limited']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Honble Sri Justice Ramesh Ranganathan And The Hon'Ble Sri Justice S. Ravi Kumar O.S.A.Nos.16 Of 2015 28-07-2015 M/s. Mauritius Commercial Bank Ltd.Petitioner M/s. Sujana Universal Industries Limited. Respondent Counsel for the Petitioner: Sri S. Niranjan Reddy Counsel for respondent: Sri A. Sudarshan Reddy, Learned Senior Counsel appearing on behalf of the respondent-company <Gist: >Head Note: ?Citations: Air 2008 Sc 1797 (2014) 12 Scc 368 1981 Vo. 51 Comp Cases 301 Air 1969 Sc 297 2009 Vol.4 Calcutta High Court Notes 429 (Db) (2014) 6 Karnataka Law Journal 99 2014 Scc Online Bombay 1276 2008 Vol.144 Comp Cases 454 2013 Vol.176 Comp Cases 483 (1985) 58 Cc 156 (Guj (1966) 59 Itr 767 (Sc) (1990) 69 Comp Cas 178 [1988] 11 Qb 518 (1909) Ilr 36 Cal 936 (Fb) (1978) 48 Comp Cas 231 Air 1995 Orissa 249 Air 1974 Sc 1265 (1869) 37 Calif 524 (1972] 42 Comp Cas 386 (Raj) [1974] 44 Comp Cas 496 (Punj (2001) 29 Scl 313 (P&H) (1) 6 Ves. Jun. 714. 734: 31 E.R. 1272, 1282 (1869) 6 Bombay High Court Reports 241 (2003) 113 Com Cases 383 (Mad) (2003) 41 Scl 134 (Delhi) 2014 Scc Online Bom 1276 2010 (4) Ald 116 (2011) 4 Comp. Law. J 279 (Ap) 2003 (113) Cc 85 (Bombay High Court) (2005) 7 Scc 42 : (Air 2005 Sc 4175: 2005 Air Scw 5324 (1990)3 Comp.LJ 322 2009(11) Drj 384 1998 (45) Drj 522 Air 1994 Delhi 1 (1987(47) Comp Cases 1 (1976) 46 Cc 91 (Sc) (2001) 5 Ald 800 2008 Lap 340 2001(4) Scc 534 (2001) 5 Scc 407 (2001)8 Scc 676 (2001) 8 Scc 540 (1964) 7 Scr 539 (1899)2 Qb 158 Judgment in W.P. No.25583 of 2010 dated:31.01.2012 Air 1990 Ap 171 (2004) 8 Scc 579 2003(11) Scc 584 2004(3)Scc 75 (2008) 16 Scc 14 (Order in C.P.No.34 of 2011 dated 24.04.2012) 2001 (107) Comp Cas 401 (1875) 1 Ch D 426, 45 Lj Ch 373 Air 1936 Pc 253 Air 1975 Sc 915 (1993) 3 Scc 161 Judgment of A.P. High Court in C.P. No.24 of 2008 dated 26.04.2010 The Honble Sri Justice Ramesh Ranganathan And The Honble Sri Justice S.Ravi Kumar O.S.A.Nos.16 Of 2015 & 22 Of 2015 Common Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ramesh Ranganathan', 'S. Ravi', 'S.Ravi Kumar']"", ""LAWYER"": ""['S. Niranjan Reddy', 'A. Sudarshan Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Mauritius Commercial Bank Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Sujana Universal Industries Limited']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
It is however pertinent to note that his discharge from this hospital was not on its own volition.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is however pertinent to note that his discharge from this hospital was not on its own volition. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The affidavit accompanying the application at I.A.No.VI unmistakably goes to show that the jurisdiction challenged is the jurisdiction in relation to the delivery of possession as also in relation to the award of damages.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The affidavit accompanying the application at I.A.No.VI unmistakably goes to show that the jurisdiction challenged is the jurisdiction in relation to the delivery of possession as also in relation to the award of damages. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In C. W. J. C. 509 of 1967, Mr. Ghose contended that once an order of reinstatement is made the Labour Court has no power to give by way of compensation only six months' pay and not the entire wages for the idle period.","{""CASE_NUMBER"": ""['C. W. J. C. 509 of 1967']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ghose']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['C. W. J. C. 509 of 1967']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ghose']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In C. W. J. C. 509 of 1967, Mr. Ghose contended that once an order of reinstatement is made the Labour Court has no power to give by way of compensation only six months' pay and not the entire wages for the idle period. [/INST]
 {""CASE_NUMBER"": ""['C. W. J. C. 509 of 1967']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ghose']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Before going to dwell on the question whether or not judicial review is available, it is necessary to examine: is it a fit case to undertake this judicial exercise ?","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Before going to dwell on the question whether or not judicial review is available, it is necessary to examine: is it a fit case to undertake this judicial exercise ? [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"* In The High Court Of Delhi At New Delhi + MAC.APP.No.792/2006 Date of Decision : 11th January, 2013 Oriental Insurance Co. Ltd. ..... Appellant Through : Mr. Karan Chaudhary, proxy counsel for Mr. R.N. Sharma, Adv. versus Ranjit Pandey & Ors. .... Respondents Through : Mr. Idresh Ahmed, Adv. for R-1 Coram :- Hon'Ble Mr. Justice J.R. Midha Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Delhi At New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['J.R. Midha']"", ""LAWYER"": ""['R.N. Sharma', 'Idresh Ahmed']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Oriental Insurance Co. Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ranjit Pandey']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Delhi At New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['J.R. Midha']"", 'LAWYER': ""['R.N. Sharma', 'Idresh Ahmed']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Oriental Insurance Co. Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Ranjit Pandey']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: * In The High Court Of Delhi At New Delhi + MAC.APP.No.792/2006 Date of Decision : 11th January, 2013 Oriental Insurance Co. Ltd. ..... Appellant Through : Mr. Karan Chaudhary, proxy counsel for Mr. R.N. Sharma, Adv. versus Ranjit Pandey & Ors. .... Respondents Through : Mr. Idresh Ahmed, Adv. for R-1 Coram :- Hon'Ble Mr. Justice J.R. Midha Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Delhi At New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['J.R. Midha']"", ""LAWYER"": ""['R.N. Sharma', 'Idresh Ahmed']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Oriental Insurance Co. Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ranjit Pandey']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Mr. Chagla submitted that neither SEBI nor Central Government could be regarded as person aggrieved or person adversely affected Dy the order under appeal, The Companies Act does not contemplate any notice to SEBI nor any right of appeal in conferred on SEBI in the proceedings under Section 391.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['SEBI', 'Central Government']"", ""OTHER_PERSON"": ""['Chagla']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 391']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Companies Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['SEBI', 'Central Government']"", 'OTHER_PERSON': ""['Chagla']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 391']"", 'RESPONDENT': '[]', 'STATUTE': ""['Companies Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mr. Chagla submitted that neither SEBI nor Central Government could be regarded as person aggrieved or person adversely affected Dy the order under appeal, The Companies Act does not contemplate any notice to SEBI nor any right of appeal in conferred on SEBI in the proceedings under Section 391. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['SEBI', 'Central Government']"", ""OTHER_PERSON"": ""['Chagla']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 391']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Companies Act']"", ""WITNESS"": ""[]""} </s>"
"At the outset, it should be remembered that the 1st defendant's case was that besides himself & his sons, there were no other relations of Ramalingam, near or distant.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ramalingam']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ramalingam']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: At the outset, it should be remembered that the 1st defendant's case was that besides himself & his sons, there were no other relations of Ramalingam, near or distant. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ramalingam']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Judicature At Madras Date : 11.02.2011 Coram The Honourable Mr. M.Y.Eqbal, Chief Justice The Honourable Mr. Justice P.Jyothimani And The Honourable Mr. Justice T.S.Sivagnanam W.A. Nos. 592 & 938 Of 2009 W.A. No. 592 Of 2009 M/s.Latif Estate Line India Ltd. rep. by its Managing Director Mr. Habib Abdul Latif No.14, Temple Road Secretariat Colony Kilpauk, Chennai  10. .. Appellants - Vs - 1. Mrs. Hadeeja Ammal 2. The Inspector General of Registration Santhome, Chennai  4. 3. The Sub Registrar Ambattur, Chennai. .. Respondents W.A. No.938 Of 2009 1. Habib Abdul Latif 2. Mohideen Abdul Latif .. Appellants - Vs - 1. Syeda Aamina Raheem rep. by her Power of Attorney Agent, V.Veeramani, Chennai. 2. The Sub Registrar Registration Department. .. Respondents W.A. No.592 of 2009 filed against the order made by learned single Judge in W.P. No.27291 of 2008 dated 10th Feb., 2009. W.A. No.938 of 2009 filed against the order made by learned single Judge in W.P. No.17555 of 2008 dated 10th Feb., 2009. For Appellants : Mr. V.Raghavachari For Respondents : Mr. J.Raja Kalifulla, Govt. Pleader Ms. Chitra Sampath  Amicus Curiae Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.Y.Eqbal', 'P.Jyothimani', 'T.S.Sivagnanam']"", ""LAWYER"": ""['V.Raghavachari', 'J.Raja Kalifulla', 'Chitra Sampath']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Latif Estate Line India Ltd.', 'Habib Abdul Latif', 'Mohideen Abdul Latif']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Hadeeja Ammal', 'Inspector General of Registration Santhome, Chennai \\x16', 'Sub Registrar Ambattur, Chennai.', 'Syeda Aamina Raheem', 'Sub Registrar Registration Department. ..']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Madras']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['M.Y.Eqbal', 'P.Jyothimani', 'T.S.Sivagnanam']"", 'LAWYER': ""['V.Raghavachari', 'J.Raja Kalifulla', 'Chitra Sampath']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Latif Estate Line India Ltd.', 'Habib Abdul Latif', 'Mohideen Abdul Latif']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Hadeeja Ammal', 'Inspector General of Registration Santhome, Chennai \\x16', 'Sub Registrar Ambattur, Chennai.', 'Syeda Aamina Raheem', 'Sub Registrar Registration Department. ..']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Judicature At Madras Date : 11.02.2011 Coram The Honourable Mr. M.Y.Eqbal, Chief Justice The Honourable Mr. Justice P.Jyothimani And The Honourable Mr. Justice T.S.Sivagnanam W.A. Nos. 592 & 938 Of 2009 W.A. No. 592 Of 2009 M/s.Latif Estate Line India Ltd. rep. by its Managing Director Mr. Habib Abdul Latif No.14, Temple Road Secretariat Colony Kilpauk, Chennai  10. .. Appellants - Vs - 1. Mrs. Hadeeja Ammal 2. The Inspector General of Registration Santhome, Chennai  4. 3. The Sub Registrar Ambattur, Chennai. .. Respondents W.A. No.938 Of 2009 1. Habib Abdul Latif 2. Mohideen Abdul Latif .. Appellants - Vs - 1. Syeda Aamina Raheem rep. by her Power of Attorney Agent, V.Veeramani, Chennai. 2. The Sub Registrar Registration Department. .. Respondents W.A. No.592 of 2009 filed against the order made by learned single Judge in W.P. No.27291 of 2008 dated 10th Feb., 2009. W.A. No.938 of 2009 filed against the order made by learned single Judge in W.P. No.17555 of 2008 dated 10th Feb., 2009. For Appellants : Mr. V.Raghavachari For Respondents : Mr. J.Raja Kalifulla, Govt. Pleader Ms. Chitra Sampath  Amicus Curiae Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Madras']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.Y.Eqbal', 'P.Jyothimani', 'T.S.Sivagnanam']"", ""LAWYER"": ""['V.Raghavachari', 'J.Raja Kalifulla', 'Chitra Sampath']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Latif Estate Line India Ltd.', 'Habib Abdul Latif', 'Mohideen Abdul Latif']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Hadeeja Ammal', 'Inspector General of Registration Santhome, Chennai \\x16', 'Sub Registrar Ambattur, Chennai.', 'Syeda Aamina Raheem', 'Sub Registrar Registration Department. ..']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: M.I. Builders Pvt. Ltd. Vs. Respondent: Radhey Shyam Sahu And Others Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M.I. Builders Pvt. Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Radhey Shyam Sahu']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['M.I. Builders Pvt. Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Radhey Shyam Sahu']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: M.I. Builders Pvt. Ltd. Vs. Respondent: Radhey Shyam Sahu And Others Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['M.I. Builders Pvt. Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Radhey Shyam Sahu']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As has been pointed out earlier, the Central Act has been enacted by the Parliament under Entry 66 of the List I to coordinate and determine the standards of technical institutions as well a.-. under Entry 25 of List 111.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Parliament']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Entry 66 of the List I', 'Entry 25 of List 111']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Parliament']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Entry 66 of the List I', 'Entry 25 of List 111']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As has been pointed out earlier, the Central Act has been enacted by the Parliament under Entry 66 of the List I to coordinate and determine the standards of technical institutions as well a.-. under Entry 25 of List 111. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Parliament']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Entry 66 of the List I', 'Entry 25 of List 111']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The Supreme Court after elaborate discussion of the words public policy and opposed to public policy upheld the view of the Rajasthan High Court.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court', 'Rajasthan High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court', 'Rajasthan High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Supreme Court after elaborate discussion of the words public policy and opposed to public policy upheld the view of the Rajasthan High Court. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court', 'Rajasthan High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"(PER B.R.GAVAI, J) The State of Maharashtra has approached this Court being 2 Criminal Application No.258.13 (APL) aggrieved by the order passed by the learned Judicial Magistrate, First th Class, Nagpur in Misc. Criminal Application No. 683 of 2013, dated 30 March, 2013, thereby directing investigation to be conducted as per the provisions of Section 156(3) of the Code of Criminal Procedure on a complaint filed by respondent herein.","{""CASE_NUMBER"": ""['Criminal Application No.258.13 (APL)', 'Misc. Criminal Application No. 683 of 2013']"", ""COURT"": ""['Judicial Magistrate, First th Class, Nagpur']"", ""DATE"": ""['30 March, 2013']"", ""GPE"": ""[]"", ""JUDGE"": ""['B.R.GAVAI']"", ""LAWYER"": ""[]"", ""ORG"": ""['State of Maharashtra']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 156(3)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Criminal Application No.258.13 (APL)', 'Misc. Criminal Application No. 683 of 2013']"", 'COURT': ""['Judicial Magistrate, First th Class, Nagpur']"", 'DATE': ""['30 March, 2013']"", 'GPE': '[]', 'JUDGE': ""['B.R.GAVAI']"", 'LAWYER': '[]', 'ORG': ""['State of Maharashtra']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 156(3)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Code of Criminal Procedure']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (PER B.R.GAVAI, J) The State of Maharashtra has approached this Court being 2 Criminal Application No.258.13 (APL) aggrieved by the order passed by the learned Judicial Magistrate, First th Class, Nagpur in Misc. Criminal Application No. 683 of 2013, dated 30 March, 2013, thereby directing investigation to be conducted as per the provisions of Section 156(3) of the Code of Criminal Procedure on a complaint filed by respondent herein. [/INST]
 {""CASE_NUMBER"": ""['Criminal Application No.258.13 (APL)', 'Misc. Criminal Application No. 683 of 2013']"", ""COURT"": ""['Judicial Magistrate, First th Class, Nagpur']"", ""DATE"": ""['30 March, 2013']"", ""GPE"": ""[]"", ""JUDGE"": ""['B.R.GAVAI']"", ""LAWYER"": ""[]"", ""ORG"": ""['State of Maharashtra']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 156(3)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure']"", ""WITNESS"": ""[]""} </s>"
"That it was further revealed during the investigation that as per the instructions of accused No.17, accused No.25 established contact over phone with accused No.24, and that accused No.25 introduced himself to accused No.24 as Nayeem by concealing his original name; that accused No.25 used to send FIC notes to accused No.24, who in turn circulated the same in Uttar Pradesh and Delhi in association with accused No.23.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Uttar Pradesh', 'Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Nayeem']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Uttar Pradesh', 'Delhi']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Nayeem']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: That it was further revealed during the investigation that as per the instructions of accused No.17, accused No.25 established contact over phone with accused No.24, and that accused No.25 introduced himself to accused No.24 as Nayeem by concealing his original name; that accused No.25 used to send FIC notes to accused No.24, who in turn circulated the same in Uttar Pradesh and Delhi in association with accused No.23. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Uttar Pradesh', 'Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Nayeem']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This aspect of the matter Judgment apeal275.00 was examined in Shankarlal case where this Court observed thus: [SCC para 30, p. 43: SCC (Cri) p. 322] ""Besides, falsity of defence cannot take the place of proof of facts which the prosecution has to establish in order to succeed.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shankarlal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['SCC para 30, p. 43: SCC (Cri) p. 322']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Shankarlal']"", 'PETITIONER': '[]', 'PRECEDENT': ""['SCC para 30, p. 43: SCC (Cri) p. 322']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This aspect of the matter Judgment apeal275.00 was examined in Shankarlal case where this Court observed thus: [SCC para 30, p. 43: SCC (Cri) p. 322] ""Besides, falsity of defence cannot take the place of proof of facts which the prosecution has to establish in order to succeed. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Shankarlal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['SCC para 30, p. 43: SCC (Cri) p. 322']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"However, after the Constitution every High Court has been conferred with the power to issue writs under Article 226 and these are original proceeding.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 226']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 226']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: However, after the Constitution every High Court has been conferred with the power to issue writs under Article 226 and these are original proceeding. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 226']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution']"", ""WITNESS"": ""[]""} </s>"
Further if that is the real position then even the quashing of the present order of the Labour Court should not make any difference for the 1st respondent.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Further if that is the real position then even the quashing of the present order of the Labour Court should not make any difference for the 1st respondent. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We are not impressed by the stand taken by the petitioner.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We are not impressed by the stand taken by the petitioner. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The learned Judges were unable to agree with the decision given by another Bench of this Court consisting of Kumarayya, C.J., and Kondaiah, J., in T.R.C. No. 65 of 1966 on 18th June, 1969.","{""CASE_NUMBER"": ""['T.R.C. No. 65 of 1966']"", ""COURT"": ""[]"", ""DATE"": ""['18th June, 1969']"", ""GPE"": ""[]"", ""JUDGE"": ""['Kumarayya', 'Kondaiah']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['T.R.C. No. 65 of 1966']"", 'COURT': '[]', 'DATE': ""['18th June, 1969']"", 'GPE': '[]', 'JUDGE': ""['Kumarayya', 'Kondaiah']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The learned Judges were unable to agree with the decision given by another Bench of this Court consisting of Kumarayya, C.J., and Kondaiah, J., in T.R.C. No. 65 of 1966 on 18th June, 1969. [/INST]
 {""CASE_NUMBER"": ""['T.R.C. No. 65 of 1966']"", ""COURT"": ""[]"", ""DATE"": ""['18th June, 1969']"", ""GPE"": ""[]"", ""JUDGE"": ""['Kumarayya', 'Kondaiah']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Tribunal has recorded the finding that the owner of the vehicle [Respondents 6 and 7] has knowingly handed over the Crane to RW1-Muthusamy who did not have a special endorsement to drive the vehicle in question.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Muthusamy']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Muthusamy']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Tribunal has recorded the finding that the owner of the vehicle [Respondents 6 and 7] has knowingly handed over the Crane to RW1-Muthusamy who did not have a special endorsement to drive the vehicle in question. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Muthusamy']""} </s>"
It was that a fixed amount of Rs. 250 per month was payable to the parties as remuneration for their services from the date of commencement of the business up to the date of the actual starting of the work.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was that a fixed amount of Rs. 250 per month was payable to the parties as remuneration for their services from the date of commencement of the business up to the date of the actual starting of the work. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Section 138B provides for the admissibility of a statement made and signed by any person before any Gazetted Officer of the Customs during any enquiry or proceeding under the Act.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 138B']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 138B']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Section 138B provides for the admissibility of a statement made and signed by any person before any Gazetted Officer of the Customs during any enquiry or proceeding under the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 138B']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The decision whether or not to grant an interlocutory injunction has to be taken at a time when the exercise of the legal right asserted by the plaintiff and its alleged violation are both contested and remain uncertain till they are established on evidence at the trial.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The decision whether or not to grant an interlocutory injunction has to be taken at a time when the exercise of the legal right asserted by the plaintiff and its alleged violation are both contested and remain uncertain till they are established on evidence at the trial. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"This Order is modified/corrected by Speaking to Minutes Order Cri. Applns. 1346,1347, 1348/05 1 In The High Court At Bombay Appellate Side, Bench At Aurangabad Criminal Application No. 1346 Of 2005 Mr. Amol Shripal Sheth ....Applicant. Versus M/s. Hari Om Trading Co. & Ors. ....Respondents. Mr. S.B. Lakhotiya h/f. Mr. R.F. Totala, Advocate for applicant. Mr. K.C. Sant, Advocate for respondent No. 1. With Criminal Application No. 1347 Of 2005 Mr. Amol Shripal Sheth ....Applicant. Versus M/s. Haryana Trading Co. & Ors. ....Respondents. Mr. S.B. Lakhotiya h/f. Mr. R.F. Totala, Advocate for applicant. Mr. K.C. Sant, Advocate for respondent No. 1. With Criminal Application No. 1348 Of 2005 Mr. Amol Shripal Sheth ....Applicant. Versus M/s. Sunderpuriya Brothers & Ors. ....Respondents. This Order is modified/corrected by Speaking to Minutes Order Cri. Applns. 1346,1347, 1348/05 2 Mr. S.B. Lakhotiya h/f. Mr. R.F. Totala, Advocate for applicant. Mr. K.C. Sant, Advocate for respondent No. 1. Coram : T. V. Nalawade, J. Dated : 3rd October, 2012. Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['T. V. Nalawade']"", ""LAWYER"": ""['S.B. Lakhotiya', 'R.F. Totala', 'K.C. Sant']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Amol Shripal Sheth']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Hari Om Trading Co.', 'Haryana Trading Co.', 'Sunderpuriya Brothers']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court At Bombay']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['T. V. Nalawade']"", 'LAWYER': ""['S.B. Lakhotiya', 'R.F. Totala', 'K.C. Sant']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Amol Shripal Sheth']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Hari Om Trading Co.', 'Haryana Trading Co.', 'Sunderpuriya Brothers']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This Order is modified/corrected by Speaking to Minutes Order Cri. Applns. 1346,1347, 1348/05 1 In The High Court At Bombay Appellate Side, Bench At Aurangabad Criminal Application No. 1346 Of 2005 Mr. Amol Shripal Sheth ....Applicant. Versus M/s. Hari Om Trading Co. & Ors. ....Respondents. Mr. S.B. Lakhotiya h/f. Mr. R.F. Totala, Advocate for applicant. Mr. K.C. Sant, Advocate for respondent No. 1. With Criminal Application No. 1347 Of 2005 Mr. Amol Shripal Sheth ....Applicant. Versus M/s. Haryana Trading Co. & Ors. ....Respondents. Mr. S.B. Lakhotiya h/f. Mr. R.F. Totala, Advocate for applicant. Mr. K.C. Sant, Advocate for respondent No. 1. With Criminal Application No. 1348 Of 2005 Mr. Amol Shripal Sheth ....Applicant. Versus M/s. Sunderpuriya Brothers & Ors. ....Respondents. This Order is modified/corrected by Speaking to Minutes Order Cri. Applns. 1346,1347, 1348/05 2 Mr. S.B. Lakhotiya h/f. Mr. R.F. Totala, Advocate for applicant. Mr. K.C. Sant, Advocate for respondent No. 1. Coram : T. V. Nalawade, J. Dated : 3rd October, 2012. Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['T. V. Nalawade']"", ""LAWYER"": ""['S.B. Lakhotiya', 'R.F. Totala', 'K.C. Sant']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Amol Shripal Sheth']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Hari Om Trading Co.', 'Haryana Trading Co.', 'Sunderpuriya Brothers']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Pnp 1/12 APPL728-11.10.sxw In The High Court Of Judicature At Bombay Ordinary Original Civil Jurisdiction Appeal (Lodg.) No.728 Of 2012 In Notice Of Motion No.471 Of 2012 And Notice Of Motion No.496 Of 2012 And Notice Of Motion No.1564 Of 2012 In Suit No.1894 Of 2010 Alok Agarwal and others ..Appellants/ (Orig. Defendants 6 and 7) versus Punam Co-operative Housing Society Ltd. ig ..Respondent No.1/ and others (Orig. Plaintiff / Society) and Pratap Issardas Bhatia and others ..Respondents 2 to 7 (Orig. Defendants 1 to 5) ..... Mr. F.E. Devitre, Senior Advocate with Mr. Vivek Menon, Ms. Shamina Taly, Ms. Mallika Taly and Mr. Mustafa Kachwala i/b S. Mahomedbhai & Co. for the Appellant. Mr. K.T. Kukreja with Mr. Mukesh B. Bhagat for the Respondents. ...... Coram : Dr.D.Y.Chandrachud, and A.A.Sayed, Jj. 11 October 2012. Oral Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D.Y.Chandrachud', 'A.A.Sayed']"", ""LAWYER"": ""['F.E. Devitre', 'Vivek Menon', 'Shamina Taly', 'Mallika Taly', 'Mustafa Kachwala', 'K.T. Kukreja', 'Mukesh B. Bhagat']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Alok Agarwal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Punam Co-operative Housing Society Ltd.', 'Pratap Issardas Bhatia']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Bombay']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['D.Y.Chandrachud', 'A.A.Sayed']"", 'LAWYER': ""['F.E. Devitre', 'Vivek Menon', 'Shamina Taly', 'Mallika Taly', 'Mustafa Kachwala', 'K.T. Kukreja', 'Mukesh B. Bhagat']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Alok Agarwal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Punam Co-operative Housing Society Ltd.', 'Pratap Issardas Bhatia']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Pnp 1/12 APPL728-11.10.sxw In The High Court Of Judicature At Bombay Ordinary Original Civil Jurisdiction Appeal (Lodg.) No.728 Of 2012 In Notice Of Motion No.471 Of 2012 And Notice Of Motion No.496 Of 2012 And Notice Of Motion No.1564 Of 2012 In Suit No.1894 Of 2010 Alok Agarwal and others ..Appellants/ (Orig. Defendants 6 and 7) versus Punam Co-operative Housing Society Ltd. ig ..Respondent No.1/ and others (Orig. Plaintiff / Society) and Pratap Issardas Bhatia and others ..Respondents 2 to 7 (Orig. Defendants 1 to 5) ..... Mr. F.E. Devitre, Senior Advocate with Mr. Vivek Menon, Ms. Shamina Taly, Ms. Mallika Taly and Mr. Mustafa Kachwala i/b S. Mahomedbhai & Co. for the Appellant. Mr. K.T. Kukreja with Mr. Mukesh B. Bhagat for the Respondents. ...... Coram : Dr.D.Y.Chandrachud, and A.A.Sayed, Jj. 11 October 2012. Oral Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Bombay']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D.Y.Chandrachud', 'A.A.Sayed']"", ""LAWYER"": ""['F.E. Devitre', 'Vivek Menon', 'Shamina Taly', 'Mallika Taly', 'Mustafa Kachwala', 'K.T. Kukreja', 'Mukesh B. Bhagat']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Alok Agarwal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Punam Co-operative Housing Society Ltd.', 'Pratap Issardas Bhatia']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It was further observed that it was not the case of the respondent No. 1 who had moved the application that he was not conversant with the Hindi language in which the petition had been written noticing that the said respondent had himself filed I.A. Nos. 10, 11, 12 and 13 of 1980, which were written in the Hindi language.","{""CASE_NUMBER"": ""['I.A. Nos. 10, 11, 12 and 13 of 1980']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['I.A. Nos. 10, 11, 12 and 13 of 1980']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It was further observed that it was not the case of the respondent No. 1 who had moved the application that he was not conversant with the Hindi language in which the petition had been written noticing that the said respondent had himself filed I.A. Nos. 10, 11, 12 and 13 of 1980, which were written in the Hindi language. [/INST]
 {""CASE_NUMBER"": ""['I.A. Nos. 10, 11, 12 and 13 of 1980']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It has been pointed out by Wallace J. in Satrucherla Shivakanda Raju v. Rajah of Jeypore, AIR 1927 Mad 627 that it is an inroad on the general proposition that a court has no power to sell property outside its territorial jurisdiction.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Wallace']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Satrucherla Shivakanda Raju v. Rajah of Jeypore, AIR 1927 Mad 627']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Wallace']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Satrucherla Shivakanda Raju v. Rajah of Jeypore, AIR 1927 Mad 627']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It has been pointed out by Wallace J. in Satrucherla Shivakanda Raju v. Rajah of Jeypore, AIR 1927 Mad 627 that it is an inroad on the general proposition that a court has no power to sell property outside its territorial jurisdiction. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Wallace']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Satrucherla Shivakanda Raju v. Rajah of Jeypore, AIR 1927 Mad 627']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 In The Court Of Ms. Poonam Chaudhary, Adj­03, Saket Court Complex, New Delhi Civil Suit No. 308/12 Unique I.D. No. 02406C0200462011 In The Matter Of : ­ Shri Satnam Singh Chinna S/o Late Smt. Harbans Kaur and Late S. Tarlochan Singh, R/o B­8, 3rd Floor, Dayanand Colony, Lajpat Nagar­IV, New Delhi­110024 ....Plaintiff. Versus Shri Phool Chand Tanwar Son of shri V. K. Tanwar, B­6 (Ground Floor), Dayanand Colony, Lajpat Nagar­IV, New Delhi­110024 .... Defendant. Date of Institution : 06.08.2011 Date of Arguments : 15.01.2014 Date of Judgment : 15.01.2014. Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Adj\\xad03, Saket Court Complex, New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Poonam Chaudhary']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Satnam Singh Chinna']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Phool Chand Tanwar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Adj\\xad03, Saket Court Complex, New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Poonam Chaudhary']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Satnam Singh Chinna']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Phool Chand Tanwar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 In The Court Of Ms. Poonam Chaudhary, Adj­03, Saket Court Complex, New Delhi Civil Suit No. 308/12 Unique I.D. No. 02406C0200462011 In The Matter Of : ­ Shri Satnam Singh Chinna S/o Late Smt. Harbans Kaur and Late S. Tarlochan Singh, R/o B­8, 3rd Floor, Dayanand Colony, Lajpat Nagar­IV, New Delhi­110024 ....Plaintiff. Versus Shri Phool Chand Tanwar Son of shri V. K. Tanwar, B­6 (Ground Floor), Dayanand Colony, Lajpat Nagar­IV, New Delhi­110024 .... Defendant. Date of Institution : 06.08.2011 Date of Arguments : 15.01.2014 Date of Judgment : 15.01.2014. Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Adj\\xad03, Saket Court Complex, New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Poonam Chaudhary']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Satnam Singh Chinna']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Phool Chand Tanwar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"To buttress this proposition, Shri Kapila relied on the decision of the Hon'ble Madras High Court rendered in the case of Pareira & Roche v. CIT, 61 ITR 371 (Mad).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Kapila']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Pareira & Roche v. CIT, 61 ITR 371 (Mad)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Madras High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Kapila']"", 'PETITIONER': '[]', 'PRECEDENT': ""['Pareira & Roche v. CIT, 61 ITR 371 (Mad)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: To buttress this proposition, Shri Kapila relied on the decision of the Hon'ble Madras High Court rendered in the case of Pareira & Roche v. CIT, 61 ITR 371 (Mad). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Kapila']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Pareira & Roche v. CIT, 61 ITR 371 (Mad)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Petitioner: Commissioner Of Income-Tax West Bengal,Calcutta Vs. Respondent: Smt. Anusuya Devi Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Commissioner Of Income-Tax West Bengal,Calcutta']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Anusuya Devi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Commissioner Of Income-Tax West Bengal,Calcutta']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Anusuya Devi']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Commissioner Of Income-Tax West Bengal,Calcutta Vs. Respondent: Smt. Anusuya Devi Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Commissioner Of Income-Tax West Bengal,Calcutta']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Anusuya Devi']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
These aspects were highlighted by one of us (D. K. Jain J) in Apogee International Limited v. Union of India [(1996) 220 ITR 248].,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D. K. Jain']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Apogee International Limited v. Union of India [(1996) 220 ITR 248]']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['D. K. Jain']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Apogee International Limited v. Union of India [(1996) 220 ITR 248]']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: These aspects were highlighted by one of us (D. K. Jain J) in Apogee International Limited v. Union of India [(1996) 220 ITR 248]. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['D. K. Jain']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Apogee International Limited v. Union of India [(1996) 220 ITR 248]']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Where neither clause (a) nor clause (b) applies, either because there is no agreement or because there is no controlled price, the seller has to be paid, as per clause (c), a price calculated at the market rate prevailing in the locality at the date of the sale.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Where neither clause (a) nor clause (b) applies, either because there is no agreement or because there is no controlled price, the seller has to be paid, as per clause (c), a price calculated at the market rate prevailing in the locality at the date of the sale. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The question then is :. Is an accused person furnishing evidence when he. is giving his specimen (1) [1954] S.C.R 1077. handwriting or impressions of his fingers, or palm or foot ?","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The question then is :. Is an accused person furnishing evidence when he. is giving his specimen (1) [1954] S.C.R 1077. handwriting or impressions of his fingers, or palm or foot ? [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The case for the prosecution briefly was that the house of Rahayya in Dudyia was burgied on the night of April 20, 1957.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['April 20, 1957']"", ""GPE"": ""['Dudyia']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Rahayya']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['April 20, 1957']"", 'GPE': ""['Dudyia']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Rahayya']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The case for the prosecution briefly was that the house of Rahayya in Dudyia was burgied on the night of April 20, 1957. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['April 20, 1957']"", ""GPE"": ""['Dudyia']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Rahayya']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The State by PSI, Gandhinagar Police Station, Bellary laid a charge sheet against the appellants/accused for the offences punishable under Sections 324, 504, 506, 307 read with Section 34 of IPC.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Gandhinagar Police Station, Bellary']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 324, 504, 506, 307 read with Section 34']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Gandhinagar Police Station, Bellary']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Sections 324, 504, 506, 307 read with Section 34']"", 'RESPONDENT': '[]', 'STATUTE': ""['IPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The State by PSI, Gandhinagar Police Station, Bellary laid a charge sheet against the appellants/accused for the offences punishable under Sections 324, 504, 506, 307 read with Section 34 of IPC. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Gandhinagar Police Station, Bellary']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Sections 324, 504, 506, 307 read with Section 34']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['IPC']"", ""WITNESS"": ""[]""} </s>"
"It is not the practice of Courts to decide in a writ peti- tion disputed questions which cannot be satisfactorily decided without taking evidence. Rashid Ahmed v. Munsicipal Board, Kairana, (1950) S.C.R. 566 and K. S. Rashid and Son v. The Income-tax Investigation Commission (1954) S.C.R. 738, relied on. (2) Tile Indian Evidence Act","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Rashid Ahmed v. Munsicipal Board, Kairana, (1950) S.C.R. 566', 'K. S. Rashid and Son v. The Income-tax Investigation Commission (1954) S.C.R. 738']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Rashid Ahmed v. Munsicipal Board, Kairana, (1950) S.C.R. 566', 'K. S. Rashid and Son v. The Income-tax Investigation Commission (1954) S.C.R. 738']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It is not the practice of Courts to decide in a writ peti- tion disputed questions which cannot be satisfactorily decided without taking evidence. Rashid Ahmed v. Munsicipal Board, Kairana, (1950) S.C.R. 566 and K. S. Rashid and Son v. The Income-tax Investigation Commission (1954) S.C.R. 738, relied on. (2) Tile Indian Evidence Act [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Rashid Ahmed v. Munsicipal Board, Kairana, (1950) S.C.R. 566', 'K. S. Rashid and Son v. The Income-tax Investigation Commission (1954) S.C.R. 738']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"While arring at his conclusions, the Assessing Officer has taken support from the CBDT Circular No. 495 dated 22-9-1987 and the example given in para 36.5 of the said circular illustrating how the new section will be applied.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22-9-1987']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['22-9-1987']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: While arring at his conclusions, the Assessing Officer has taken support from the CBDT Circular No. 495 dated 22-9-1987 and the example given in para 36.5 of the said circular illustrating how the new section will be applied. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22-9-1987']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Aggrieved by the said order, she filed an appeal in APNo.129 of 1995 on 18-5-1995 and by order dated 21-4-1998 the STAT granted permit subject to the permission of the Transport Comm issioner.","{""CASE_NUMBER"": ""['APNo.129 of 1995']"", ""COURT"": ""[]"", ""DATE"": ""['18-5-1995', '21-4-1998']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['APNo.129 of 1995']"", 'COURT': '[]', 'DATE': ""['18-5-1995', '21-4-1998']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Aggrieved by the said order, she filed an appeal in APNo.129 of 1995 on 18-5-1995 and by order dated 21-4-1998 the STAT granted permit subject to the permission of the Transport Comm issioner. [/INST]
 {""CASE_NUMBER"": ""['APNo.129 of 1995']"", ""COURT"": ""[]"", ""DATE"": ""['18-5-1995', '21-4-1998']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In view of the preponderance of the authorities, we are unable to give effect to the argument of the Id. representative for the assessee based on the judgment of the Gujarat High Court in Addl. CIT v. Laxmi Agents (supra) that the assessee should be allowed depreciation under Section 32 in respect of the properties, the rental income from which is assessed under the head ""income from house property"".","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Gujarat High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Addl. CIT v. Laxmi Agents']"", ""PROVISION"": ""['Section 32']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Gujarat High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Addl. CIT v. Laxmi Agents']"", 'PROVISION': ""['Section 32']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In view of the preponderance of the authorities, we are unable to give effect to the argument of the Id. representative for the assessee based on the judgment of the Gujarat High Court in Addl. CIT v. Laxmi Agents (supra) that the assessee should be allowed depreciation under Section 32 in respect of the properties, the rental income from which is assessed under the head ""income from house property"". [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Gujarat High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Addl. CIT v. Laxmi Agents']"", ""PROVISION"": ""['Section 32']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Xerox copies of certain Customs passed Bills of Entry for T.V. Picture Tubes and Plastic Moulded parts cleared under paragraph 186(9) have been produced and relied on by the writ petitioner in support of his contention.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Xerox copies of certain Customs passed Bills of Entry for T.V. Picture Tubes and Plastic Moulded parts cleared under paragraph 186(9) have been produced and relied on by the writ petitioner in support of his contention. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam MACA.No. 1472 of 2004() 1. V.R. Raveendran, S/O. Velayudhan Nair, ... Petitioner Vs 1. M. Sarojini, W/O. Late K.A. Chandran, ... Respondent 2. Shyam Prasad, S/O. Late K.A.Chandran 3. C. Krishna Kumar, S/O.Late K.A.Chandran 4. Binu, S/O. Late Viswanathan 5. The New India Assurance Company Ltd., For Petitioner :Sri.S.V.Balakrishna Iyer (Sr.) For Respondent :Sri.V.Chitambaresh The Hon'ble Mr. Justice R.Basant The Hon'ble Mrs. Justice M.C.Hari Rani Dated :20/01/2010 O R D E R R.Basant & M.C. Hari Rani,Jj ============================== M.A.C.A. No. 1472 Of 2004 ============================ Dated This The 20Th Day Of January 2010 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['R.Basant', 'M.C.Hari Rani', 'M.C. Hari Rani']"", ""LAWYER"": ""['S.V.Balakrishna Iyer', 'V.Chitambaresh']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['V.R. Raveendran']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['M. Sarojini', 'Shyam Prasad', 'C. Krishna Kumar', 'Binu', 'New India Assurance Company Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['R.Basant', 'M.C.Hari Rani', 'M.C. Hari Rani']"", 'LAWYER': ""['S.V.Balakrishna Iyer', 'V.Chitambaresh']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['V.R. Raveendran']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['M. Sarojini', 'Shyam Prasad', 'C. Krishna Kumar', 'Binu', 'New India Assurance Company Ltd.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam MACA.No. 1472 of 2004() 1. V.R. Raveendran, S/O. Velayudhan Nair, ... Petitioner Vs 1. M. Sarojini, W/O. Late K.A. Chandran, ... Respondent 2. Shyam Prasad, S/O. Late K.A.Chandran 3. C. Krishna Kumar, S/O.Late K.A.Chandran 4. Binu, S/O. Late Viswanathan 5. The New India Assurance Company Ltd., For Petitioner :Sri.S.V.Balakrishna Iyer (Sr.) For Respondent :Sri.V.Chitambaresh The Hon'ble Mr. Justice R.Basant The Hon'ble Mrs. Justice M.C.Hari Rani Dated :20/01/2010 O R D E R R.Basant & M.C. Hari Rani,Jj ============================== M.A.C.A. No. 1472 Of 2004 ============================ Dated This The 20Th Day Of January 2010 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['R.Basant', 'M.C.Hari Rani', 'M.C. Hari Rani']"", ""LAWYER"": ""['S.V.Balakrishna Iyer', 'V.Chitambaresh']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['V.R. Raveendran']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['M. Sarojini', 'Shyam Prasad', 'C. Krishna Kumar', 'Binu', 'New India Assurance Company Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In this case, the accused was 32 years old.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this case, the accused was 32 years old. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Rules were subsequently amended by the Railway Protection (Amendment) Rules, 1973 (here in after to be referred as 'the Amendment Rules') promulgated by Notification dated' September 20, 1973, published in the Gazette of India dated September 20, 1973.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['September 20, 1973']"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Railway Protection (Amendment) Rules, 1973']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['September 20, 1973']"", 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Railway Protection (Amendment) Rules, 1973']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Rules were subsequently amended by the Railway Protection (Amendment) Rules, 1973 (here in after to be referred as 'the Amendment Rules') promulgated by Notification dated' September 20, 1973, published in the Gazette of India dated September 20, 1973. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['September 20, 1973']"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Railway Protection (Amendment) Rules, 1973']"", ""WITNESS"": ""[]""} </s>"
The 3rd respondent Sarpanch filed O. P. No 33 of 1966 on the file of the Principal Munsif-Magistrate's Court.,"{""CASE_NUMBER"": ""['O. P. No 33 of 1966']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['O. P. No 33 of 1966']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The 3rd respondent Sarpanch filed O. P. No 33 of 1966 on the file of the Principal Munsif-Magistrate's Court. [/INST]
 {""CASE_NUMBER"": ""['O. P. No 33 of 1966']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Merely because Iyer had gone to foreign country, he could not be said to have been employed outside India.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Iyer']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Iyer']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Merely because Iyer had gone to foreign country, he could not be said to have been employed outside India. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Iyer']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"(1) Whether the writ petitioner association has any locus standi to maintain the writ application? (2) Whether Anglo Indian community is a minority community within the meaning of clause (1) of Art. 30 of the Constitution? (3) Whether clauses 11, 15 and proviso to clause 24(f) are ultra vires of clause (1) of Art. 30 of the Constitution of India?","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['clause (1) of Art. 30', 'clauses 11, 15', 'clause 24(f)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution', 'Constitution of India']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['clause (1) of Art. 30', 'clauses 11, 15', 'clause 24(f)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Constitution', 'Constitution of India']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (1) Whether the writ petitioner association has any locus standi to maintain the writ application? (2) Whether Anglo Indian community is a minority community within the meaning of clause (1) of Art. 30 of the Constitution? (3) Whether clauses 11, 15 and proviso to clause 24(f) are ultra vires of clause (1) of Art. 30 of the Constitution of India? [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['clause (1) of Art. 30', 'clauses 11, 15', 'clause 24(f)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Constitution', 'Constitution of India']"", ""WITNESS"": ""[]""} </s>"
"One more document which was filed on record by the petitioners was the copy of the mutation certificate issued by the DDA showing Tej Singh, Manohar, Lal and the petitioners herein to be 1/6th shareholders of the property bearing no. 2956/41, Beadon Pura, Karol Bagh, New Delhi.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Beadon Pura', 'Karol Bagh', 'New Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['DDA']"", ""OTHER_PERSON"": ""['Tej Singh', 'Manohar', 'Lal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Beadon Pura', 'Karol Bagh', 'New Delhi']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['DDA']"", 'OTHER_PERSON': ""['Tej Singh', 'Manohar', 'Lal']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: One more document which was filed on record by the petitioners was the copy of the mutation certificate issued by the DDA showing Tej Singh, Manohar, Lal and the petitioners herein to be 1/6th shareholders of the property bearing no. 2956/41, Beadon Pura, Karol Bagh, New Delhi. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Beadon Pura', 'Karol Bagh', 'New Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['DDA']"", ""OTHER_PERSON"": ""['Tej Singh', 'Manohar', 'Lal']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The first respondent challenged the said judgment and the criminal appeal filed by her allowed by the First Additional Sessions Judge, Thiruvananthapuram whereby the conviction and sentence imposed on the first respondent was set aside and the appellant was acquitted.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['First Additional Sessions Judge, Thiruvananthapuram']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['First Additional Sessions Judge, Thiruvananthapuram']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The first respondent challenged the said judgment and the criminal appeal filed by her allowed by the First Additional Sessions Judge, Thiruvananthapuram whereby the conviction and sentence imposed on the first respondent was set aside and the appellant was acquitted. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['First Additional Sessions Judge, Thiruvananthapuram']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"15. it is this notification, dated 22nd August, 1959, fixing minimum rates of wages in respect of timber industry that is the subject of attack in the writ petitions coming under groups 1 and 2.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22nd August, 1959']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['22nd August, 1959']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 15. it is this notification, dated 22nd August, 1959, fixing minimum rates of wages in respect of timber industry that is the subject of attack in the writ petitions coming under groups 1 and 2. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['22nd August, 1959']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Petitioner No. 2, Jai Narain Somani, is a shareholder of this company,","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Jai Narain Somani']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Jai Narain Somani']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner No. 2, Jai Narain Somani, is a shareholder of this company, [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Jai Narain Somani']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The effect of this dicta or observation of the Apex Court is that any stipulation in a contract of employment fixing the term of employment or providing for termination of service by giving a notice for certain specified period of time or payment of wages in lieu thereof will be void, arbitrary and discriminatory and also being opposed to the public policy under Section 23 of the Contract Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 23']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Contract Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Apex Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 23']"", 'RESPONDENT': '[]', 'STATUTE': ""['Contract Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The effect of this dicta or observation of the Apex Court is that any stipulation in a contract of employment fixing the term of employment or providing for termination of service by giving a notice for certain specified period of time or payment of wages in lieu thereof will be void, arbitrary and discriminatory and also being opposed to the public policy under Section 23 of the Contract Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Apex Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 23']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Contract Act']"", ""WITNESS"": ""[]""} </s>"
The first respondent-Government of Kerala has filed a counter affidavit supporting the impugned order.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Government of Kerala']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Government of Kerala']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The first respondent-Government of Kerala has filed a counter affidavit supporting the impugned order. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Government of Kerala']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
I may note here that the plaintiff had filed I.A.No.5910/2003 claiming that the defendant had damaged the suit property and thereafter the Local Commissioner was appointed.,"{""CASE_NUMBER"": ""['I.A.No.5910/2003']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['I.A.No.5910/2003']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: I may note here that the plaintiff had filed I.A.No.5910/2003 claiming that the defendant had damaged the suit property and thereafter the Local Commissioner was appointed. [/INST]
 {""CASE_NUMBER"": ""['I.A.No.5910/2003']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Similar view is taken by the Supreme Court in the case of State of Gujarat v. Patel Ramjibhai Danabhai reported in (1979) 3 Supreme Court Cases 347.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Gujarat v. Patel Ramjibhai Danabhai reported in (1979) 3 Supreme Court Cases 347']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['State of Gujarat v. Patel Ramjibhai Danabhai reported in (1979) 3 Supreme Court Cases 347']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Similar view is taken by the Supreme Court in the case of State of Gujarat v. Patel Ramjibhai Danabhai reported in (1979) 3 Supreme Court Cases 347. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Gujarat v. Patel Ramjibhai Danabhai reported in (1979) 3 Supreme Court Cases 347']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The contradiction brought out in the cross-examination of P.W.9, in my opinion, has not rendered her testimony unreliable.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The contradiction brought out in the cross-examination of P.W.9, in my opinion, has not rendered her testimony unreliable. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"We have noticed that the decision in Trilok Chandra's case (supra) was relied on, in Reshma Kumari's case (supra) and referred to in Sarla Varma's case (supra).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Trilok Chandra', 'Reshma Kumari', 'Sarla Varma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Trilok Chandra', 'Reshma Kumari', 'Sarla Varma']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We have noticed that the decision in Trilok Chandra's case (supra) was relied on, in Reshma Kumari's case (supra) and referred to in Sarla Varma's case (supra). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Trilok Chandra', 'Reshma Kumari', 'Sarla Varma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
But then it has been argued that the Supreme Court itself subsequently modified its own views in AIR 1964 SC 600 and that termination of service even when the post itself is abolished will attract the operation of Article 311(2).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['AIR 1964 SC 600']"", ""PROVISION"": ""['Article 311(2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['AIR 1964 SC 600']"", 'PROVISION': ""['Article 311(2)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But then it has been argued that the Supreme Court itself subsequently modified its own views in AIR 1964 SC 600 and that termination of service even when the post itself is abolished will attract the operation of Article 311(2). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['AIR 1964 SC 600']"", ""PROVISION"": ""['Article 311(2)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"J.R. MIDHA, J NOVEMBER 18, 2010","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['NOVEMBER 18, 2010']"", ""GPE"": ""[]"", ""JUDGE"": ""['J.R. MIDHA']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['NOVEMBER 18, 2010']"", 'GPE': '[]', 'JUDGE': ""['J.R. MIDHA']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: J.R. MIDHA, J NOVEMBER 18, 2010 [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['NOVEMBER 18, 2010']"", ""GPE"": ""[]"", ""JUDGE"": ""['J.R. MIDHA']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"After the illegal purchase of 268.872 hectares of land from the Birla Group, Sevy Mano Mathew started felling trees from a portion of the land resulting in the Forest Department registering cases against him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Birla Group', 'Forest Department']"", ""OTHER_PERSON"": ""['Sevy Mano Mathew']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Birla Group', 'Forest Department']"", 'OTHER_PERSON': ""['Sevy Mano Mathew']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: After the illegal purchase of 268.872 hectares of land from the Birla Group, Sevy Mano Mathew started felling trees from a portion of the land resulting in the Forest Department registering cases against him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Birla Group', 'Forest Department']"", ""OTHER_PERSON"": ""['Sevy Mano Mathew']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Thereafter the complainant moved an application for the substitution of the AR for the Bank which was allowed vide order dated 26.05.2012 and Syed Mohammed Shabir Shah was substituted as the new AR for the complainant.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['26.05.2012']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Syed Mohammed Shabir Shah']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['26.05.2012']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Syed Mohammed Shabir Shah']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Thereafter the complainant moved an application for the substitution of the AR for the Bank which was allowed vide order dated 26.05.2012 and Syed Mohammed Shabir Shah was substituted as the new AR for the complainant. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['26.05.2012']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Syed Mohammed Shabir Shah']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"PW.1 received letter from Drug Controller for statement of Karnataka as per Ex.P147 and 65 documents from Drug Inspector, Belguam as per Ex.P148 to Ex.P212 and 76 documents from Assistant Drug Controller, Mangalore as per Ex.P213 to Ex.P288.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Karnataka', 'Belguam', 'Mangalore']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Karnataka', 'Belguam', 'Mangalore']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: PW.1 received letter from Drug Controller for statement of Karnataka as per Ex.P147 and 65 documents from Drug Inspector, Belguam as per Ex.P148 to Ex.P212 and 76 documents from Assistant Drug Controller, Mangalore as per Ex.P213 to Ex.P288. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Karnataka', 'Belguam', 'Mangalore']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"So, under Section 2(c), a court for the purpose of the Arbitration Act is a civil court having jurisdiction to decide the questions forming the subject-matter of a reference.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 2(c)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Arbitration Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 2(c)']"", 'RESPONDENT': '[]', 'STATUTE': ""['Arbitration Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: So, under Section 2(c), a court for the purpose of the Arbitration Act is a civil court having jurisdiction to decide the questions forming the subject-matter of a reference. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 2(c)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Arbitration Act']"", ""WITNESS"": ""[]""} </s>"
"Both findings are attacked by his learned Counsel Mr Raj Reddi, advocate representing Mr. T. Bali Reddy while, on the other hand, Miss V. Lakshmi Devi, the learned Government Pleader, tried to support the findings.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Raj Reddi', 'T. Bali Reddy', 'V. Lakshmi Devi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Raj Reddi', 'T. Bali Reddy', 'V. Lakshmi Devi']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Both findings are attacked by his learned Counsel Mr Raj Reddi, advocate representing Mr. T. Bali Reddy while, on the other hand, Miss V. Lakshmi Devi, the learned Government Pleader, tried to support the findings. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Raj Reddi', 'T. Bali Reddy', 'V. Lakshmi Devi']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Sh Ajay Kumar Jain, Presiding Officer: Motor Accident Claims Tribunal: South East District/Saket Courts Complex/New Delhi Suit no. 264/11/09 Fir No. 291/09 Ps. Kalkaji Uid No. 02403C0312532009 Dhanwant Singh & anr Vs. Bal Kishan & ors. Fatal Case 1. Dhanwant Singh S/o Sh. Daujeeram R/o Nagala Duli, Po Nagla Khangar, Tehsil Shikohedbad Distric Firozabad, U.P. 2. Rajni Devi W/o Sh. Dhanwant Singh R/o Nagala Duli, Po Nagla Khangar, Tehsil Shikohedbad Distric Firozabad, U.P. .............Petitioners/claimants Versus 1. Bal Kishan S/o Sh. Jalim Singh (driver) R/o Village jatavu, Ps Narki, District Firozabad, U.P At present: H­16/90, Sangam Vihar, New Delhi­110062 2. Iqbal Singh S/o Sh. Santokh Singh (registered owner) R/o 13/156, Geeta Colony, Delhi ­110031 3. Iffco Tokio General Insurance Co. Ltd. Fai House 2nd floor, 10, Shahid Jeet Singh Marg, Qutub Institutional Area, New Delhi. Suit No­264/11/09, Dhanwant Singh & anr. Vs. Bal Kishan & anr. 1 /18 4. Sh. Sarvesh Pal S/o Ram Gopal (subsequent owner) R/o F­2/888, Sangam Vihar, New Delhi­110062 Also at: R/o Village Gadhiya, Suhagpura, P.S Jaithura, Distt. Eita, U.P. Also at: R/o H. No. H­16/90, Sangam Vihar, Delhi­110062. ......................Respondents Date of Institution : 01.08.2009 Date of reserving judgment/order : 12.08.2014 Date of Pronouncement : 12.08.2014 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Motor Accident Claims Tribunal: South East District/Saket Courts Complex/New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ajay Kumar Jain']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Dhanwant Singh', 'Rajni Devi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Bal Kishan', 'Iqbal Singh', 'Iffco Tokio General Insurance Co. Ltd.', 'Sarvesh Pal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Motor Accident Claims Tribunal: South East District/Saket Courts Complex/New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Ajay Kumar Jain']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Dhanwant Singh', 'Rajni Devi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Bal Kishan', 'Iqbal Singh', 'Iffco Tokio General Insurance Co. Ltd.', 'Sarvesh Pal']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Sh Ajay Kumar Jain, Presiding Officer: Motor Accident Claims Tribunal: South East District/Saket Courts Complex/New Delhi Suit no. 264/11/09 Fir No. 291/09 Ps. Kalkaji Uid No. 02403C0312532009 Dhanwant Singh & anr Vs. Bal Kishan & ors. Fatal Case 1. Dhanwant Singh S/o Sh. Daujeeram R/o Nagala Duli, Po Nagla Khangar, Tehsil Shikohedbad Distric Firozabad, U.P. 2. Rajni Devi W/o Sh. Dhanwant Singh R/o Nagala Duli, Po Nagla Khangar, Tehsil Shikohedbad Distric Firozabad, U.P. .............Petitioners/claimants Versus 1. Bal Kishan S/o Sh. Jalim Singh (driver) R/o Village jatavu, Ps Narki, District Firozabad, U.P At present: H­16/90, Sangam Vihar, New Delhi­110062 2. Iqbal Singh S/o Sh. Santokh Singh (registered owner) R/o 13/156, Geeta Colony, Delhi ­110031 3. Iffco Tokio General Insurance Co. Ltd. Fai House 2nd floor, 10, Shahid Jeet Singh Marg, Qutub Institutional Area, New Delhi. Suit No­264/11/09, Dhanwant Singh & anr. Vs. Bal Kishan & anr. 1 /18 4. Sh. Sarvesh Pal S/o Ram Gopal (subsequent owner) R/o F­2/888, Sangam Vihar, New Delhi­110062 Also at: R/o Village Gadhiya, Suhagpura, P.S Jaithura, Distt. Eita, U.P. Also at: R/o H. No. H­16/90, Sangam Vihar, Delhi­110062. ......................Respondents Date of Institution : 01.08.2009 Date of reserving judgment/order : 12.08.2014 Date of Pronouncement : 12.08.2014 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Motor Accident Claims Tribunal: South East District/Saket Courts Complex/New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Ajay Kumar Jain']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Dhanwant Singh', 'Rajni Devi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Bal Kishan', 'Iqbal Singh', 'Iffco Tokio General Insurance Co. Ltd.', 'Sarvesh Pal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The deceased Izzard was employed at the time of the fatal accident by Industrial Builders Ltd., which were engaged in building operations at Coventry.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Coventry']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Industrial Builders Ltd.']"", ""OTHER_PERSON"": ""['Izzard']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Coventry']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Industrial Builders Ltd.']"", 'OTHER_PERSON': ""['Izzard']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The deceased Izzard was employed at the time of the fatal accident by Industrial Builders Ltd., which were engaged in building operations at Coventry. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Coventry']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Industrial Builders Ltd.']"", ""OTHER_PERSON"": ""['Izzard']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Petitioner: Gursahai Saigal Vs. Respondent: Commissioner Of Income-Tax, Punjab Date Of Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Gursahai Saigal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Commissioner Of Income-Tax, Punjab']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Gursahai Saigal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Commissioner Of Income-Tax, Punjab']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Gursahai Saigal Vs. Respondent: Commissioner Of Income-Tax, Punjab Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Gursahai Saigal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Commissioner Of Income-Tax, Punjab']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
What is the profit or gain which can be said to accrue or arise to the assessee when he makes over his personal asset to the partnership firm as his contribution to its capital?,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: What is the profit or gain which can be said to accrue or arise to the assessee when he makes over his personal asset to the partnership firm as his contribution to its capital? [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Suresh Koshy George Vs. Respondent: The University Of Kerala & Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Suresh Koshy George']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['University Of Kerala']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Suresh Koshy George']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['University Of Kerala']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Suresh Koshy George Vs. Respondent: The University Of Kerala & Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Suresh Koshy George']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['University Of Kerala']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The counsel's point is that impossibility of performance, in the instant case, is a valid excuse against application of the time-bar provisions of Section 11B.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 11B.']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 11B.']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The counsel's point is that impossibility of performance, in the instant case, is a valid excuse against application of the time-bar provisions of Section 11B. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 11B.']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"What is done or omitted to be done in the ""agony of the moment cannot fairly be treated as negligence unless the plaintiff's trade or calling is such that a certain degree of aptitude for dealing with dangerous situations may be expected of him.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: What is done or omitted to be done in the ""agony of the moment cannot fairly be treated as negligence unless the plaintiff's trade or calling is such that a certain degree of aptitude for dealing with dangerous situations may be expected of him. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Reliance was placed on the law laid down in State of Gujarat Vs. Harumal Retumal and others 2008 FAJ 292 (Guj), Koyakutty Vs. Food Inspector 2000 (2) FAC 238 and Shew Chander Mathur and anr Vs. State of Assam and anr., 1991 (1) FAC 9. 26.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Gujarat Vs. Harumal Retumal and others 2008 FAJ 292 (Guj)', 'Koyakutty Vs. Food Inspector 2000 (2) FAC 238', 'Shew Chander Mathur and anr Vs. State of Assam and anr., 1991 (1) FAC 9']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['State of Gujarat Vs. Harumal Retumal and others 2008 FAJ 292 (Guj)', 'Koyakutty Vs. Food Inspector 2000 (2) FAC 238', 'Shew Chander Mathur and anr Vs. State of Assam and anr., 1991 (1) FAC 9']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Reliance was placed on the law laid down in State of Gujarat Vs. Harumal Retumal and others 2008 FAJ 292 (Guj), Koyakutty Vs. Food Inspector 2000 (2) FAC 238 and Shew Chander Mathur and anr Vs. State of Assam and anr., 1991 (1) FAC 9. 26. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Gujarat Vs. Harumal Retumal and others 2008 FAJ 292 (Guj)', 'Koyakutty Vs. Food Inspector 2000 (2) FAC 238', 'Shew Chander Mathur and anr Vs. State of Assam and anr., 1991 (1) FAC 9']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"But that does not prove that the vehicle did not have a permit on 27-7-1990, when the accident occurred.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['27-7-1990']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['27-7-1990']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But that does not prove that the vehicle did not have a permit on 27-7-1990, when the accident occurred. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['27-7-1990']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Case No.: Appeal (civil) 1976 of 1998 Petitioner: Binny Ltd. & Anr. Respondent: V. Sadasivan & Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Binny Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['V. Sadasivan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Binny Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['V. Sadasivan']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Case No.: Appeal (civil) 1976 of 1998 Petitioner: Binny Ltd. & Anr. Respondent: V. Sadasivan & Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Binny Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['V. Sadasivan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
20.Complainant has also filed written arguments wherein he has reiterated and reasserted the facts of the case.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 20.Complainant has also filed written arguments wherein he has reiterated and reasserted the facts of the case. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam WP(C).No. 15194 of 2008(H) 1. P.K.Vijayan, Puthenkandathil House, ... Petitioner Vs 1. The Government Of Kerala, ... Respondent 2. The Kerala State Road Transport 3. The Regional Transport Authority, 4. The Secretary, For Petitioner :Sri.P.Deepak For Respondent :Sri.K.Prabhakaran, Sc, K.S.R.T.C. The Hon'ble Mr. Justice Antony Dominic Dated :24/07/2008 O R D E R Antony Dominic, J. = = = = = = = = = = = = = = = = = = = W.P.(C) Nos.15194, 17813, 18104, 17868, 17987, 17815, 19006, 19824, 19774, 21725, 17876, 16167, 15826, 16430, 21793 and 21093 Of 2008 = = = = = = = = = = = = = = = == = = Dated this the 24th July 2008 J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Antony Dominic']"", ""LAWYER"": ""['P.Deepak', 'K.Prabhakaran']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['P.K.Vijayan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Government Of Kerala', 'Kerala State Road Transport', 'Regional Transport Authority', 'Secretary']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Antony Dominic']"", 'LAWYER': ""['P.Deepak', 'K.Prabhakaran']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['P.K.Vijayan']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Government Of Kerala', 'Kerala State Road Transport', 'Regional Transport Authority', 'Secretary']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam WP(C).No. 15194 of 2008(H) 1. P.K.Vijayan, Puthenkandathil House, ... Petitioner Vs 1. The Government Of Kerala, ... Respondent 2. The Kerala State Road Transport 3. The Regional Transport Authority, 4. The Secretary, For Petitioner :Sri.P.Deepak For Respondent :Sri.K.Prabhakaran, Sc, K.S.R.T.C. The Hon'ble Mr. Justice Antony Dominic Dated :24/07/2008 O R D E R Antony Dominic, J. = = = = = = = = = = = = = = = = = = = W.P.(C) Nos.15194, 17813, 18104, 17868, 17987, 17815, 19006, 19824, 19774, 21725, 17876, 16167, 15826, 16430, 21793 and 21093 Of 2008 = = = = = = = = = = = = = = = == = = Dated this the 24th July 2008 J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Antony Dominic']"", ""LAWYER"": ""['P.Deepak', 'K.Prabhakaran']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['P.K.Vijayan']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Government Of Kerala', 'Kerala State Road Transport', 'Regional Transport Authority', 'Secretary']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"* In The High Court Of Delhi At New Delhi Date of Reserve: 30.7.2009 Date of Order: 17th September, 2009 Ex. P. No. 275/2007 % 17.09.2009 Naval Gent Maritime Limited ... Decree Holder Through: Ms. Anuradha Dutt, Advocate with Ms. Ekta Kapil, Mr. Anish Kapur & Mr. Kuber Dewan, Advocate Versus Shivnath Rai Harnarain (I) Ltd. ... Judgment Debtor Through: Mr. Chetan Sharam, Sr. Advocate with Mr. Anshuj Dhingra and Mr. Anubhav Mehrota, Advs. Justice Shiv Narayan Dhingra 1. Whether reporters of local papers may be allowed to see the judgment? Yes. 2. To be referred to the reporter or not? Yes. 3. Whether judgment should be reported in Digest? Yes. Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Delhi At New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Shiv Narayan Dhingra']"", ""LAWYER"": ""['Anuradha Dutt', 'Ekta Kapil', 'Anish Kapur', 'Kuber Dewan', 'Chetan Sharam', 'Anshuj Dhingra', 'Anubhav Mehrota']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Naval Gent Maritime Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Shivnath Rai Harnarain (I) Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Delhi At New Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Shiv Narayan Dhingra']"", 'LAWYER': ""['Anuradha Dutt', 'Ekta Kapil', 'Anish Kapur', 'Kuber Dewan', 'Chetan Sharam', 'Anshuj Dhingra', 'Anubhav Mehrota']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Naval Gent Maritime Limited']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Shivnath Rai Harnarain (I) Ltd.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: * In The High Court Of Delhi At New Delhi Date of Reserve: 30.7.2009 Date of Order: 17th September, 2009 Ex. P. No. 275/2007 % 17.09.2009 Naval Gent Maritime Limited ... Decree Holder Through: Ms. Anuradha Dutt, Advocate with Ms. Ekta Kapil, Mr. Anish Kapur & Mr. Kuber Dewan, Advocate Versus Shivnath Rai Harnarain (I) Ltd. ... Judgment Debtor Through: Mr. Chetan Sharam, Sr. Advocate with Mr. Anshuj Dhingra and Mr. Anubhav Mehrota, Advs. Justice Shiv Narayan Dhingra 1. Whether reporters of local papers may be allowed to see the judgment? Yes. 2. To be referred to the reporter or not? Yes. 3. Whether judgment should be reported in Digest? Yes. Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Delhi At New Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Shiv Narayan Dhingra']"", ""LAWYER"": ""['Anuradha Dutt', 'Ekta Kapil', 'Anish Kapur', 'Kuber Dewan', 'Chetan Sharam', 'Anshuj Dhingra', 'Anubhav Mehrota']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Naval Gent Maritime Limited']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Shivnath Rai Harnarain (I) Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"""Procedure established by law"" does not end with the pronouncement of sentence; it includes the carrying out of sentence.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: ""Procedure established by law"" does not end with the pronouncement of sentence; it includes the carrying out of sentence. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In fact, the said view taken by the learned Single Judge is in consonance with the decision of the Madras High Court in In re Punya's case and Mohabab Alli's case which were specifically dissented from by the Division Bench in Suresh Babu's case.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Punya', \""Mohabab Alli's\"", \""Suresh Babu's\""]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Madras High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[\'Punya\', ""Mohabab Alli\'s"", ""Suresh Babu\'s""]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In fact, the said view taken by the learned Single Judge is in consonance with the decision of the Madras High Court in In re Punya's case and Mohabab Alli's case which were specifically dissented from by the Division Bench in Suresh Babu's case. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Madras High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Punya', \""Mohabab Alli's\"", \""Suresh Babu's\""]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Therefore, it has been submitted that these instructions cannot be regarded as clarificatory of earlier instructions issued on 2.7.1997.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['2.7.1997']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['2.7.1997']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore, it has been submitted that these instructions cannot be regarded as clarificatory of earlier instructions issued on 2.7.1997. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['2.7.1997']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
We are not entitled to read words into an Act of Parliament unless clear reason for it is to be found within the four corners of the Act itself.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Parliament']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Parliament']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We are not entitled to read words into an Act of Parliament unless clear reason for it is to be found within the four corners of the Act itself. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Parliament']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Bharat Bhushan Vij Vs. Arti Techchandani 2008 (153) DLT 247, in para 4 and 5 it was held that "" the concept of ownership in a landlord tenant litigation governed by the Delhi Rent Control Act, has to be distinguished from the one in a title suit .","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Bharat Bhushan Vij Vs. Arti Techchandani 2008 (153) DLT 247']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Delhi Rent Control Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Bharat Bhushan Vij Vs. Arti Techchandani 2008 (153) DLT 247']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Delhi Rent Control Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Bharat Bhushan Vij Vs. Arti Techchandani 2008 (153) DLT 247, in para 4 and 5 it was held that "" the concept of ownership in a landlord tenant litigation governed by the Delhi Rent Control Act, has to be distinguished from the one in a title suit . [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Bharat Bhushan Vij Vs. Arti Techchandani 2008 (153) DLT 247']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Delhi Rent Control Act']"", ""WITNESS"": ""[]""} </s>"
Petitioner: State Bank Of Patiala & Ors Vs. Respondent: S.K.Sharma Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State Bank Of Patiala']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['S.K.Sharma']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['State Bank Of Patiala']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['S.K.Sharma']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: State Bank Of Patiala & Ors Vs. Respondent: S.K.Sharma Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['State Bank Of Patiala']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['S.K.Sharma']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The petitioners are the legal representatives of the deceased being the wife, two sons and parents of the deceased Shri Neeraj Dubey.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Neeraj Dubey']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Neeraj Dubey']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The petitioners are the legal representatives of the deceased being the wife, two sons and parents of the deceased Shri Neeraj Dubey. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Neeraj Dubey']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The decree-holder examined NAW 1 Dhanraj. NAW 2 Rajendra Kumar and NAW 3 Ummed Mal.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Dhanraj', 'Rajendra Kumar', 'Ummed Mal']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Dhanraj', 'Rajendra Kumar', 'Ummed Mal']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The decree-holder examined NAW 1 Dhanraj. NAW 2 Rajendra Kumar and NAW 3 Ummed Mal. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Dhanraj', 'Rajendra Kumar', 'Ummed Mal']""} </s>"
"It must also weigh the evidence keeping in view the fact that the burden is on the prosecution to prove each and every ingredient of the offence, absence of consent being one of them."" 28.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It must also weigh the evidence keeping in view the fact that the burden is on the prosecution to prove each and every ingredient of the offence, absence of consent being one of them."" 28. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Calcutta High Court in Prasanta Kumar v. The State, AIR 1952 Calcutta 91 and Madhya Pradesh High Court in Narwar Singh & Ors. v. State, [1952] MB 193 at 195 recognised the right of the Magistrate to hold Court in jail for reasons of security for accused, for witnesses or for the Magistrate himself or for other valid reasons.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Calcutta High Court', 'Madhya Pradesh High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Prasanta Kumar v. The State, AIR 1952 Calcutta 91', 'Narwar Singh & Ors. v. State, [1952] MB 193 at 195']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Calcutta High Court', 'Madhya Pradesh High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Prasanta Kumar v. The State, AIR 1952 Calcutta 91', 'Narwar Singh & Ors. v. State, [1952] MB 193 at 195']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Calcutta High Court in Prasanta Kumar v. The State, AIR 1952 Calcutta 91 and Madhya Pradesh High Court in Narwar Singh & Ors. v. State, [1952] MB 193 at 195 recognised the right of the Magistrate to hold Court in jail for reasons of security for accused, for witnesses or for the Magistrate himself or for other valid reasons. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Calcutta High Court', 'Madhya Pradesh High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Prasanta Kumar v. The State, AIR 1952 Calcutta 91', 'Narwar Singh & Ors. v. State, [1952] MB 193 at 195']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As regards signatures appearing at point A on the shipping bill Ex.PW2/A, Surat Kumar stated that these were of the accused.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Surat Kumar']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Surat Kumar']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As regards signatures appearing at point A on the shipping bill Ex.PW2/A, Surat Kumar stated that these were of the accused. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Surat Kumar']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"He shall remove the materials remaining unsold on 15th April to the sale depot before 30th April, on obtaining permission of the Divisional Forest Officer.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He shall remove the materials remaining unsold on 15th April to the sale depot before 30th April, on obtaining permission of the Divisional Forest Officer. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He also referred to the evidence of Dund Singh (D.W. 14) who deposed that he got 7 bighas of land in village Kusmaut.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Kusmaut']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Dund Singh']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Kusmaut']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Dund Singh']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He also referred to the evidence of Dund Singh (D.W. 14) who deposed that he got 7 bighas of land in village Kusmaut. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Kusmaut']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Dund Singh']""} </s>"
"I would add to the said statement the following caution administered by Brewar, J, in Gulf, Colorada and Santa Fe Rly. Co. v. Ellis.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Gulf', 'Colorada']"", ""JUDGE"": ""['Brewar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Gulf', 'Colorada']"", 'JUDGE': ""['Brewar']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: I would add to the said statement the following caution administered by Brewar, J, in Gulf, Colorada and Santa Fe Rly. Co. v. Ellis. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Gulf', 'Colorada']"", ""JUDGE"": ""['Brewar']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The connected suit, O. S. No. 44 of 1950, was filed by Venkatanarasayyamma, Rajamani alias Mahalakshamma and Lachamma, who are defendants 2, 3 and 1 respectively in the other suit, for a declaration of their title to and possession of the plaint scheduled property which was attached under Section 146 of the Code of Criminal Procedure in M. C. No. 2/1941 on the file of the Joint Magistrate, Bhadrachalam.","{""CASE_NUMBER"": ""['O. S. No. 44 of 1950', 'M. C. No. 2/1941']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Bhadrachalam']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Venkatanarasayyamma', 'Rajamani alias Mahalakshamma', 'Lachamma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 146']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['O. S. No. 44 of 1950', 'M. C. No. 2/1941']"", 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Bhadrachalam']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Venkatanarasayyamma', 'Rajamani alias Mahalakshamma', 'Lachamma']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 146']"", 'RESPONDENT': '[]', 'STATUTE': ""['Code of Criminal Procedure']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The connected suit, O. S. No. 44 of 1950, was filed by Venkatanarasayyamma, Rajamani alias Mahalakshamma and Lachamma, who are defendants 2, 3 and 1 respectively in the other suit, for a declaration of their title to and possession of the plaint scheduled property which was attached under Section 146 of the Code of Criminal Procedure in M. C. No. 2/1941 on the file of the Joint Magistrate, Bhadrachalam. [/INST]
 {""CASE_NUMBER"": ""['O. S. No. 44 of 1950', 'M. C. No. 2/1941']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Bhadrachalam']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Venkatanarasayyamma', 'Rajamani alias Mahalakshamma', 'Lachamma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 146']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Code of Criminal Procedure']"", ""WITNESS"": ""[]""} </s>"
"(It is conceded that these persons had no manner of authority to sell the property of the plaintiffs, that the plaintiffs are entitled to ignore the sale even if it was for necessity, and that their suit for possession brought, in forma pauperis, on 1-2-1954 falls within Article 142 of the Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['1-2-1954']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 142']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['1-2-1954']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 142']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (It is conceded that these persons had no manner of authority to sell the property of the plaintiffs, that the plaintiffs are entitled to ignore the sale even if it was for necessity, and that their suit for possession brought, in forma pauperis, on 1-2-1954 falls within Article 142 of the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['1-2-1954']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 142']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"To ensure that the complainant or victim of crime does not remain in dark about the investigations regarding his complaint/FIR, the complainant or victim shall be kept informed about the progress of investigations.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: To ensure that the complainant or victim of crime does not remain in dark about the investigations regarding his complaint/FIR, the complainant or victim shall be kept informed about the progress of investigations. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Mangilal D. W 3 and Om-prakash D.W. 4 are proverbial chance witnesses, who have not been able to give any cogent reason for their just standing on the road, outside the public park.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Mangilal D.', 'Om-prakash']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Mangilal D.', 'Om-prakash']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mangilal D. W 3 and Om-prakash D.W. 4 are proverbial chance witnesses, who have not been able to give any cogent reason for their just standing on the road, outside the public park. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Mangilal D.', 'Om-prakash']""} </s>"
"For this purpose, the assessee has taken overseas entities as 'tested parties' and their margins on mean basis and compared the same with mean of identified comparables.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: For this purpose, the assessee has taken overseas entities as 'tested parties' and their margins on mean basis and compared the same with mean of identified comparables. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
This is what was stated by a two-Judge Bench in R.S. Naik vs. A. Antulay 1986 (2) SCC 716. 27.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['R.S. Naik vs. A. Antulay 1986 (2) SCC 716']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['R.S. Naik vs. A. Antulay 1986 (2) SCC 716']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This is what was stated by a two-Judge Bench in R.S. Naik vs. A. Antulay 1986 (2) SCC 716. 27. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['R.S. Naik vs. A. Antulay 1986 (2) SCC 716']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"All the prosecution witnesses are related to each other and also related to his in-laws and, thus, are interested witnesses.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: All the prosecution witnesses are related to each other and also related to his in-laws and, thus, are interested witnesses. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On examining the history of the legislation, the surrounding circumstances and the scheme of the Act which had been challenged there namely the Drugs and Magic Remedies (Objectionable Advertisements) Act 1954 (21 of 1954) the Court held that the object of that Act was the prevention of self-medication and self-treatment by prohibiting instruments which may be used to advocate the same or which tended to spread the evil.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Drugs and Magic Remedies (Objectionable Advertisements) Act 1954']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Drugs and Magic Remedies (Objectionable Advertisements) Act 1954']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On examining the history of the legislation, the surrounding circumstances and the scheme of the Act which had been challenged there namely the Drugs and Magic Remedies (Objectionable Advertisements) Act 1954 (21 of 1954) the Court held that the object of that Act was the prevention of self-medication and self-treatment by prohibiting instruments which may be used to advocate the same or which tended to spread the evil. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Drugs and Magic Remedies (Objectionable Advertisements) Act 1954']"", ""WITNESS"": ""[]""} </s>"
"Counsel cited Madhavnagar Cotton Mills v. Union of India, AIR 1968 Delhi 54, in support of his argument.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Madhavnagar Cotton Mills v. Union of India, AIR 1968 Delhi 54']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Madhavnagar Cotton Mills v. Union of India, AIR 1968 Delhi 54']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Counsel cited Madhavnagar Cotton Mills v. Union of India, AIR 1968 Delhi 54, in support of his argument. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Madhavnagar Cotton Mills v. Union of India, AIR 1968 Delhi 54']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Sakiri Vasu's case does not lay down such a law as canvassed by the learned counsel.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sakiri Vasu']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sakiri Vasu']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Sakiri Vasu's case does not lay down such a law as canvassed by the learned counsel. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sakiri Vasu']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
P5(a) English translation of Complaint statement Ex.P6,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: P5(a) English translation of Complaint statement Ex.P6 [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
So with a sale of a motor car started and concluded wholly and exclusively in New York or London or Timbuctoo.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['New York', 'London', 'Timbuctoo']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['New York', 'London', 'Timbuctoo']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: So with a sale of a motor car started and concluded wholly and exclusively in New York or London or Timbuctoo. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['New York', 'London', 'Timbuctoo']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Regular second appeal bearing no.11/2003 directed against order dated 24.12.2002 in RCA No.12/2001, whereby Ld. ADJ has upheld the judgment and decree dated 31.07.2001 was dismissed by Hon'ble High Court of Delhi.","{""CASE_NUMBER"": ""['RCA No.12/2001']"", ""COURT"": ""['High Court of Delhi']"", ""DATE"": ""['24.12.2002', '31.07.2001']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['RCA No.12/2001']"", 'COURT': ""['High Court of Delhi']"", 'DATE': ""['24.12.2002', '31.07.2001']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Regular second appeal bearing no.11/2003 directed against order dated 24.12.2002 in RCA No.12/2001, whereby Ld. ADJ has upheld the judgment and decree dated 31.07.2001 was dismissed by Hon'ble High Court of Delhi. [/INST]
 {""CASE_NUMBER"": ""['RCA No.12/2001']"", ""COURT"": ""['High Court of Delhi']"", ""DATE"": ""['24.12.2002', '31.07.2001']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As regards Accused No.1 Sherbahadur, it is submitted that he has merely exhorted and not assaulted anyone.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sherbahadur']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sherbahadur']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As regards Accused No.1 Sherbahadur, it is submitted that he has merely exhorted and not assaulted anyone. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sherbahadur']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Devilal (PW-1) and Sudhabai (PW-2) are the father and mother of the deceased and they have categorically stated that the non-applicants were used to harass and beat their daughter Mayabai and on the dead body a team of doctors found abrasion measuring 2.5 x 1 cm. on left chin.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mayabai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Devilal', 'Sudhabai']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Mayabai']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Devilal', 'Sudhabai']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Devilal (PW-1) and Sudhabai (PW-2) are the father and mother of the deceased and they have categorically stated that the non-applicants were used to harass and beat their daughter Mayabai and on the dead body a team of doctors found abrasion measuring 2.5 x 1 cm. on left chin. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mayabai']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Devilal', 'Sudhabai']""} </s>"
"In the result, it is held that the amended provisions of Order 6 Rule 17 of CPC would not be applicable to the suits which are filed prior to the date on which the amendment to CPC was brought into effect i.e. 1.7.2002.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['1.7.2002']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Order 6 Rule 17']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['1.7.2002']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Order 6 Rule 17']"", 'RESPONDENT': '[]', 'STATUTE': ""['CPC']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the result, it is held that the amended provisions of Order 6 Rule 17 of CPC would not be applicable to the suits which are filed prior to the date on which the amendment to CPC was brought into effect i.e. 1.7.2002. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['1.7.2002']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Order 6 Rule 17']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['CPC']"", ""WITNESS"": ""[]""} </s>"
That itself amounts to cruelty by filing a criminal case.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: That itself amounts to cruelty by filing a criminal case. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Even so unlike in 1966 (1) All ER 886, custody was refused to the mother for the reason that ""to take Diana away from her (the plaintiff) would be utterly disastrous for the child"". 13.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Diana']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['1966 (1) All ER 886']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Diana']"", 'PETITIONER': '[]', 'PRECEDENT': ""['1966 (1) All ER 886']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Even so unlike in 1966 (1) All ER 886, custody was refused to the mother for the reason that ""to take Diana away from her (the plaintiff) would be utterly disastrous for the child"". 13. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Diana']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['1966 (1) All ER 886']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Division Bench mainly based its findings as to delay, laches and misrepresentation on the part of the writ petitioners, on pleadings in Para 15 of the writ petition which was jointly filed by all five legal heirs of late Shri Sumer Singhji, Shri Brajraj Singh, being the first petitioner.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sumer Singhji', 'Brajraj Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sumer Singhji', 'Brajraj Singh']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Division Bench mainly based its findings as to delay, laches and misrepresentation on the part of the writ petitioners, on pleadings in Para 15 of the writ petition which was jointly filed by all five legal heirs of late Shri Sumer Singhji, Shri Brajraj Singh, being the first petitioner. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sumer Singhji', 'Brajraj Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
In this connection he invited our attention to some observations to be found in the decision of this Court in Keshavan Madhava Menon v. The State of Bombay (2) already referred to.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Keshavan Madhava Menon v. The State of Bombay (2)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Keshavan Madhava Menon v. The State of Bombay (2)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In this connection he invited our attention to some observations to be found in the decision of this Court in Keshavan Madhava Menon v. The State of Bombay (2) already referred to. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Keshavan Madhava Menon v. The State of Bombay (2)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It waS secondly contended that even assuming that this was not correct the profits of that part of the business, which was carried on at Raichur, did not accrue or arise in'the Hyderabad State because the profits arose the sale of the oil in Bombay and therefore the assessee's contention was incorrect.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Raichur', 'Hyderabad', 'Bombay']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Raichur', 'Hyderabad', 'Bombay']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It waS secondly contended that even assuming that this was not correct the profits of that part of the business, which was carried on at Raichur, did not accrue or arise in'the Hyderabad State because the profits arose the sale of the oil in Bombay and therefore the assessee's contention was incorrect. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Raichur', 'Hyderabad', 'Bombay']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
A further appeal was taken to the Supreme Court which was disposed of on 22-8-1967.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""['22-8-1967']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': ""['22-8-1967']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: A further appeal was taken to the Supreme Court which was disposed of on 22-8-1967. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""['22-8-1967']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
This was one of the factors that persuaded the Special Team to conclude that the allegation that the complainant had forged document on 14.2.2000 is a false one.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['14.2.2000']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['14.2.2000']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: This was one of the factors that persuaded the Special Team to conclude that the allegation that the complainant had forged document on 14.2.2000 is a false one. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['14.2.2000']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In that case Kania C. J. said: ""The law providing reasonable restrictions on the exercise of the right conferred by Article 19 may contain substantive provisions as well as procedural provisions.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Kania']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 19']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Kania']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 19']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In that case Kania C. J. said: ""The law providing reasonable restrictions on the exercise of the right conferred by Article 19 may contain substantive provisions as well as procedural provisions. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Kania']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 19']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Honourable Sri Justice C.V. Nagarjuna Reddy And The Honourable Sri Justice M.S.K. Jaiswal Criminal Appeal Nos.172 of 2015 And Batch 20-01-2017 Shaik Akram Appellant The National Investigation Agency Rep. by its Special Public Prosecutor High Court of Judicature at Hyderabad For the State of Telangana and the State of Andhra pradesh Respondents Counsel for the Appellants : Mr. A.T.M. Rangaramanujam Senior Counsel, for Mr. T. Prasanna Kumar & Mr. D. Purnachandra Reddy Counsel for the Respondent : Mr. P. Vishnuvardhan Reddy, Special Public Prosecutor, National Investigation Agency <Gist : >Head Note: ?Citations : 1. (1979) 4 Scc 172 2. (2014) 6 Scc 59 3. (2013) 13 Scc 1 4. Air 1963 Sc 822 5. (2014) 14 Scc 295 6. Air 1952 Sc 16 7. (1978) 1 Scc 405 8. (2010) 6 Scc 614 9. (2001) 9 Scc 642 10. 1990 Crl Lj 215 11. Air 1979 Sc 1705 12. 2010 Law Suit (Bom.) 915 13. (2013) 14 Scc 266 The Honble Sri Justice C.V. Nagarjuna Reddy And The Honble Sri Justice M.S.K. Jaiswal Criminal Appeal NOs.172, 175 And 311 Of 2015 Dated:20-1-2017 The Court Made The Following: Common Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['C.V. Nagarjuna Reddy', 'M.S.K. Jaiswal']"", ""LAWYER"": ""['A.T.M. Rangaramanujam', 'T. Prasanna Kumar', 'D. Purnachandra Reddy', 'P. Vishnuvardhan Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Shaik Akram']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['National Investigation Agency']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['C.V. Nagarjuna Reddy', 'M.S.K. Jaiswal']"", 'LAWYER': ""['A.T.M. Rangaramanujam', 'T. Prasanna Kumar', 'D. Purnachandra Reddy', 'P. Vishnuvardhan Reddy']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Shaik Akram']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['National Investigation Agency']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Honourable Sri Justice C.V. Nagarjuna Reddy And The Honourable Sri Justice M.S.K. Jaiswal Criminal Appeal Nos.172 of 2015 And Batch 20-01-2017 Shaik Akram Appellant The National Investigation Agency Rep. by its Special Public Prosecutor High Court of Judicature at Hyderabad For the State of Telangana and the State of Andhra pradesh Respondents Counsel for the Appellants : Mr. A.T.M. Rangaramanujam Senior Counsel, for Mr. T. Prasanna Kumar & Mr. D. Purnachandra Reddy Counsel for the Respondent : Mr. P. Vishnuvardhan Reddy, Special Public Prosecutor, National Investigation Agency <Gist : >Head Note: ?Citations : 1. (1979) 4 Scc 172 2. (2014) 6 Scc 59 3. (2013) 13 Scc 1 4. Air 1963 Sc 822 5. (2014) 14 Scc 295 6. Air 1952 Sc 16 7. (1978) 1 Scc 405 8. (2010) 6 Scc 614 9. (2001) 9 Scc 642 10. 1990 Crl Lj 215 11. Air 1979 Sc 1705 12. 2010 Law Suit (Bom.) 915 13. (2013) 14 Scc 266 The Honble Sri Justice C.V. Nagarjuna Reddy And The Honble Sri Justice M.S.K. Jaiswal Criminal Appeal NOs.172, 175 And 311 Of 2015 Dated:20-1-2017 The Court Made The Following: Common Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['C.V. Nagarjuna Reddy', 'M.S.K. Jaiswal']"", ""LAWYER"": ""['A.T.M. Rangaramanujam', 'T. Prasanna Kumar', 'D. Purnachandra Reddy', 'P. Vishnuvardhan Reddy']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Shaik Akram']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['National Investigation Agency']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Page No. 7 of 24 engineer referred to as the prospective accused no.2 in the complaint pending before the magistrate.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Page No. 7 of 24 engineer referred to as the prospective accused no.2 in the complaint pending before the magistrate. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The High Court made no order as to the costs of these petitions.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The High Court made no order as to the costs of these petitions. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"[72 B-C] Dhakeshwar Prasad Narain Singh v. Commissioner of Income Tax, Bihar & Orissa, 4 I.T.R. 71 at 74, Commissioner of Income","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Dhakeshwar Prasad Narain Singh v. Commissioner of Income Tax, Bihar & Orissa, 4 I.T.R. 71 at 74']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Dhakeshwar Prasad Narain Singh v. Commissioner of Income Tax, Bihar & Orissa, 4 I.T.R. 71 at 74']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: [72 B-C] Dhakeshwar Prasad Narain Singh v. Commissioner of Income Tax, Bihar & Orissa, 4 I.T.R. 71 at 74, Commissioner of Income [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Dhakeshwar Prasad Narain Singh v. Commissioner of Income Tax, Bihar & Orissa, 4 I.T.R. 71 at 74']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"As the impugned modifications were made without affording the appellant reasonable opportunity for representing its case they are bad in law; (3) Even if the said proceeding is considered as an administrative proceeding, the impugned orders are liable to be set aside on the basis of the rule laid down by this Court in State of Orissa v. Dr. (Miss) Binapani Dei and Ors. (1), and ( 4 ).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Orissa v. Dr. (Miss) Binapani Dei and Ors']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['State of Orissa v. Dr. (Miss) Binapani Dei and Ors']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: As the impugned modifications were made without affording the appellant reasonable opportunity for representing its case they are bad in law; (3) Even if the said proceeding is considered as an administrative proceeding, the impugned orders are liable to be set aside on the basis of the rule laid down by this Court in State of Orissa v. Dr. (Miss) Binapani Dei and Ors. (1), and ( 4 ). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of Orissa v. Dr. (Miss) Binapani Dei and Ors']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Therefore, Balbir Singh @ Balli (appellant) is indeed not the owner of the truck from which the contraband was recovered.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Balbir Singh @ Balli']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Balbir Singh @ Balli']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Therefore, Balbir Singh @ Balli (appellant) is indeed not the owner of the truck from which the contraband was recovered. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Balbir Singh @ Balli']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On eh other side of the pistol police found marking ""TAURUS INT MFG. MIAMI FLA. MADE BRAZIL"".","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On eh other side of the pistol police found marking ""TAURUS INT MFG. MIAMI FLA. MADE BRAZIL"". [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Hence, the phrase ""he has regularly appeared as member of a trade union for no less than seven years in the proceedings"", used in Section 9(2)(b), in context of other provisions of the BIR Act, would mean that the person must have appeared and conducted regularly some cases as a representative of the employees before the Labour Court, the Industrial Court or the Tribunal for not less than seven years.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 9(2)(b)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['BIR Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 9(2)(b)']"", 'RESPONDENT': '[]', 'STATUTE': ""['BIR Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Hence, the phrase ""he has regularly appeared as member of a trade union for no less than seven years in the proceedings"", used in Section 9(2)(b), in context of other provisions of the BIR Act, would mean that the person must have appeared and conducted regularly some cases as a representative of the employees before the Labour Court, the Industrial Court or the Tribunal for not less than seven years. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 9(2)(b)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['BIR Act']"", ""WITNESS"": ""[]""} </s>"
1 In The Court Of Dr. Archana Sinha Addl. District & Sessions Judge (Central­03) Tis Hazari Court / Delhi Suit No. : 290/2014 Unique Case Id No. 02401C0496102014 Sh. Amit Mudgal .......Plaintiff Vs. Inventa Cleantec Pvt. Ltd. ........ Defendant 30.05.2015 Order,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Addl. District & Sessions Judge (Central\\xad03) Tis Hazari Court / Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""['Archana Sinha']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Amit Mudgal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Inventa Cleantec Pvt. Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Addl. District & Sessions Judge (Central\\xad03) Tis Hazari Court / Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': ""['Archana Sinha']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Amit Mudgal']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Inventa Cleantec Pvt. Ltd.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 In The Court Of Dr. Archana Sinha Addl. District & Sessions Judge (Central­03) Tis Hazari Court / Delhi Suit No. : 290/2014 Unique Case Id No. 02401C0496102014 Sh. Amit Mudgal .......Plaintiff Vs. Inventa Cleantec Pvt. Ltd. ........ Defendant 30.05.2015 Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Addl. District & Sessions Judge (Central\\xad03) Tis Hazari Court / Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""['Archana Sinha']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Amit Mudgal']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Inventa Cleantec Pvt. Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Reportable In The Supreme Court Of India Civil Appellate Jurisdiction Civil Appeal No.6662 Of 2004 Ramjas Foundation and another ........Appellants Versus Union of India and others .......Respondents Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court Of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ramjas Foundation']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court Of India']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Ramjas Foundation']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Union of India']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Reportable In The Supreme Court Of India Civil Appellate Jurisdiction Civil Appeal No.6662 Of 2004 Ramjas Foundation and another ........Appellants Versus Union of India and others .......Respondents Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court Of India']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Ramjas Foundation']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Union of India']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
(v) The trade or business of the firm is controlled and there is no scope for the firm to carry on clandestine business year after year.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: (v) The trade or business of the firm is controlled and there is no scope for the firm to carry on clandestine business year after year. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The case before us is one of 'self-induced frustration' to use the expression of Lord Sumner.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sumner']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Sumner']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The case before us is one of 'self-induced frustration' to use the expression of Lord Sumner. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Sumner']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Even if role assigned to various accused is same yet they may stand on different footing.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Even if role assigned to various accused is same yet they may stand on different footing. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"v. Ram Narayan Das,(1) which was also a case of a probationer.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ram Narayan Das,(1']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Ram Narayan Das,(1']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: v. Ram Narayan Das,(1) which was also a case of a probationer. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Ram Narayan Das,(1']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Pursuant to the observations made by the Hon ble Apex Court in Para-3 of the Order, the applicant accused preferred Criminal Misc. Application No.166 of 2013 under Section 438 of the Criminal Procedure Code, 1973, before the learned Special Judge, CBI Cases Court, Ahmedabad, on 29.7.2013 and requested to release him anticipatory bail in connection with the FIR dated 16.12.2011 registered at RC.BSI/S/2011/0005/8353.","{""CASE_NUMBER"": ""['Criminal Misc. Application No.166 of 2013']"", ""COURT"": ""['Apex Court', 'Special Judge, CBI Cases Court, Ahmedabad']"", ""DATE"": ""['29.7.2013', '16.12.2011']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 438']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Criminal Procedure Code, 1973']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Criminal Misc. Application No.166 of 2013']"", 'COURT': ""['Apex Court', 'Special Judge, CBI Cases Court, Ahmedabad']"", 'DATE': ""['29.7.2013', '16.12.2011']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 438']"", 'RESPONDENT': '[]', 'STATUTE': ""['Criminal Procedure Code, 1973']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Pursuant to the observations made by the Hon ble Apex Court in Para-3 of the Order, the applicant accused preferred Criminal Misc. Application No.166 of 2013 under Section 438 of the Criminal Procedure Code, 1973, before the learned Special Judge, CBI Cases Court, Ahmedabad, on 29.7.2013 and requested to release him anticipatory bail in connection with the FIR dated 16.12.2011 registered at RC.BSI/S/2011/0005/8353. [/INST]
 {""CASE_NUMBER"": ""['Criminal Misc. Application No.166 of 2013']"", ""COURT"": ""['Apex Court', 'Special Judge, CBI Cases Court, Ahmedabad']"", ""DATE"": ""['29.7.2013', '16.12.2011']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 438']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Criminal Procedure Code, 1973']"", ""WITNESS"": ""[]""} </s>"
"If it were held that the provisions of Article 320 (3) (c) are mandatory in terms, the other clauses or sub-clauses of that article, will have to be equally held to be mandatory.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 320 (3) (c)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Article 320 (3) (c)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: If it were held that the provisions of Article 320 (3) (c) are mandatory in terms, the other clauses or sub-clauses of that article, will have to be equally held to be mandatory. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Article 320 (3) (c)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
CC No. 970/13 page no. 5 /11 12,"{""CASE_NUMBER"": ""['CC No. 970/13']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['CC No. 970/13']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: CC No. 970/13 page no. 5 /11 12 [/INST]
 {""CASE_NUMBER"": ""['CC No. 970/13']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Considering the evidence on record I find that the accused has not brought any credible evidence to rebut the presumptions provided in Section 114, Illustration (f) of the Evidence Act, 1872 and Section 27 of the General Clauses Act, 1897 and further looking at the mandate given by the H'onble Supreme Court in C.C. Alavi Hazi Vs.Palapetty Mohd. & Anr","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['C.C. Alavi Hazi Vs.Palapetty Mohd. & Anr']"", ""PROVISION"": ""['Section 114, Illustration (f)', 'Section 27']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act, 1872', 'General Clauses Act, 1897']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['C.C. Alavi Hazi Vs.Palapetty Mohd. & Anr']"", 'PROVISION': ""['Section 114, Illustration (f)', 'Section 27']"", 'RESPONDENT': '[]', 'STATUTE': ""['Evidence Act, 1872', 'General Clauses Act, 1897']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Considering the evidence on record I find that the accused has not brought any credible evidence to rebut the presumptions provided in Section 114, Illustration (f) of the Evidence Act, 1872 and Section 27 of the General Clauses Act, 1897 and further looking at the mandate given by the H'onble Supreme Court in C.C. Alavi Hazi Vs.Palapetty Mohd. & Anr [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['C.C. Alavi Hazi Vs.Palapetty Mohd. & Anr']"", ""PROVISION"": ""['Section 114, Illustration (f)', 'Section 27']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Evidence Act, 1872', 'General Clauses Act, 1897']"", ""WITNESS"": ""[]""} </s>"
We are inclined to agree that the grant of a constitutional passport to the Supreme Court by the High Court is not a matter of easy insouciance but anxious advertence to the dual vital requirements built into Art. 133(1) by specific amendment.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Art. 133(1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Art. 133(1)']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: We are inclined to agree that the grant of a constitutional passport to the Supreme Court by the High Court is not a matter of easy insouciance but anxious advertence to the dual vital requirements built into Art. 133(1) by specific amendment. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Art. 133(1)']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"He contended, in short, that he is running a wholesale business in pulses in a rented premises in Mamulpet where the suit schedule property also is situated, that premises is inadequate for him to run and expand his business and because of that reason he purchased the schedule premises to demolish and reconstruct it and start his business in the premises so reconstructed.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Mamulpet']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Mamulpet']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He contended, in short, that he is running a wholesale business in pulses in a rented premises in Mamulpet where the suit schedule property also is situated, that premises is inadequate for him to run and expand his business and because of that reason he purchased the schedule premises to demolish and reconstruct it and start his business in the premises so reconstructed. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Mamulpet']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: Khudiram Das Vs. Respondent: The State Of West Bengal & Ors. Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Khudiram Das']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of West Bengal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Khudiram Das']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of West Bengal']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: Khudiram Das Vs. Respondent: The State Of West Bengal & Ors. Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Khudiram Das']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of West Bengal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In its application dated March 17, it merely said that Ram Charan died on July 21, 1957, and that Shri Bhatia, the Divisional Engineer, Telegraphs, Ambala Cantonment, learnt about it on February 3, 1958.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['July 21, 1957', 'February 3, 1958']"", ""GPE"": ""['Ambala Cantonment']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ram Charan', 'Bhatia']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['July 21, 1957', 'February 3, 1958']"", 'GPE': ""['Ambala Cantonment']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ram Charan', 'Bhatia']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In its application dated March 17, it merely said that Ram Charan died on July 21, 1957, and that Shri Bhatia, the Divisional Engineer, Telegraphs, Ambala Cantonment, learnt about it on February 3, 1958. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['July 21, 1957', 'February 3, 1958']"", ""GPE"": ""['Ambala Cantonment']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ram Charan', 'Bhatia']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Duple Motor Bodies v. Ostime, [1961] 1 W.L.R. 739, 747, 753 ; 39 T.C. 537 (H.L.), Viscount Simonds states : ""The practice of accountants, though it were general or even universal could not by itself determine the amount of profits and gains of a trade for tax purposes. . . .","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Viscount Simonds']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Viscount Simonds']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Duple Motor Bodies v. Ostime, [1961] 1 W.L.R. 739, 747, 753 ; 39 T.C. 537 (H.L.), Viscount Simonds states : ""The practice of accountants, though it were general or even universal could not by itself determine the amount of profits and gains of a trade for tax purposes. . . . [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Viscount Simonds']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Petitioner: The Automobile Transport(Rajasthan) Ltd. Vs. Respondent: The State Of Rajasthan And OTHERS(And Connected Appeals) Date Of Judgment,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Automobile Transport(Rajasthan) Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Rajasthan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Automobile Transport(Rajasthan) Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Rajasthan']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Petitioner: The Automobile Transport(Rajasthan) Ltd. Vs. Respondent: The State Of Rajasthan And OTHERS(And Connected Appeals) Date Of Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Automobile Transport(Rajasthan) Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Rajasthan']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Further suit No. 42 by the appellant's father was on the same finding decreed to the extent of half only; suit No. 77 of 1950 was decreed also to the extent of half and a permanent injunction was granted in favour of the respondent Smt. Daryao Kunwar as prayed by her in that suit.,"{""CASE_NUMBER"": ""['suit No. 77 of 1950']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Daryao Kunwar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['suit No. 77 of 1950']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Daryao Kunwar']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Further suit No. 42 by the appellant's father was on the same finding decreed to the extent of half only; suit No. 77 of 1950 was decreed also to the extent of half and a permanent injunction was granted in favour of the respondent Smt. Daryao Kunwar as prayed by her in that suit. [/INST]
 {""CASE_NUMBER"": ""['suit No. 77 of 1950']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Daryao Kunwar']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of Sh. Devendra Kumar Sharma Addl. Chief Metropolitan Magistrate (Spl. Acts) Central Tis Hazari Courts, Delhi Bses Yamuna Power Ltd. vs D.D. Sehgal (through Lr) U/s 630 of Companies Act, 1956 Cc No.1650/3 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Addl. Chief Metropolitan Magistrate (Spl. Acts) Central Tis Hazari Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Devendra Kumar Sharma']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bses Yamuna Power Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['D.D. Sehgal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Addl. Chief Metropolitan Magistrate (Spl. Acts) Central Tis Hazari Courts, Delhi']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Devendra Kumar Sharma']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Bses Yamuna Power Ltd.']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['D.D. Sehgal']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of Sh. Devendra Kumar Sharma Addl. Chief Metropolitan Magistrate (Spl. Acts) Central Tis Hazari Courts, Delhi Bses Yamuna Power Ltd. vs D.D. Sehgal (through Lr) U/s 630 of Companies Act, 1956 Cc No.1650/3 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Addl. Chief Metropolitan Magistrate (Spl. Acts) Central Tis Hazari Courts, Delhi']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Devendra Kumar Sharma']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Bses Yamuna Power Ltd.']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['D.D. Sehgal']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In State of U.P. Vs. Satish (supra), Supreme Court held ""As regards delayed examination of certain witnesses, this Court in several decisions has held that unless the Investigating Officer is categorically asked as to why there was delay in examination of the witnesses the defence cannot gain any advantage therefrom.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of U.P. Vs. Satish']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['State of U.P. Vs. Satish']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In State of U.P. Vs. Satish (supra), Supreme Court held ""As regards delayed examination of certain witnesses, this Court in several decisions has held that unless the Investigating Officer is categorically asked as to why there was delay in examination of the witnesses the defence cannot gain any advantage therefrom. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['State of U.P. Vs. Satish']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Her evidence furthermore shows that appellant Kashmir Singh had flashed his torch at her husband (Wanjar Singh) and at her grand-son (Satnam Singh).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Wanjar Singh', 'Satnam Singh']"", ""PETITIONER"": ""['Kashmir Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Wanjar Singh', 'Satnam Singh']"", 'PETITIONER': ""['Kashmir Singh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Her evidence furthermore shows that appellant Kashmir Singh had flashed his torch at her husband (Wanjar Singh) and at her grand-son (Satnam Singh). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Wanjar Singh', 'Satnam Singh']"", ""PETITIONER"": ""['Kashmir Singh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The Tribunal also considered that it was only after the filing of the claim petition on 26.11.2009 that the appellant Malti Devi (widow) filed 3 of 19 FAO No.156 of 2012 (O&M) [4] applications before the SSP alleging that the Police did not act properly regarding the incident.,"{""CASE_NUMBER"": ""['FAO No.156 of 2012']"", ""COURT"": ""[]"", ""DATE"": ""['26.11.2009']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Malti Devi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['FAO No.156 of 2012']"", 'COURT': '[]', 'DATE': ""['26.11.2009']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Malti Devi']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Tribunal also considered that it was only after the filing of the claim petition on 26.11.2009 that the appellant Malti Devi (widow) filed 3 of 19 FAO No.156 of 2012 (O&M) [4] applications before the SSP alleging that the Police did not act properly regarding the incident. [/INST]
 {""CASE_NUMBER"": ""['FAO No.156 of 2012']"", ""COURT"": ""[]"", ""DATE"": ""['26.11.2009']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Malti Devi']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Assuming the amounts were not loans, but part payments of the hire, they were still not chargeable to tax under the provisions of the Indian Income-tax Act, because the part payments had not been received by the owners bin India.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Indian Income-tax Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Indian Income-tax Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Assuming the amounts were not loans, but part payments of the hire, they were still not chargeable to tax under the provisions of the Indian Income-tax Act, because the part payments had not been received by the owners bin India. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Indian Income-tax Act']"", ""WITNESS"": ""[]""} </s>"
"By Section 5 of the Act, the State was empowered to incorporate and establish the University by issuing a notification in the Gazette and Section 6 permitted such universities to affiliate any college or other institution or set up more than one campus with the prior approval of the State Government.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 5', 'Section 6']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 5', 'Section 6']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: By Section 5 of the Act, the State was empowered to incorporate and establish the University by issuing a notification in the Gazette and Section 6 permitted such universities to affiliate any college or other institution or set up more than one campus with the prior approval of the State Government. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 5', 'Section 6']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The Court Of The Xii Addl. City Civil And Sessions Judge (CCH.No.27), At Bangalore. Present:Sri.Bhairappa Shivaling Naik, B.Com.,LL.B.(Spl), Xii Addl.City Civil & Sessions Judge, Bangalore. Dated: This The 23Rd Day Of July 2015 O.S.No.1401/2010 Plaintiff:- Shri.Ramaraj, S/o.Sri.Kempaiah, Age 68 years, R/at: Mathrusree, No.21/32, 1st Main, 5th Cross, Bhyataranapura, Mysore Road, Bangalore -560 026. (By Sri. Ashok B.Patil, Advocate) -Vs- Defendants:- 1. Thimmegowda, S/o.Mariyappa, Aged about 47 years, R/at No.101/B, 20th Main Road, Marenahalli, Vijayanagar, Bangalore-560 040. 2 O.S.No.1401/2010 2. Smt.Mahadevamma, w/o. Chunetinikar aged about 61 years, R/at.Basaweshawara Nilaya, Manjunatha Nagara, Kytsandra Post, Tumkur. Or No.3, Barline, Dar Quarters, Tumkur. 3. Smt.M.Saroja, w/o.K.C.Lakshminarayana, aged about 51 years, r/at. No.R-23, Car Police Quarters, Sirsi Circle, Mysore road, Bengaluru -560018. (Deft.1 by Sri.CS Defts.2 &3 by Sri.C.Venkatesha- Advocates) Date of Institution of the suit : 26/02/2010 Nature of the suit : Declaration and Mandatory Injunction Date of commencement of recording of the evidence : 13/10/2011 3 O.S.No.1401/2010 Date on which the Judgment was pronounced : 23/07/2015 Total Duration Years Months Days : 05 04 27 (Bhairappa Shivaling Naik) Xii Addl. City Civil & Sessions Judge, Bangalore J U D G M E N T","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Court Of The Xii Addl. City Civil And Sessions Judge (CCH.No.27), At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Bhairappa Shivaling Naik']"", ""LAWYER"": ""['Ramaraj', 'Ashok B.Patil']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Thimmegowda', 'O.S.No.1401/2010', 'M.Saroja']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Court Of The Xii Addl. City Civil And Sessions Judge (CCH.No.27), At Bangalore']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Bhairappa Shivaling Naik']"", 'LAWYER': ""['Ramaraj', 'Ashok B.Patil']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Thimmegowda', 'O.S.No.1401/2010', 'M.Saroja']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The Court Of The Xii Addl. City Civil And Sessions Judge (CCH.No.27), At Bangalore. Present:Sri.Bhairappa Shivaling Naik, B.Com.,LL.B.(Spl), Xii Addl.City Civil & Sessions Judge, Bangalore. Dated: This The 23Rd Day Of July 2015 O.S.No.1401/2010 Plaintiff:- Shri.Ramaraj, S/o.Sri.Kempaiah, Age 68 years, R/at: Mathrusree, No.21/32, 1st Main, 5th Cross, Bhyataranapura, Mysore Road, Bangalore -560 026. (By Sri. Ashok B.Patil, Advocate) -Vs- Defendants:- 1. Thimmegowda, S/o.Mariyappa, Aged about 47 years, R/at No.101/B, 20th Main Road, Marenahalli, Vijayanagar, Bangalore-560 040. 2 O.S.No.1401/2010 2. Smt.Mahadevamma, w/o. Chunetinikar aged about 61 years, R/at.Basaweshawara Nilaya, Manjunatha Nagara, Kytsandra Post, Tumkur. Or No.3, Barline, Dar Quarters, Tumkur. 3. Smt.M.Saroja, w/o.K.C.Lakshminarayana, aged about 51 years, r/at. No.R-23, Car Police Quarters, Sirsi Circle, Mysore road, Bengaluru -560018. (Deft.1 by Sri.CS Defts.2 &3 by Sri.C.Venkatesha- Advocates) Date of Institution of the suit : 26/02/2010 Nature of the suit : Declaration and Mandatory Injunction Date of commencement of recording of the evidence : 13/10/2011 3 O.S.No.1401/2010 Date on which the Judgment was pronounced : 23/07/2015 Total Duration Years Months Days : 05 04 27 (Bhairappa Shivaling Naik) Xii Addl. City Civil & Sessions Judge, Bangalore J U D G M E N T [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Court Of The Xii Addl. City Civil And Sessions Judge (CCH.No.27), At Bangalore']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Bhairappa Shivaling Naik']"", ""LAWYER"": ""['Ramaraj', 'Ashok B.Patil']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Thimmegowda', 'O.S.No.1401/2010', 'M.Saroja']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
On this basis it has held that the claim of M/s. Bokaro and Ramgur with regard to 1457.56 bighas was not at all maintainable.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ramgur']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Bokaro']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Ramgur']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Bokaro']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On this basis it has held that the claim of M/s. Bokaro and Ramgur with regard to 1457.56 bighas was not at all maintainable. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Ramgur']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Bokaro']"", ""WITNESS"": ""[]""} </s>"
"But it appears vital to me that no ""undue strain on the words used in the section"" is permissible ""in order that a construction favourable"" to the landlord ""may be deduced"" (with respect I have borrowed the quoted words from Kanai Lal v. Paramnidhi Sadhukhan, (S) AIR 1957 SC 907).","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Kanai Lal v. Paramnidhi Sadhukhan, (S) AIR 1957 SC 907)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Kanai Lal v. Paramnidhi Sadhukhan, (S) AIR 1957 SC 907)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But it appears vital to me that no ""undue strain on the words used in the section"" is permissible ""in order that a construction favourable"" to the landlord ""may be deduced"" (with respect I have borrowed the quoted words from Kanai Lal v. Paramnidhi Sadhukhan, (S) AIR 1957 SC 907). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Kanai Lal v. Paramnidhi Sadhukhan, (S) AIR 1957 SC 907)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Secondly, Section 27 of the Act stated that nothing in the Act or the Rules made there under shall be deemed to impose or authorise the imposition of a tax on any sale or purchase of goods when such sale or purchase takes place either in the course of inter-State trade or commerce or outside the Union Territory of Delhi.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 27']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Delhi']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 27']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Secondly, Section 27 of the Act stated that nothing in the Act or the Rules made there under shall be deemed to impose or authorise the imposition of a tax on any sale or purchase of goods when such sale or purchase takes place either in the course of inter-State trade or commerce or outside the Union Territory of Delhi. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Delhi']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 27']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"She, accordingly, filed another petition under Order 21, Rule 58, Civil P. C., and this was numbered as Miscellaneous Case No. 45 of 1946.","{""CASE_NUMBER"": ""['Miscellaneous Case No. 45 of 1946']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Order 21, Rule 58']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Civil P. C.']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['Miscellaneous Case No. 45 of 1946']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Order 21, Rule 58']"", 'RESPONDENT': '[]', 'STATUTE': ""['Civil P. C.']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: She, accordingly, filed another petition under Order 21, Rule 58, Civil P. C., and this was numbered as Miscellaneous Case No. 45 of 1946. [/INST]
 {""CASE_NUMBER"": ""['Miscellaneous Case No. 45 of 1946']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Order 21, Rule 58']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Civil P. C.']"", ""WITNESS"": ""[]""} </s>"
It would thus appear prima facie that Hira Nandani Builders and Apex Builders obtained 300 metric tonns and 250 metric tonns respectively of cement on applications submitted by them through the intervention of Pesi Tata.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Hira Nandani Builders', 'Apex Builders']"", ""OTHER_PERSON"": ""['Pesi Tata']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Hira Nandani Builders', 'Apex Builders']"", 'OTHER_PERSON': ""['Pesi Tata']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It would thus appear prima facie that Hira Nandani Builders and Apex Builders obtained 300 metric tonns and 250 metric tonns respectively of cement on applications submitted by them through the intervention of Pesi Tata. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Hira Nandani Builders', 'Apex Builders']"", ""OTHER_PERSON"": ""['Pesi Tata']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The Tribunal held on the first question that ""the finding is irretrievably linked up with the contention raised by the assessee.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The Tribunal held on the first question that ""the finding is irretrievably linked up with the contention raised by the assessee. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In view of the above facts and circumstances, the suit filed by the plaintiffs against the defendants is decreed with cost.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In view of the above facts and circumstances, the suit filed by the plaintiffs against the defendants is decreed with cost. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In Satya Nand Singh's case (1967 BLJR 439), Narasimham, C.J. and A.B. N. Sinha, J. followed the earlier two Bench decisions of this Court, namely, these reported in ILR 30 Pat 1257 = (AIR 1952 Pat 158) and (1959) ILR 38 Pat 95.","{""CASE_NUMBER"": ""['1967 BLJR 439']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Narasimham', 'A.B. N. Sinha']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Satya Nand Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['ILR 30 Pat 1257 = (AIR 1952 Pat 158)', '(1959) ILR 38 Pat 95']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['1967 BLJR 439']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Narasimham', 'A.B. N. Sinha']"", 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Satya Nand Singh']"", 'PETITIONER': '[]', 'PRECEDENT': ""['ILR 30 Pat 1257 = (AIR 1952 Pat 158)', '(1959) ILR 38 Pat 95']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In Satya Nand Singh's case (1967 BLJR 439), Narasimham, C.J. and A.B. N. Sinha, J. followed the earlier two Bench decisions of this Court, namely, these reported in ILR 30 Pat 1257 = (AIR 1952 Pat 158) and (1959) ILR 38 Pat 95. [/INST]
 {""CASE_NUMBER"": ""['1967 BLJR 439']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Narasimham', 'A.B. N. Sinha']"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Satya Nand Singh']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['ILR 30 Pat 1257 = (AIR 1952 Pat 158)', '(1959) ILR 38 Pat 95']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"x x x x x (viii) In case of any loss or damage to the tops or goods in transit or in godowns, the same will be debited to the account of the Worsted Plant.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: x x x x x (viii) In case of any loss or damage to the tops or goods in transit or in godowns, the same will be debited to the account of the Worsted Plant. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"On an anxious consideration of the various provisions of the M.V.Act and the Rules enacted by both the Union and the State as also the facts and circumstances existing, we are inclined to approve the decision of the learned single Judge rendered in W.P.(C).No.29946 of 2006.","{""CASE_NUMBER"": ""['W.P.(C).No.29946 of 2006']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['M.V.Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['W.P.(C).No.29946 of 2006']"", 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['M.V.Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: On an anxious consideration of the various provisions of the M.V.Act and the Rules enacted by both the Union and the State as also the facts and circumstances existing, we are inclined to approve the decision of the learned single Judge rendered in W.P.(C).No.29946 of 2006. [/INST]
 {""CASE_NUMBER"": ""['W.P.(C).No.29946 of 2006']"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['M.V.Act']"", ""WITNESS"": ""[]""} </s>"
"To justify his arguments, Ld. Counsel for the accused has relied upon the following judgments Krishna Janardhan Bhatt Vs. D.G. Hegde (2008) 4 SCC 54 and Sajay Mishra Vs. Ms. Kanishka Kapoor 2010 (5) RCR (Cri) in which it was observed that failure to disclose the amount in ITRs or Books of Accounts of the complainant may be sufficient to rebut the presumption u/s 139 of the Act.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Krishna Janardhan Bhatt Vs. D.G. Hegde (2008) 4 SCC 54', 'Sajay Mishra Vs. Ms. Kanishka Kapoor 2010 (5) RCR (Cri)']"", ""PROVISION"": ""['s 139']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['Krishna Janardhan Bhatt Vs. D.G. Hegde (2008) 4 SCC 54', 'Sajay Mishra Vs. Ms. Kanishka Kapoor 2010 (5) RCR (Cri)']"", 'PROVISION': ""['s 139']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: To justify his arguments, Ld. Counsel for the accused has relied upon the following judgments Krishna Janardhan Bhatt Vs. D.G. Hegde (2008) 4 SCC 54 and Sajay Mishra Vs. Ms. Kanishka Kapoor 2010 (5) RCR (Cri) in which it was observed that failure to disclose the amount in ITRs or Books of Accounts of the complainant may be sufficient to rebut the presumption u/s 139 of the Act. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Krishna Janardhan Bhatt Vs. D.G. Hegde (2008) 4 SCC 54', 'Sajay Mishra Vs. Ms. Kanishka Kapoor 2010 (5) RCR (Cri)']"", ""PROVISION"": ""['s 139']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"1 F.A.159/2013 High Court Of Judicature At Jabalpur Bench Gwalior. (Db : Justice M.C. Garg & Justice Sheel Nagu,Jj.) Mamta Bhardwaj vs. Madhusudan Bhardwaj Appellant is present in person. Shri Sarvesh Sharma, Advocate for the respondent. --------------------------------------------------------------------------------------- Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.C. Garg', 'Sheel Nagu']"", ""LAWYER"": ""['Sarvesh Sharma']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Mamta Bhardwaj']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Madhusudan Bhardwaj']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Judicature At Jabalpur']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['M.C. Garg', 'Sheel Nagu']"", 'LAWYER': ""['Sarvesh Sharma']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Mamta Bhardwaj']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Madhusudan Bhardwaj']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: 1 F.A.159/2013 High Court Of Judicature At Jabalpur Bench Gwalior. (Db : Justice M.C. Garg & Justice Sheel Nagu,Jj.) Mamta Bhardwaj vs. Madhusudan Bhardwaj Appellant is present in person. Shri Sarvesh Sharma, Advocate for the respondent. --------------------------------------------------------------------------------------- Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Judicature At Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.C. Garg', 'Sheel Nagu']"", ""LAWYER"": ""['Sarvesh Sharma']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Mamta Bhardwaj']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Madhusudan Bhardwaj']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
There will be no order as to costs in any of the appeals.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: There will be no order as to costs in any of the appeals. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The next case, 'Vickery v. Martin', (1944) 1 K B 679, is a decision of the Court of Appeal and is interesting as only showing that in England there is in Section 3 Sub-section (3) of the Rent and Mortgage Interest (Restrictions) Act of 1939 which repeats in practically the same words in Section 12.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['England']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[\""Vickery v. Martin', (1944) 1 K B 679\""]"", ""PROVISION"": ""['Section 3 Sub-section (3)', 'Section 12']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Rent and Mortgage Interest (Restrictions) Act of 1939']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['England']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[""Vickery v. Martin\', (1944) 1 K B 679""]', 'PROVISION': ""['Section 3 Sub-section (3)', 'Section 12']"", 'RESPONDENT': '[]', 'STATUTE': ""['Rent and Mortgage Interest (Restrictions) Act of 1939']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The next case, 'Vickery v. Martin', (1944) 1 K B 679, is a decision of the Court of Appeal and is interesting as only showing that in England there is in Section 3 Sub-section (3) of the Rent and Mortgage Interest (Restrictions) Act of 1939 which repeats in practically the same words in Section 12. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['England']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[\""Vickery v. Martin', (1944) 1 K B 679\""]"", ""PROVISION"": ""['Section 3 Sub-section (3)', 'Section 12']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Rent and Mortgage Interest (Restrictions) Act of 1939']"", ""WITNESS"": ""[]""} </s>"
"High Court Of Madhya Pradesh : Jabalpur. First Appeal No.485/2004 Girdhar Jetha and others. Vs. Municipal Corporation, Through the Commissioner Nagar Nigam, Jabalpur. Coram : Hon'ble Shri Justice Rajendra Menon, J. Hon'ble Shri Justice K.K. Trivedi, J. Whether approved for reporting ? - Yes/No. Shri Kishore Shrivastava, learned Senior counsel and Shri Naman Nagrath, learned Senior counsel with Shri Kapil Jain and Shri Himanshu Mishra, learned counsel for the appellants. Shri Anshuman Singh, learned counsel for the respondent. Judgment Reserved on : 18.11.2015. Date of Decision : 27.11.2015 Judgment","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh : Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rajendra Menon', 'K.K. Trivedi']"", ""LAWYER"": ""['Kishore Shrivastava', 'Naman Nagrath', 'Kapil Jain', 'Himanshu Mishra', 'Anshuman Singh']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Girdhar Jetha']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Municipal Corporation']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Madhya Pradesh : Jabalpur']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['Rajendra Menon', 'K.K. Trivedi']"", 'LAWYER': ""['Kishore Shrivastava', 'Naman Nagrath', 'Kapil Jain', 'Himanshu Mishra', 'Anshuman Singh']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Girdhar Jetha']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Municipal Corporation']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: High Court Of Madhya Pradesh : Jabalpur. First Appeal No.485/2004 Girdhar Jetha and others. Vs. Municipal Corporation, Through the Commissioner Nagar Nigam, Jabalpur. Coram : Hon'ble Shri Justice Rajendra Menon, J. Hon'ble Shri Justice K.K. Trivedi, J. Whether approved for reporting ? - Yes/No. Shri Kishore Shrivastava, learned Senior counsel and Shri Naman Nagrath, learned Senior counsel with Shri Kapil Jain and Shri Himanshu Mishra, learned counsel for the appellants. Shri Anshuman Singh, learned counsel for the respondent. Judgment Reserved on : 18.11.2015. Date of Decision : 27.11.2015 Judgment [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Madhya Pradesh : Jabalpur']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['Rajendra Menon', 'K.K. Trivedi']"", ""LAWYER"": ""['Kishore Shrivastava', 'Naman Nagrath', 'Kapil Jain', 'Himanshu Mishra', 'Anshuman Singh']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Girdhar Jetha']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Municipal Corporation']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Relying upon the Act the plaintiff contended that that Act rendered the order of excommunication ineffective.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Relying upon the Act the plaintiff contended that that Act rendered the order of excommunication ineffective. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It appears that a writ petition, No. 986 of 1981, was filed on the Original Side of the Bombay High Court by and on behalf of the pavement dwellers claiming reliefs similar to those claimed in the instant batch of writ petitions.","{""CASE_NUMBER"": ""['No. 986 of 1981']"", ""COURT"": ""['Bombay High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': ""['No. 986 of 1981']"", 'COURT': ""['Bombay High Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It appears that a writ petition, No. 986 of 1981, was filed on the Original Side of the Bombay High Court by and on behalf of the pavement dwellers claiming reliefs similar to those claimed in the instant batch of writ petitions. [/INST]
 {""CASE_NUMBER"": ""['No. 986 of 1981']"", ""COURT"": ""['Bombay High Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
List of Vouchers and other Documents handed over to CBI by Senior Manager and Assistant Manager.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['CBI']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['CBI']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: List of Vouchers and other Documents handed over to CBI by Senior Manager and Assistant Manager. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['CBI']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Regulation 32,1 and previous analogous provisions have been in force for a considerable time by now.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Regulation 32,1']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Regulation 32,1']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Regulation 32,1 and previous analogous provisions have been in force for a considerable time by now. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Regulation 32,1']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Thus, the case-law rather than establishing a practice of separate maintenance proved the contrary.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Thus, the case-law rather than establishing a practice of separate maintenance proved the contrary. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
The expression 'comprehensive policy' was explained by the Supreme Court in National Insurance Co. Ltd. v. Jugal Kishore 1988 ACJ 270 (SC).,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['National Insurance Co. Ltd. v. Jugal Kishore 1988 ACJ 270 (SC)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['Supreme Court']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': ""['National Insurance Co. Ltd. v. Jugal Kishore 1988 ACJ 270 (SC)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The expression 'comprehensive policy' was explained by the Supreme Court in National Insurance Co. Ltd. v. Jugal Kishore 1988 ACJ 270 (SC). [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['Supreme Court']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['National Insurance Co. Ltd. v. Jugal Kishore 1988 ACJ 270 (SC)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"But, in view of Rule 3 of the Rules, a suit filed before a family court has to be treated only as `petition' and consequently, relief sought for in any such proceeding will be an `order' or `injuction', as the case may be.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rule 3']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Rule 3']"", 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: But, in view of Rule 3 of the Rules, a suit filed before a family court has to be treated only as `petition' and consequently, relief sought for in any such proceeding will be an `order' or `injuction', as the case may be. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rule 3']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In The High Court Of Kerala At Ernakulam Crl.MC.No. 4160 of 2009() 1. Perumapallipad Payyuril Hydru Haji, ... Petitioner 2. Perumapallipad Payyuril Fasalu, 3. Perumapallippad Payyuril Anwar, Vs 1. The State Of Kerala, Represented By ... Respondent 2. Royal Hospital (P) Ltd., For Petitioner :Sri.C.P.Mohammed Nias For Respondent :Sri.Millu Dandapani The Hon'ble Mr. Justice M.Sasidharan Nambiar Dated :24/11/2010 O R D E R M.Sasidharan Nambiar, J. -------------------------- Crl.M.C.No.4160 of 2009 -------------------------- Order","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.Sasidharan Nambiar']"", ""LAWYER"": ""['C.P.Mohammed Nias', 'Millu Dandapani']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Perumapallipad Payyuril Hydru Haji', 'Perumapallipad Payyuril Fasalu', 'Perumapallippad Payyuril Anwar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala', 'Royal Hospital (P) Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['High Court Of Kerala At Ernakulam']"", 'DATE': '[]', 'GPE': '[]', 'JUDGE': ""['M.Sasidharan Nambiar']"", 'LAWYER': ""['C.P.Mohammed Nias', 'Millu Dandapani']"", 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Perumapallipad Payyuril Hydru Haji', 'Perumapallipad Payyuril Fasalu', 'Perumapallippad Payyuril Anwar']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['State Of Kerala', 'Royal Hospital (P) Ltd.']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In The High Court Of Kerala At Ernakulam Crl.MC.No. 4160 of 2009() 1. Perumapallipad Payyuril Hydru Haji, ... Petitioner 2. Perumapallipad Payyuril Fasalu, 3. Perumapallippad Payyuril Anwar, Vs 1. The State Of Kerala, Represented By ... Respondent 2. Royal Hospital (P) Ltd., For Petitioner :Sri.C.P.Mohammed Nias For Respondent :Sri.Millu Dandapani The Hon'ble Mr. Justice M.Sasidharan Nambiar Dated :24/11/2010 O R D E R M.Sasidharan Nambiar, J. -------------------------- Crl.M.C.No.4160 of 2009 -------------------------- Order [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['High Court Of Kerala At Ernakulam']"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""['M.Sasidharan Nambiar']"", ""LAWYER"": ""['C.P.Mohammed Nias', 'Millu Dandapani']"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Perumapallipad Payyuril Hydru Haji', 'Perumapallipad Payyuril Fasalu', 'Perumapallippad Payyuril Anwar']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['State Of Kerala', 'Royal Hospital (P) Ltd.']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Balram Kanel, Indore 509103 167 09 Amarnath Verma, Indore 517069 156 190 142 48 58","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Indore']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Balram Kanel', 'Amarnath Verma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Indore']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Balram Kanel', 'Amarnath Verma']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Balram Kanel, Indore 509103 167 09 Amarnath Verma, Indore 517069 156 190 142 48 58 [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Indore']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Balram Kanel', 'Amarnath Verma']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
He would submit that such rules were brought into statute by Notification No.13/2008-CE(NT) and was made applicable from 01.03.2008.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['01.03.2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['01.03.2008']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: He would submit that such rules were brought into statute by Notification No.13/2008-CE(NT) and was made applicable from 01.03.2008. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['01.03.2008']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
D.O. Letter No. 2088/ 94-3 TNLAS (BI) dated 17-2-1994,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['17-2-1994']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['17-2-1994']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: D.O. Letter No. 2088/ 94-3 TNLAS (BI) dated 17-2-1994 [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['17-2-1994']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"In the Judgment dated 26/08/1981, the then Ld. Sub­Judge had also accepted the testimony of defendant no. 2 Sh. Umrao Singh that the thoroughfare was used by the predecessor in interest of the present plaintiffs.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['26/08/1981']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Umrao Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['26/08/1981']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['Umrao Singh']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: In the Judgment dated 26/08/1981, the then Ld. Sub­Judge had also accepted the testimony of defendant no. 2 Sh. Umrao Singh that the thoroughfare was used by the predecessor in interest of the present plaintiffs. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['26/08/1981']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['Umrao Singh']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"LMJ on 4th December, 2014 raised some issues and chose not to raise other issues.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['4th December, 2014']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['LMJ']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['4th December, 2014']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['LMJ']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: LMJ on 4th December, 2014 raised some issues and chose not to raise other issues. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['4th December, 2014']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['LMJ']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Today no one in India can ask for primary education as a right as only ten per cent of the population get primary education.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['India']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Today no one in India can ask for primary education as a right as only ten per cent of the population get primary education. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['India']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"It has a factory at Sunder Baug, Deonar, Bombay, which is equipped with machinery and plants for processing of man-made grey- fabric The machinery and equipment installed in the petitioners factory?","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Deonar', 'Bombay']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': ""['Deonar', 'Bombay']"", 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: It has a factory at Sunder Baug, Deonar, Bombay, which is equipped with machinery and plants for processing of man-made grey- fabric The machinery and equipment installed in the petitioners factory? [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""['Deonar', 'Bombay']"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"At the outset, we point out that the appellant-Cooper Kamgar Sangh is a recognised union under the Industrial Disputes Act, 1947 and the MRTU & PULP Act, 1971.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Cooper Kamgar Sangh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Industrial Disputes Act, 1947', 'MRTU & PULP Act, 1971']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': ""['Cooper Kamgar Sangh']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Industrial Disputes Act, 1947', 'MRTU & PULP Act, 1971']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: At the outset, we point out that the appellant-Cooper Kamgar Sangh is a recognised union under the Industrial Disputes Act, 1947 and the MRTU & PULP Act, 1971. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""['Cooper Kamgar Sangh']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Industrial Disputes Act, 1947', 'MRTU & PULP Act, 1971']"", ""WITNESS"": ""[]""} </s>"
"Consequently, the provisions of Transfer of Property Act cannot be telescoped into the provisions of the Registration Act so as to demand of the Registering Authority to register instrument from the title holders.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Transfer of Property Act', 'Registration Act']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': ""['Transfer of Property Act', 'Registration Act']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Consequently, the provisions of Transfer of Property Act cannot be telescoped into the provisions of the Registration Act so as to demand of the Registering Authority to register instrument from the title holders. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Transfer of Property Act', 'Registration Act']"", ""WITNESS"": ""[]""} </s>"
Appellant Moola Ram declared that they were around to teach Omkar a lesson for not allowing the freight rate to be enhanced.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Omkar']"", ""PETITIONER"": ""['Moola Ram']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Omkar']"", 'PETITIONER': ""['Moola Ram']"", 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Appellant Moola Ram declared that they were around to teach Omkar a lesson for not allowing the freight rate to be enhanced. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Omkar']"", ""PETITIONER"": ""['Moola Ram']"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The notification of the Government of India dated the 6th November 1967 under which a Commission of Inquiry was appointed to inquire into the communal disturbances which occurred in the country also shows that such disturbances occurred in different parts of the country from August till October, 1967.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['6th November 1967']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Government of India']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['6th November 1967']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': ""['Government of India']"", 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The notification of the Government of India dated the 6th November 1967 under which a Commission of Inquiry was appointed to inquire into the communal disturbances which occurred in the country also shows that such disturbances occurred in different parts of the country from August till October, 1967. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['6th November 1967']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""['Government of India']"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Commenting upon the extent of immunity which the Judges of the superior courts must have for preserving independence of the judiciary, the authors of Salmond and Heuston on the Law of Torts, 21st Edn., 1996 in Chapter XIX observe: A Judge of one of the superior courts is absolutely exempt from all civil liability for acts done by him in the execution of his judicial functions.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Salmond', 'Heuston']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Salmond', 'Heuston']"", 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Commenting upon the extent of immunity which the Judges of the superior courts must have for preserving independence of the judiciary, the authors of Salmond and Heuston on the Law of Torts, 21st Edn., 1996 in Chapter XIX observe: A Judge of one of the superior courts is absolutely exempt from all civil liability for acts done by him in the execution of his judicial functions. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Salmond', 'Heuston']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Respondent No. 1 has examined Dr. Kantilal Patel who treated respondent No. 1 for quite sometime for his fracture injury.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Kantilal Patel']""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': ""['Kantilal Patel']""}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Respondent No. 1 has examined Dr. Kantilal Patel who treated respondent No. 1 for quite sometime for his fracture injury. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""['Kantilal Patel']""} </s>"
"The aforesaid submission of the learned counsel for the revisionist cannot be accepted inasmuch as by insertion of Section 7-A in the Act, 2000, the legislative intent becomes clear by a bare reading of its proviso that the claim of juvenility shall be dermined in terms of the provisions contained in that Act and the rules made thereunder.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 7-A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Act, 2000']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Section 7-A']"", 'RESPONDENT': '[]', 'STATUTE': ""['Act, 2000']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The aforesaid submission of the learned counsel for the revisionist cannot be accepted inasmuch as by insertion of Section 7-A in the Act, 2000, the legislative intent becomes clear by a bare reading of its proviso that the claim of juvenility shall be dermined in terms of the provisions contained in that Act and the rules made thereunder. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Section 7-A']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['Act, 2000']"", ""WITNESS"": ""[]""} </s>"
"Mr. Mehta further submitted that once the said conditions are fulfilled, then the Income-tax Officer is under an obligation to register the firm and in support of it, he referred us to a decision in the cases of Agarwal and Co. v. CIT [1970] 77 ITR 10 (SC) and of Ratanchand Darbarilal v. CIT [1985] 155 ITR 720 (SC). 63.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mehta']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Agarwal and Co. v. CIT [1970] 77 ITR 10 (SC)', 'Ratanchand Darbarilal v. CIT [1985] 155 ITR 720 (SC)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': ""['Mehta']"", 'PETITIONER': '[]', 'PRECEDENT': ""['Agarwal and Co. v. CIT [1970] 77 ITR 10 (SC)', 'Ratanchand Darbarilal v. CIT [1985] 155 ITR 720 (SC)']"", 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Mr. Mehta further submitted that once the said conditions are fulfilled, then the Income-tax Officer is under an obligation to register the firm and in support of it, he referred us to a decision in the cases of Agarwal and Co. v. CIT [1970] 77 ITR 10 (SC) and of Ratanchand Darbarilal v. CIT [1985] 155 ITR 720 (SC). 63. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""['Mehta']"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""['Agarwal and Co. v. CIT [1970] 77 ITR 10 (SC)', 'Ratanchand Darbarilal v. CIT [1985] 155 ITR 720 (SC)']"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"The writ petition is allowed and the impugned order dated 13/14.1.1999 passed by the District Magistrate, Muzaffarnagar is quashed.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""['District Magistrate, Muzaffarnagar']"", ""DATE"": ""['13/14.1.1999']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': ""['District Magistrate, Muzaffarnagar']"", 'DATE': ""['13/14.1.1999']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: The writ petition is allowed and the impugned order dated 13/14.1.1999 passed by the District Magistrate, Muzaffarnagar is quashed. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""['District Magistrate, Muzaffarnagar']"", ""DATE"": ""['13/14.1.1999']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Whether ignoring the oral and the documentary evidence, the First Appellate Court decided that the suit property is not an ancestral property and that the settlement deed, Ex.B4 executed was valid?","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Whether ignoring the oral and the documentary evidence, the First Appellate Court decided that the suit property is not an ancestral property and that the settlement deed, Ex.B4 executed was valid? [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"Justices;, for instance act judicially when administering the law in court, and they also act judicially when determining in their private room what is right and fair in some administrative matter brought before them, as, for instance, levying a rate.""","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': '[]', 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Justices;, for instance act judicially when administering the law in court, and they also act judicially when determining in their private room what is right and fair in some administrative matter brought before them, as, for instance, levying a rate."" [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
Respondent No.3 United India Insurance Company Limited is directed to deposit the enhanced amount within 30 days along with the interest.,"{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['United India Insurance Company Limited']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': '[]', 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': '[]', 'RESPONDENT': ""['United India Insurance Company Limited']"", 'STATUTE': '[]', 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: Respondent No.3 United India Insurance Company Limited is directed to deposit the enhanced amount within 30 days along with the interest. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""[]"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""[]"", ""RESPONDENT"": ""['United India Insurance Company Limited']"", ""STATUTE"": ""[]"", ""WITNESS"": ""[]""} </s>"
"That direction was given in the above writ application after coming to a conclusion that the bar beyond six months as provided by the third proviso to Rule 141 of the West Bengal Motor Vehicles Rules had been removed by virtue of the amended notification dated December 23, 2004.","{""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['December 23, 2004']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rule 141']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['West Bengal Motor Vehicles Rules']"", ""WITNESS"": ""[]""}","{'CASE_NUMBER': '[]', 'COURT': '[]', 'DATE': ""['December 23, 2004']"", 'GPE': '[]', 'JUDGE': '[]', 'LAWYER': '[]', 'ORG': '[]', 'OTHER_PERSON': '[]', 'PETITIONER': '[]', 'PRECEDENT': '[]', 'PROVISION': ""['Rule 141']"", 'RESPONDENT': '[]', 'STATUTE': ""['West Bengal Motor Vehicles Rules']"", 'WITNESS': '[]'}","<s> [INST] You are solving the NER problem in indian legal documents. You have to extract from the text, entities related to each of the following categories: CASE_NUMBER, COURT, DATE, GPE, JUDGE, LAWYER, ORG, OTHER_PERSON, PETITIONER, PRECEDENT, PROVISION, RESPONDENT, STATUTE, WITNESS. Extract them exactly as they are in the text (Don't format them). Your output always should be a dictionary in a json readable format (category: list of entities). Find the entities in the following text: That direction was given in the above writ application after coming to a conclusion that the bar beyond six months as provided by the third proviso to Rule 141 of the West Bengal Motor Vehicles Rules had been removed by virtue of the amended notification dated December 23, 2004. [/INST]
 {""CASE_NUMBER"": ""[]"", ""COURT"": ""[]"", ""DATE"": ""['December 23, 2004']"", ""GPE"": ""[]"", ""JUDGE"": ""[]"", ""LAWYER"": ""[]"", ""ORG"": ""[]"", ""OTHER_PERSON"": ""[]"", ""PETITIONER"": ""[]"", ""PRECEDENT"": ""[]"", ""PROVISION"": ""['Rule 141']"", ""RESPONDENT"": ""[]"", ""STATUTE"": ""['West Bengal Motor Vehicles Rules']"", ""WITNESS"": ""[]""} </s>"
